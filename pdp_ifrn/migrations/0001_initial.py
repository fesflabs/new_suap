# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-07-23 08:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models
import djtools.middleware.threadlocals


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('comum', '0002_auto_20190814_1443'),
        ('rh', '0002_auto_20190902_1545'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaTematica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Área Temática',
                'verbose_name_plural': 'Áreas Temáticas',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='CompetenciaAssociada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Competência Associada',
                'verbose_name_plural': 'Competências Associadas',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='EnfoqueDesenvolvimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Enfoque de Desenvolvimento',
                'verbose_name_plural': 'Enfoques de Desenvolvimento',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='EspecificacaoTipoAprendizagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Especificação de Tipo de Aprendizagem',
                'verbose_name_plural': 'Especificações de Tipo de Aprendizagem',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='HistoricoStatusResposta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('status', djtools.db.models.CharFieldPlus(default=(('pendente', 'Pendente'), ('deferida', 'Deferida'), ('indeferida', 'Indeferida'), ('aprovada', 'Aprovada'), ('reprovada', 'Reprovada'), ('homologada', 'Homologada'), ('rejeitada', 'Rejeitada')), max_length=10, verbose_name='Situação')),
            ],
            options={
                'verbose_name': 'Situação de Resposta do Questionário PDP',
                'verbose_name_plural': 'Situações de Resposta do Questionário PDP',
                'ordering': ('-data',),
            },
        ),
        migrations.CreateModel(
            name='Necessidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Descrição')),
                ('area_tematica', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.AreaTematica', verbose_name='Área Temática')),
            ],
            options={
                'verbose_name': 'Necessidade',
                'verbose_name_plural': 'Necessidades',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='PDP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
                ('data_inicial', models.DateField(verbose_name='Data Inicial para Lançamento')),
                ('data_final', models.DateField(verbose_name='Data Final para Lançamento')),
                ('preenchimento_habilitado', models.BooleanField(default=True, help_text='Habilita o módulo de preenchimento do PDP', verbose_name='Habilita formulário PDP')),
                ('ano', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='comum.Ano', verbose_name='Ano')),
            ],
            options={
                'verbose_name': 'PDP',
                'verbose_name_plural': 'PDPs',
                'ordering': ['ano'],
            },
        ),
        migrations.CreateModel(
            name='PublicoAlvo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Público-Alvo',
                'verbose_name_plural': 'Públicos-Alvo',
            },
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Cadastrada Em')),
                ('justificativa_necessidade', models.TextField(help_text='Descreva do que serão capazes se for atendida sua necessidade e o resultado que trará para o IFMA. Ex: Para gerir contratos de papéis para uma utilização racional dos materiais que resultará na redução do consumo do papel (máximo de 200 caracteres).', max_length=200, verbose_name='Essa necessidade servirá para e resultará em')),
                ('acao_transversal', djtools.db.models.CharFieldPlus(choices=[('sim', 'Sim'), ('nao', 'Não')], help_text='Essa necessidade de desenvolvimento é transversal para o IFMA?', max_length=3, verbose_name='Ação Transversal')),
                ('qtd_pessoas_beneficiadas', models.PositiveSmallIntegerField(help_text='Quantos servidores serão beneficiados pela ação de desenvolvimento para essa necessidade?', verbose_name='Qtd de Pessoas Beneficidas')),
                ('modalidade', djtools.db.models.CharFieldPlus(choices=[('presencial', 'Presencial'), ('adistancia', 'À distância'), ('hibrido', 'Híbrido'), ('indefinido', 'Não definido')], max_length=15, verbose_name='Modalidade')),
                ('ano_termino_acao', models.PositiveSmallIntegerField(help_text='Em caso de já possuir uma opção em consideração, qual o término previsto da ação de desenvolvimento para essa necessidade?', verbose_name='Término da Ação')),
                ('onus_inscricao', djtools.db.models.CharFieldPlus(choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=3, verbose_name='Ônus com inscrição?')),
                ('valor_onus_inscricao', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da inscrição')),
                ('atendida_pelo_cfs', djtools.db.models.CharFieldPlus(choices=[('sim', 'Sim'), ('nao', 'Não')], help_text='A ação de desenvolvimento para essa necessidade pode ser ofertada pelo Centro de Formação de Servidores?', max_length=3, verbose_name='Pode ser atendida pelo CFS?')),
                ('area_tematica', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.AreaTematica', verbose_name='Área Temática')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rh.UnidadeOrganizacional')),
                ('competencia_associada', models.ManyToManyField(help_text='Essa necessidade está associada a quais competências?', to='pdp_ifrn.CompetenciaAssociada', verbose_name='Competências Associadas')),
                ('enfoque_desenvolvimento', djtools.db.models.ForeignKeyPlus(help_text='Qual a área que melhor identifica a temática relacionada a essa necessidade de desenvolvimento? (Macros)', on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.EnfoqueDesenvolvimento', verbose_name='Enfoque do Desenvolvimento')),
                ('especificacao_tipo_aprendizagem', djtools.db.models.ForeignKeyPlus(help_text='De acordo com a resposta anterior, qual opção melhor caracteriza o subtipo de aprendizagem?', on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.EspecificacaoTipoAprendizagem', verbose_name='Especificação de Tipo de Aprendizagem')),
                ('necessidade', djtools.db.models.ForeignKeyPlus(help_text='Que necessidade de desenvolvimento o Campus/Reitoria possui?', on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.Necessidade', verbose_name='Necessidade')),
                ('pdp', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.PDP', verbose_name='PDP')),
                ('publico_alvo', djtools.db.models.ForeignKeyPlus(help_text='Qual o público-alvo da ação de desenvolvimento para essa necessidade?', on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.PublicoAlvo', verbose_name='Público-Alvo')),
                ('servidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rh.Servidor')),
                ('setor_beneficiado', djtools.db.models.ForeignKeyPlus(help_text='Qual unidade funcional do IFMA será beneficiada pela ação de desenvolvimento para essa necessidade?', on_delete=django.db.models.deletion.CASCADE, related_name='setor_beneficiado', to='rh.Setor', verbose_name='Setor Beneficiado')),
            ],
            options={
                'verbose_name': 'Resposta do Questionário PDP (Plano de Desenvolvimento de Pessoas)',
                'verbose_name_plural': 'Respostas do Questionários PDP (Plano de Desenvolvimento de Pessoas)',
                'ordering': ('servidor',),
                'permissions': (('pode_deferir_respostas_pdp', 'Pode deferir respostas do PDP'), ('pode_aprovar_respostas_pdp', 'Pode aprovar respostas do PDP'), ('pode_homologar_respostas_pdp', 'Pode homologar respostas do PDP')),
            },
        ),
        migrations.CreateModel(
            name='TipoAprendizagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Nome')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Aprendizagem',
                'verbose_name_plural': 'Tipos de Aprendizagem',
                'ordering': ('nome',),
            },
        ),
        migrations.AddField(
            model_name='resposta',
            name='tipo_aprendizagem',
            field=djtools.db.models.ForeignKeyPlus(help_text='A ação de desenvolvimento para essa necessidade deve preferencialmente ser ofertada em qual tipo de aprendizagem?', on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.TipoAprendizagem', verbose_name='Tipo de Aprendizagem'),
        ),
        migrations.AddField(
            model_name='historicostatusresposta',
            name='resposta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_status', to='pdp_ifrn.Resposta'),
        ),
        migrations.AddField(
            model_name='historicostatusresposta',
            name='usuario',
            field=djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='especificacaotipoaprendizagem',
            name='tipo_aprendizagem',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pdp_ifrn.TipoAprendizagem', verbose_name='Tipo de Aprendizagem'),
        ),
    ]
