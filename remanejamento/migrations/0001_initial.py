# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 15:05


from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL), ('rh', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('avaliadores', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={'ordering': ['-edital', 'descricao']},
        ),
        migrations.CreateModel(
            name='DisciplinaItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('sequencia', models.PositiveIntegerField(verbose_name='Sequência')),
                (
                    'nao_avaliar',
                    models.BooleanField(default=False, help_text='será exibido na tela de avaliação, mas não será solicitado a porcentagem.', verbose_name='Não avaliar'),
                ),
                ('disciplina', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Disciplina')),
            ],
            options={
                'verbose_name': 'Critério de avaliação de disciplina',
                'verbose_name_plural': 'Critérios de avaliação de disciplinas',
                'ordering': ['disciplina', 'sequencia'],
            },
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Link para mais informações')),
                ('tem_anexo', models.BooleanField(default=False, help_text='Indica que deverá ser anexado um arquivo no formulário de inscrição.')),
                (
                    'chave_hash',
                    models.CharField(help_text='Irá compor a chave de autenticidade da inscrição.<br/> Em nenhuma hipótese um candidato pode ver este campo.', max_length=128),
                ),
                ('inicio_recursos_edital', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Início dos Recursos ao Edital')),
                ('fim_recursos_edital', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Fim dos Recursos ao Edital')),
                ('resultado_recursos_edital', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Resultado dos Recursos ao Edital')),
                ('inicio_inscricoes', djtools.db.models.DateTimeFieldPlus(verbose_name='Início das inscrições')),
                ('fim_inscricoes', djtools.db.models.DateTimeFieldPlus(verbose_name='Fim das inscrições')),
                ('inicio_avaliacoes', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Início das avaliações')),
                ('fim_avaliacoes', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Fim das avaliações')),
                ('inicio_desistencias', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Início da Desistência do edital')),
                ('fim_desistencias', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Fim da desistência do edital')),
                ('inicio_recursos', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Início dos recursos do resultado')),
                ('fim_recursos', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Fim dos recursos do resultado')),
                ('resultado_recursos', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Resultado dos recursos ao resultado')),
                ('inicio_resultados', djtools.db.models.DateTimeFieldPlus(verbose_name='Resultado Final no SUAP')),
                (
                    'campus',
                    models.ManyToManyField(blank=True, help_text='Informe os campi participantes deste remanejamento.', to='rh.UnidadeOrganizacional', verbose_name='Campus'),
                ),
                ('cargos', models.ManyToManyField(help_text='Servidores destes cargos poderão se inscrever neste edital.', to='rh.CargoEmprego')),
                ('coordenadores', models.ManyToManyField(blank=True, help_text='Os coordenadores poderão acompanhar as inscrições deste edital.', to=settings.AUTH_USER_MODEL)),
            ],
            options={'verbose_name': 'Edital', 'verbose_name_plural': 'Editais'},
        ),
        migrations.CreateModel(
            name='EditalRecurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurso_texto', models.TextField(blank=True, verbose_name='Texto do Recurso')),
                ('dh_recurso', models.DateTimeField(auto_now_add=True, verbose_name='Horário de cadastro do recurso')),
                ('recurso_resposta', models.TextField(blank=True, verbose_name='Resposta ao Recurso')),
                ('dh_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Horário de cadastro da resposta ao recurso')),
                ('recurso_respondido', models.BooleanField(default=False)),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Edital')),
                ('pessoa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Pessoa', verbose_name='Servidor')),
            ],
            options={'verbose_name': 'Recurso ao Edital', 'verbose_name_plural': 'Recursos ao Edital'},
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario', models.DateTimeField(auto_now_add=True, verbose_name='Horário')),
                ('inicio_exercicio', djtools.db.models.DateFieldPlus(verbose_name='Início de exercício')),
                ('anexo', models.FileField(blank=True, max_length=255, upload_to='remanejamento/anexos/')),
                ('dou_numero', models.CharField(max_length=255, verbose_name='Número')),
                ('dou_data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('dou_pagina', models.CharField(max_length=255, verbose_name='Página')),
                ('dou_sessao', models.CharField(max_length=255, verbose_name='Seção')),
                ('classificacao_concurso', models.PositiveIntegerField(verbose_name='Classificação no concurso para ingresso no IFRN')),
                ('frase_pura', models.TextField(help_text='Este campo é o que o candidato pode ver')),
                ('frase_pura_com_chave', models.TextField(help_text='Em nenhuma hipótese um candidato pode ver este campo')),
                (
                    'frase_hash',
                    models.CharField(
                        help_text='Este campo é o que o candidato pode ver. Juntamente com "frase_pura", é a garantia de que os dados inseridos pelo usuário estão intactos.',
                        max_length=128,
                    ),
                ),
                ('recurso_texto', models.TextField(blank=True, verbose_name='Texto do Recurso')),
                ('confirmada', models.BooleanField(default=True)),
                ('observacao', models.TextField(blank=True, verbose_name='Observações')),
                ('data_desistencia', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data/hora da desistência')),
                (
                    'avaliacao_status',
                    models.CharField(
                        blank=True,
                        choices=[
                            ['Pendente', 'Pendente'],
                            ['Aguardando habilitação da banca', 'Aguardando habilitação da banca'],
                            ['Habilitado', 'Habilitado'],
                            ['Não habilitado', 'Não habilitado'],
                            ['Avaliado', 'Avaliado'],
                            ['Apto', 'Apto'],
                            ['Não apto', 'Não apto'],
                        ],
                        default='Pendente',
                        max_length=255,
                        verbose_name='Status avaliação',
                    ),
                ),
                ('avaliacao_score', models.FloatField(blank=True, null=True, verbose_name='Score')),
                ('avaliacao_recurso', models.TextField(blank=True, verbose_name='Resposta ao recurso')),
                (
                    'avaliacao_avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Avaliador da inscrição'
                    ),
                ),
                ('disciplina', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Disciplina')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Edital')),
                ('jornada_trabalho', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.JornadaTrabalho')),
                ('pessoa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Pessoa')),
            ],
            options={'verbose_name': 'Inscrição', 'verbose_name_plural': 'Inscrições'},
        ),
        migrations.CreateModel(
            name='InscricaoDisciplinaItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apto', models.BooleanField(default=False)),
                ('apto_percentual', models.IntegerField()),
                ('observacao', models.TextField(blank=True, verbose_name='Observações')),
                ('disciplina_item', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.DisciplinaItem')),
                ('inscricao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Inscricao')),
            ],
            options={'ordering': ['inscricao', 'disciplina_item']},
        ),
        migrations.CreateModel(
            name='InscricaoItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferencia', models.PositiveIntegerField()),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional')),
                ('inscricao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Inscricao')),
            ],
            options={'ordering': ['inscricao', 'preferencia']},
        ),
        migrations.AddField(model_name='disciplina', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='remanejamento.Edital')),
        migrations.AlterUniqueTogether(name='inscricaoitem', unique_together=set([('inscricao', 'campus'), ('inscricao', 'preferencia')])),
        migrations.AlterUniqueTogether(name='inscricaodisciplinaitem', unique_together=set([('inscricao', 'disciplina_item')])),
        migrations.AlterUniqueTogether(name='disciplinaitem', unique_together=set([('disciplina', 'sequencia'), ('disciplina', 'descricao')])),
        migrations.AlterUniqueTogether(name='disciplina', unique_together=set([('edital', 'descricao')])),
    ]
