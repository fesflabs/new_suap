# Generated by Django 2.2.7 on 2019-12-18 10:58

from django.db import migrations


def corrigir_campi(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Evento = apps.get_model('eventos', 'Evento')

    UnidadeOrganizacional = apps.get_model('rh', 'UnidadeOrganizacional')
    Configuracao = apps.get_model('comum', 'Configuracao')
    choices_uo = [
        1,  # UnidadeOrganizacional.TIPO_CAMPUS_NAO_PRODUTIVO,
        2,  # UnidadeOrganizacional.TIPO_CAMPUS_PRODUTIVO,
        3,  # UnidadeOrganizacional.TIPO_CAMPUS_EAD,
        4,  # UnidadeOrganizacional.TIPO_REITORIA,
    ]

    # O try abaixo evita o erro "__fake__.DoesNotExist: Configuracao matching query does not exist."ao tentar criar
    # um banco de dados do zero a partir do comando "python manage.py migrate".
    try:
        eh_setor_suap = Configuracao.objects.get(app='comum', chave='setores').valor == 'SUAP'
    except Configuracao.DoesNotExist:
        # Adotando o padr√£o usado pelo IFRN.
        eh_setor_suap = True

    uos = UnidadeOrganizacional.objects.all()
    if eh_setor_suap:
        uos = uos.filter(setor__codigo__isnull=True, setor__excluido=False, tipo__in=choices_uo)

    uo_ids = uos.values_list('id', flat=True)
    for evento in Evento.objects.exclude(campus__in=uo_ids):
        evento.campus = evento.campus.equivalente
        evento.save()


class Migration(migrations.Migration):

    dependencies = [('eventos', '0001_initial')]

    operations = [migrations.RunPython(corrigir_campi)]
