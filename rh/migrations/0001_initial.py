# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 14:43


import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import djtools.db.models
import djtools.thumbs
import djtools.storages
import djtools.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL), ('contenttypes', '0002_remove_content_type_name'), ('comum', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='AcaoSaude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data Início da Ação')),
                ('data_fim', djtools.db.models.DateFieldPlus(blank=True, verbose_name='Data Final da Ação')),
                ('periodo_inscricao_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de Início das Inscrições')),
                ('periodo_inscricao_fim', djtools.db.models.DateFieldPlus(verbose_name='Data Fim das Inscrições')),
                ('dias_semanas', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Dias da Semana')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
            ],
            options={'verbose_name': 'Ação de Saúde', 'verbose_name_plural': 'Ações de Saúde'},
        ),
        migrations.CreateModel(
            name='AfastamentoSiape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=4, unique=True)),
                ('sigla', models.CharField(max_length=10)),
                ('nome', models.CharField(max_length=60)),
                ('tipo', models.PositiveIntegerField(choices=[(1, 'Faltas'), (2, 'Atrasos'), (3, 'Licença Incentivada'), (4, 'Outros')])),
                ('interrompe_pagamento', models.BooleanField(blank=True, default=False)),
                ('interrompe_tempo_servico', models.BooleanField(blank=True, default=False)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='AgendaAtendimentoHorario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_inicio', djtools.db.models.TimeFieldPlus(verbose_name='Início do Atendimento')),
                ('hora_fim', djtools.db.models.TimeFieldPlus(verbose_name='Fim do Atendimento')),
                ('quantidade_vaga', models.PositiveIntegerField(default=0, verbose_name='Quantidade de Vagas')),
                ('acao_saude', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.AcaoSaude', verbose_name='Ação de Saúde')),
            ],
            options={'verbose_name': 'Horário de Atendimento', 'verbose_name_plural': 'Horários de Atendimento'},
        ),
        migrations.CreateModel(
            name='AreaConhecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=8, unique=True, verbose_name='Código')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('superior', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.AreaConhecimento', verbose_name='Superior')),
            ],
            options={'verbose_name': 'Área do Conhecimento', 'verbose_name_plural': 'Áreas de Conhecimento'},
        ),
        migrations.CreateModel(
            name='AreaVinculacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('ordem', models.IntegerField(blank=True, default=1)),
            ],
            options={'verbose_name': 'Área de Vinculação', 'verbose_name_plural': 'Áreas de Vinculação', 'ordering': ('ordem',)},
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Atividade', 'verbose_name_plural': 'Atividades', 'db_table': 'atividade', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='Avaliador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, help_text='Somente avaliadores com situação ativa podem avaliar', verbose_name='Ativo')),
                ('email_contato', models.EmailField(blank=True, max_length=254, verbose_name='Email para Contato')),
                ('padrao', models.BooleanField(default=True, help_text='Somente avaliadores com situação ativa podem avaliar', verbose_name='Ativo')),
                ('matricula_siape', models.CharField(max_length=50, verbose_name='Matrícula SIAPE')),
                ('numero_documento_identificacao', models.CharField(help_text='Somente números', max_length=50, verbose_name='Número do Documento de Identificação')),
                ('emissor_documento_identificacao', models.CharField(max_length=50, verbose_name='Emissor do Documento de Identificação')),
                ('pis_pasep', models.CharField(max_length=50, verbose_name='PIS/PASEP')),
                ('endereco_municipio', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Município')),
                ('endereco_logradouro', djtools.db.models.CharFieldPlus(blank=True, max_length=255)),
                ('endereco_numero', models.CharField(blank=True, max_length=50, verbose_name='Nº')),
                ('endereco_complemento', djtools.db.models.CharFieldPlus(blank=True, max_length=255)),
                ('endereco_bairro', djtools.db.models.CharFieldPlus(blank=True, max_length=255)),
                ('endereco_cep', models.CharField(blank=True, max_length=9, verbose_name='CEP')),
                ('numero_agencia', models.CharField(help_text='Ex: 3293-X', max_length=50, verbose_name='Número da Agência')),
                ('tipo_conta', models.CharField(choices=[('Conta Corrente', 'Conta Corrente'), ('Conta Poupança', 'Conta Poupança')], max_length=50, verbose_name='Tipo da Conta')),
                ('numero_conta', models.CharField(help_text='Ex: 23384-6', max_length=50, verbose_name='Número da Conta')),
                ('operacao', models.CharField(blank=True, max_length=50, verbose_name='Operação')),
            ],
            options={'verbose_name': 'Avaliador Externo', 'verbose_name_plural': 'Avaliadores'},
        ),
        migrations.CreateModel(
            name='Banco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3)),
                ('sigla', models.CharField(max_length=15)),
                ('nome', models.CharField(max_length=30)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='BilheteViagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número do Bilhete')),
                ('tipo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Tipo')),
                ('data_emissao', djtools.db.models.DateFieldPlus(db_index=True, null=True, verbose_name='Data da Emissão')),
                ('status', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Status')),
            ],
            options={'verbose_name': 'Bilhete da Viagem', 'verbose_name_plural': 'Bilhetes das Viagens'},
        ),
        migrations.CreateModel(
            name='CargaHorariaReduzida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocolo_content_id', models.PositiveIntegerField(default=0, verbose_name='Protocolo (Id)')),
                ('numero', models.IntegerField(blank=True, null=True, verbose_name='Número do Processo')),
                ('data_inicio', djtools.db.models.DateFieldPlus(null=True, verbose_name='Início da Redução')),
                ('data_termino', djtools.db.models.DateFieldPlus(null=True, verbose_name='Término da Redução')),
                ('tipo', models.IntegerField(choices=[[0, 'Afastamento parcial'], [1, 'Carga horária excepcional']])),
                (
                    'status',
                    models.IntegerField(
                        choices=[
                            [0, 'Aguardando validação do chefe'],
                            [1, 'Aguardando validação do RH'],
                            [2, 'Deferido'],
                            [3, 'Indeferido'],
                            [4, 'Indeferido pelo chefe'],
                            [5, 'Novos documentos solicitados pelo RH'],
                            [6, 'Aguardando envio para o chefe'],
                            [7, 'Alterando horário'],
                            [8, 'Aguardando cadastrar horário'],
                            [9, 'Horário cadastrado'],
                        ],
                        verbose_name='Situação do Processo',
                    ),
                ),
                ('nova_jornada', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Nova Jornada de Trabalho')),
                ('ano', models.IntegerField()),
                ('motivo_indeferimento_chefe', models.CharField(max_length=2000, null=True, verbose_name='Motivo do Indeferimento')),
                ('motivo_indeferimento_rh', models.CharField(max_length=2000, null=True, verbose_name='Motivo do Indeferimento')),
                ('descricao_novos_documentos', models.CharField(max_length=2000, null=True, verbose_name='Descrição dos novos documentos')),
                ('protocolo_content_type', djtools.db.models.ForeignKeyPlus(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={'verbose_name': 'Processo de Redução de Carga Horária', 'verbose_name_plural': 'Processos de Redução de Carga Horária'},
        ),
        migrations.CreateModel(
            name='CargoClasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Classe do Cargo', 'verbose_name_plural': 'Classes do Cargo'},
        ),
        migrations.CreateModel(
            name='CargoEmprego',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('nome_amigavel', models.CharField(blank=True, max_length=40, verbose_name='Nome amigável')),
                ('descricao_sumaria', models.TextField(blank=True, verbose_name='Descrição Sumária do Cargo')),
                ('sigla_escolaridade', models.CharField(max_length=2)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Cargo Emprego', 'verbose_name_plural': 'Cargos de Emprego', 'db_table': 'cargo_emprego', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='CronogramaFolha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveIntegerField(verbose_name='Mês')),
                ('data_abertura_atualizacao_folha', djtools.db.models.DateFieldPlus(verbose_name='Abertura do SIAPE para Atualização da Folha')),
                ('data_fechamento_processamento_folha', djtools.db.models.DateFieldPlus(verbose_name='Fechamento do SIAPE para Processamento da Folha')),
                ('data_consulta_previa_folha', djtools.db.models.DateFieldPlus(verbose_name='Consulta da Prévia da Folha')),
                ('data_abertura_proxima_folha', djtools.db.models.DateFieldPlus(verbose_name='Abertura da Próxima Folha')),
                ('data_cadastro', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, null=True, verbose_name='Data de Cadastro')),
                ('ano', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Ano', verbose_name='Ano')),
            ],
            options={'verbose_name': 'Cronograma da Folha', 'verbose_name_plural': 'Cronogramas das Folhas'},
        ),
        migrations.CreateModel(
            name='DataConsultaBloqueada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_consulta_bloqueada', djtools.db.models.DateFieldPlus(verbose_name='Data da Consulta')),
                ('motivo_bloqueio', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Motivo do Bloqueio')),
                ('houve_remarcacao', models.BooleanField(default=False, verbose_name='Houve Remarcaçao de Consulta')),
                ('acao_saude', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.AcaoSaude', verbose_name='Ação de Saúde')),
            ],
            options={'verbose_name': 'Data de Consulta Bloqueada', 'verbose_name_plural': 'Datas de Consultas Bloqueadas'},
        ),
        migrations.CreateModel(
            name='Deficiencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Deficiência', 'verbose_name_plural': 'Deficiências'},
        ),
        migrations.CreateModel(
            name='DiplomaLegal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('sigla', models.CharField(max_length=10)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Diploma Legal', 'verbose_name_plural': 'Diplomas Legais', 'db_table': 'diploma_legal'},
        ),
        migrations.CreateModel(
            name='DocumentacaoExigida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('diretorio', djtools.db.models.CharFieldPlus(max_length=255, unique=True)),
                ('tamanho', models.BigIntegerField()),
                (
                    'processo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='documentos',
                        to='rh.CargaHorariaReduzida',
                        verbose_name='processo associado ao arquivo',
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='FormaProvimentoVacancia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('descricao', models.CharField(max_length=40)),
            ],
            options={'abstract': False, 'verbose_name': 'Jornada de Trabalho do PCA', 'verbose_name_plural': 'Jornadas de Trabalho do PCA'},
        ),
        migrations.CreateModel(
            name='Funcao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
                ('funcao_suap', models.BooleanField(default=False, help_text='Essa função é usada no SUAP (Não importada SIAPE).', verbose_name='Função SUAP')),
            ],
            options={'verbose_name': 'Função', 'verbose_name_plural': 'Funções', 'db_table': 'funcao'},
        ),
        migrations.CreateModel(
            name='GrupoCargoEmprego',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('sigla', models.CharField(max_length=10)),
                (
                    'categoria',
                    models.CharField(
                        choices=[['docente', 'Docente'], ['tecnico_administrativo', 'Técnico-Administrativo']], default='tecnico_administrativo', max_length=30, null=True
                    ),
                ),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Grupo de Cargo Emprego', 'verbose_name_plural': 'Grupos de Cargo Emprego', 'db_table': 'grupo_cargo_emprego'},
        ),
        migrations.CreateModel(
            name='GrupoDeficiencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Grupo de Deficiência', 'verbose_name_plural': 'Grupos de Deficiências'},
        ),
        migrations.CreateModel(
            name='GrupoOcorrencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Grupo de Ocorrência', 'verbose_name_plural': 'Grupos de Ocorrência', 'db_table': 'grupo_ocorrencia'},
        ),
        migrations.CreateModel(
            name='HorarioAgendado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_consulta', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data da Consulta')),
                ('retorno', models.BooleanField(default=False, blank=True, verbose_name='É um retorno?')),
                ('cancelado', models.BooleanField(default=False, blank=True, verbose_name='Cancelado')),
                ('data_cancelamento', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Cancelamento')),
                ('data_cadastro', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, null=True)),
                ('horario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.AgendaAtendimentoHorario', verbose_name='Horário')),
            ],
            options={'verbose_name': 'Horário Agendado', 'verbose_name_plural': 'Horários Agendados', 'permissions': (('pode_cancelar_agendamento', 'Pode Cancelar Agendamento'),)},
        ),
        migrations.CreateModel(
            name='HorarioSemanal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data Inicial')),
                ('data_fim', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data Final')),
                ('seg', models.IntegerField(verbose_name='SEG')),
                ('ter', models.IntegerField(verbose_name='TER')),
                ('qua', models.IntegerField(verbose_name='QUA')),
                ('qui', models.IntegerField(verbose_name='QUI')),
                ('sex', models.IntegerField(verbose_name='SEX')),
                ('jornada_semanal', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Jornada de Trabalho')),
                (
                    'processo_reducao_ch',
                    djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='rh.CargaHorariaReduzida', verbose_name='Processo de afastamento'),
                ),
            ],
            options={'verbose_name': 'Horário de Afasmento', 'verbose_name_plural': 'Horários de Afastamento', 'ordering': ('data_inicio',)},
        ),
        migrations.CreateModel(
            name='Instituicao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, verbose_name='Instituição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('unidade_gestora', models.IntegerField(null=True, verbose_name='Unidade Gestora')),
                ('uasg', models.IntegerField(null=True, verbose_name='UASG')),
            ],
            options={'verbose_name': 'Instituição', 'verbose_name_plural': 'Instituições', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='JornadaTrabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
                ('docente_peso', models.FloatField(default=1)),
            ],
            options={'verbose_name': 'Jornada de Trabalho', 'verbose_name_plural': 'Jornadas de Trabalho', 'db_table': 'jornada_trabalho'},
        ),
        migrations.CreateModel(
            name='JornadaTrabalhoPCA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtde_jornada_trabalho_pca', models.CharField(max_length=2)),
                ('data_inicio_jornada_trabalho_pca', djtools.db.models.DateFieldPlus()),
                ('data_fim_jornada_trabalho_pca', djtools.db.models.DateFieldPlus()),
            ],
            options={'abstract': False, 'verbose_name': 'Jornada de Trabalho do PCA', 'verbose_name_plural': 'Jornadas de Trabalho do PCA'},
        ),
        migrations.CreateModel(
            name='NivelEscolaridade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=45)),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('descricao', models.CharField(max_length=60)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Nível de Escolaridade', 'verbose_name_plural': 'Níveis de Escolaridade', 'db_table': 'nivel_escolaridade'},
        ),
        migrations.CreateModel(
            name='Ocorrencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=5, unique=True)),
                ('nome', models.CharField(max_length=60)),
                ('excluido', models.BooleanField(default=False)),
                ('interrompe_pagamento', models.BooleanField(blank=True, default=False)),
                ('grupo_ocorrencia', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.GrupoOcorrencia')),
            ],
            options={'verbose_name': 'Ocorrência', 'verbose_name_plural': 'Ocorrências', 'db_table': 'ocorrencia'},
        ),
        migrations.CreateModel(
            name='PadraoVencimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.CharField(choices=[['docente', 'Docente'], ['tecnico_administrativo', 'Técnico Administrativo']], max_length=50)),
                ('classe', models.CharField(choices=[['A', 'A'], ['B', 'B'], ['C', 'C'], ['D', 'D'], ['E', 'E']], max_length=1, verbose_name='Classe')),
                (
                    'posicao_vertical',
                    models.CharField(
                        choices=[
                            ['01', '01'],
                            ['02', '02'],
                            ['03', '03'],
                            ['04', '04'],
                            ['05', '05'],
                            ['06', '06'],
                            ['07', '07'],
                            ['08', '08'],
                            ['09', '09'],
                            ['10', '10'],
                            ['11', '11'],
                            ['12', '12'],
                            ['13', '13'],
                            ['14', '14'],
                            ['15', '15'],
                            ['16', '16'],
                        ],
                        max_length=2,
                        verbose_name='Mérito',
                    ),
                ),
            ],
            options={'verbose_name': 'Padrão de Vencimento', 'verbose_name_plural': 'Padrões de Vencimento', 'ordering': ['categoria', 'classe', 'posicao_vertical']},
        ),
        migrations.CreateModel(
            name='Papel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo_papel',
                    models.CharField(
                        choices=[('cargo', 'cargo'), ('funcao', 'funcao'), ('comissaoconselho', 'comissaoconselho'), ('ocupacao', 'ocupacao')],
                        default='cargo',
                        max_length=255,
                        verbose_name='Tipo de papel',
                    ),
                ),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('detalhamento', models.TextField(verbose_name='Detalhamento')),
                ('portaria', models.CharField(max_length=50, verbose_name='portaria')),
                ('data_inicio', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de início')),
                ('data_fim', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data fim')),
                ('papel_content_id', models.PositiveIntegerField(verbose_name='Papel (Id)')),
                ('papel_content_type', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Papel (Type)')),
            ],
            options={'verbose_name': 'Papel', 'verbose_name_plural': 'Papéis'},
        ),
        migrations.CreateModel(
            name='PCA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servidor_matricula_crh', models.CharField(max_length=8)),
                ('servidor_vaga_pca', models.CharField(max_length=7)),
                ('codigo_pca', models.CharField(db_index=True, max_length=11, unique=True)),
                ('data_entrada_pca', djtools.db.models.DateFieldPlus(db_index=True)),
                ('texto_entrada_pca', models.CharField(blank=True, max_length=60)),
                ('data_vacancia_pca', djtools.db.models.DateFieldPlus(blank=True)),
                ('texto_vacancia_pca', models.CharField(blank=True, max_length=60)),
                ('cargo_pca', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.CargoEmprego')),
                (
                    'forma_entrada_pca',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forma_entrada', to='rh.FormaProvimentoVacancia'),
                ),
                (
                    'forma_vacancia_pca',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forma_vacancia', to='rh.FormaProvimentoVacancia'),
                ),
            ],
            options={'ordering': ['-data_entrada_pca'], 'verbose_name': 'Provimento de Cargo', 'verbose_name_plural': 'Provimentos de Cargos'},
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.UnaccentField(db_index=True, max_length=200)),
                ('nome_usual', models.CharField(blank=True, help_text='O nome apresentado no crachá ou razão social', max_length=30, verbose_name='Nome Usual')),
                ('nome_social', djtools.db.models.UnaccentField(blank=True, max_length=200, verbose_name='Nome Social')),
                ('nome_registro', djtools.db.models.UnaccentField(blank=True, max_length=200, verbose_name='Nome de Registro')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail Principal')),
                ('email_secundario', models.EmailField(blank=True, help_text='E-mail utilizado para recuperação de senha.', max_length=254, verbose_name='E-mail Secundário')),
                ('website', models.URLField(blank=True)),
                ('excluido', models.BooleanField(default=False, help_text='Indica se a última ocorrência é de exclusão', verbose_name='Excluído')),
                (
                    'natureza_juridica',
                    models.CharField(
                        blank=True,
                        choices=[
                            ['101', 'Órgão Público do Poder Executivo Federal'],
                            ['102', 'Órgão Público do Poder Executivo Estadual ou do Distrito Federal'],
                            ['103', 'Órgão Público do Poder Executivo Municipal'],
                            ['104', 'Órgão Público do Poder Legislativo Federal'],
                            ['105', 'Órgão Público do Poder Legislativo Estadual ou do Distrito Federal'],
                            ['106', 'Órgão Público do Poder Legislativo Municipal'],
                            ['107', 'Órgão Público do Poder Judiciário Federal'],
                            ['108', 'Órgão Público do Poder Judiciário Estadual'],
                            ['110', 'Autarquia Federal'],
                            ['111', 'Autarquia Estadual ou do Distrito Federal'],
                            ['112', 'Autarquia Municipal'],
                            ['113', 'Fundação Federal'],
                            ['114', 'Fundação Estadual ou do Distrito Federal'],
                            ['115', 'Fundação Municipal'],
                            ['116', 'Órgão Público Autônomo da União'],
                            ['117', 'Órgão Público Autônomo Estadual ou do Distrito Federal'],
                            ['118', 'Órgão Público Autônomo Municipal'],
                            ['201', 'Empresa Pública'],
                            ['203', 'Sociedade de Economia Mista'],
                            ['204', 'Sociedade Anônima Aberta'],
                            ['205', 'Sociedade Anônima Fechada'],
                            ['206', 'Sociedade Empresária Limitada'],
                            ['207', 'Sociedade Empresária em Nome Coletivo '],
                            ['208', 'Sociedade Empresária em Comandita Simples'],
                            ['209', 'Sociedade Empresária em Comandita por Ações'],
                            ['210', 'Sociedade Mercantil de Capital e Indústria (extinta pelo NCC/2002)'],
                            ['212', 'Sociedade Empresária em Conta de Participação'],
                            ['213', 'Empresário (Individual)'],
                            ['214', 'Cooperativa'],
                            ['215', 'Consórcio de Sociedades'],
                            ['216', 'Grupo de Sociedades'],
                            ['217', 'Estabelecimento, no Brasil, de Sociedade Estrangeira'],
                            ['219', 'Estabelecimento, no Brasil, de Empresa Binacional Argentino-Brasileira'],
                            ['220', 'Entidade Binacional Itaipu'],
                            ['221', 'Empresa Domiciliada no Exterior'],
                            ['222', 'Clube/Fundo de Investimento'],
                            ['223', 'Sociedade Simples Pura'],
                            ['224', 'Sociedade Simples Limitada'],
                            ['225', 'Sociedade em Nome Coletivo'],
                            ['226', 'Sociedade em Comandita Simples'],
                            ['227', 'Sociedade Simples em Conta de Participação'],
                            ['303', 'Serviço Notarial e Registral (Cartório)'],
                            ['304', 'Organização Social'],
                            ['305', 'Organização da Sociedade Civil de Interesse Público (Oscip)'],
                            ['306', 'Outras Formas de Fundações Mantidas com Recursos Privados'],
                            ['307', 'Serviço Social Autônomo'],
                            ['308', 'Condomínio Edilícios'],
                            ['309', 'Unidade Executora (Programa Dinheiro Direto na Escola)'],
                            ['310', 'Comissão de Conciliação Prévia'],
                            ['311', 'Entidade de Mediação e Arbitragem'],
                            ['312', 'Partido Político'],
                            ['313', 'Entidade Sindical'],
                            ['320', 'Estabelecimento, no Brasil, de Fundação ou Associação Estrangeiras'],
                            ['321', 'Fundação ou Associação Domiciliada no Exterior'],
                            ['399', 'Outras Formas de Associação'],
                            ['401', 'Empresa Individual Imobiliária'],
                            ['402', 'Segurado Especial'],
                            ['408', 'Contribuinte individual'],
                            ['500', 'Organização Internacional e Outras Instituições Extraterritoriais'],
                        ],
                        max_length=5,
                        verbose_name='Natureza Jurídica',
                    ),
                ),
                (
                    'sistema_origem',
                    models.CharField(
                        blank=True,
                        choices=[['', 'Cadastro manual'], ['SIAPE', 'SIAPE'], ['WS-SIAPE', 'WS-SIAPE'], ['SIAFI', 'SIAFI']],
                        help_text='Indica de qual sistema a pessoa veio: SIAPE, SIAFI etc',
                        max_length=50,
                    ),
                ),
            ],
            options={
                'db_table': 'pessoa',
                'ordering': ('nome',),
                'permissions': (
                    ('pode_editar_email_secundario_servidor', 'Pode editar e-mail secundário'),
                    ('pode_editar_email_institucional', 'Pode editar e-mail institucional'),
                    ('pode_editar_email_academico', 'Pode editar e-mail acadêmico'),
                    ('pode_editar_email_google_classroom', 'Pode editar e-mail google class room'),
                    ('pode_editar_email_secundario_aluno', 'Pode editar e-mail secundário do aluno'),
                    ('pode_editar_email_secundario_prestador', 'Pode editar e-mail secundário do Prestador de Serviço'),
                ),
            },
        ),
        migrations.CreateModel(
            name='PessoaExterna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.unaccent_field.UnaccentField(max_length=200)),
                ('nome_usual', models.CharField(blank=True, help_text='O nome apresentado no crachá ou razão social', max_length=30, verbose_name='Nome Usual')),
                ('nome_social', djtools.db.models.UnaccentField(blank=True, max_length=200, verbose_name='Nome Social')),
                ('nome_registro', djtools.db.models.UnaccentField(blank=True, max_length=200, verbose_name='Nome de Registro')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail Principal')),
                ('email_secundario', models.EmailField(blank=True, help_text='E-mail utilizado para recuperação de senha.', max_length=254, verbose_name='E-mail Secundário')),
                ('website', models.URLField(blank=True)),
                ('excluido', models.BooleanField(default=False, help_text='Indica se a última ocorrência é de exclusão', verbose_name='Excluído')),
                (
                    'natureza_juridica',
                    models.CharField(
                        blank=True,
                        choices=[
                            ['101', 'Órgão Público do Poder Executivo Federal'],
                            ['102', 'Órgão Público do Poder Executivo Estadual ou do Distrito Federal'],
                            ['103', 'Órgão Público do Poder Executivo Municipal'],
                            ['104', 'Órgão Público do Poder Legislativo Federal'],
                            ['105', 'Órgão Público do Poder Legislativo Estadual ou do Distrito Federal'],
                            ['106', 'Órgão Público do Poder Legislativo Municipal'],
                            ['107', 'Órgão Público do Poder Judiciário Federal'],
                            ['108', 'Órgão Público do Poder Judiciário Estadual'],
                            ['110', 'Autarquia Federal'],
                            ['111', 'Autarquia Estadual ou do Distrito Federal'],
                            ['112', 'Autarquia Municipal'],
                            ['113', 'Fundação Federal'],
                            ['114', 'Fundação Estadual ou do Distrito Federal'],
                            ['115', 'Fundação Municipal'],
                            ['116', 'Órgão Público Autônomo da União'],
                            ['117', 'Órgão Público Autônomo Estadual ou do Distrito Federal'],
                            ['118', 'Órgão Público Autônomo Municipal'],
                            ['201', 'Empresa Pública'],
                            ['203', 'Sociedade de Economia Mista'],
                            ['204', 'Sociedade Anônima Aberta'],
                            ['205', 'Sociedade Anônima Fechada'],
                            ['206', 'Sociedade Empresária Limitada'],
                            ['207', 'Sociedade Empresária em Nome Coletivo '],
                            ['208', 'Sociedade Empresária em Comandita Simples'],
                            ['209', 'Sociedade Empresária em Comandita por Ações'],
                            ['210', 'Sociedade Mercantil de Capital e Indústria (extinta pelo NCC/2002)'],
                            ['212', 'Sociedade Empresária em Conta de Participação'],
                            ['213', 'Empresário (Individual)'],
                            ['214', 'Cooperativa'],
                            ['215', 'Consórcio de Sociedades'],
                            ['216', 'Grupo de Sociedades'],
                            ['217', 'Estabelecimento, no Brasil, de Sociedade Estrangeira'],
                            ['219', 'Estabelecimento, no Brasil, de Empresa Binacional Argentino-Brasileira'],
                            ['220', 'Entidade Binacional Itaipu'],
                            ['221', 'Empresa Domiciliada no Exterior'],
                            ['222', 'Clube/Fundo de Investimento'],
                            ['223', 'Sociedade Simples Pura'],
                            ['224', 'Sociedade Simples Limitada'],
                            ['225', 'Sociedade em Nome Coletivo'],
                            ['226', 'Sociedade em Comandita Simples'],
                            ['227', 'Sociedade Simples em Conta de Participação'],
                            ['303', 'Serviço Notarial e Registral (Cartório)'],
                            ['304', 'Organização Social'],
                            ['305', 'Organização da Sociedade Civil de Interesse Público (Oscip)'],
                            ['306', 'Outras Formas de Fundações Mantidas com Recursos Privados'],
                            ['307', 'Serviço Social Autônomo'],
                            ['308', 'Condomínio Edilícios'],
                            ['309', 'Unidade Executora (Programa Dinheiro Direto na Escola)'],
                            ['310', 'Comissão de Conciliação Prévia'],
                            ['311', 'Entidade de Mediação e Arbitragem'],
                            ['312', 'Partido Político'],
                            ['313', 'Entidade Sindical'],
                            ['320', 'Estabelecimento, no Brasil, de Fundação ou Associação Estrangeiras'],
                            ['321', 'Fundação ou Associação Domiciliada no Exterior'],
                            ['399', 'Outras Formas de Associação'],
                            ['401', 'Empresa Individual Imobiliária'],
                            ['402', 'Segurado Especial'],
                            ['408', 'Contribuinte individual'],
                            ['500', 'Organização Internacional e Outras Instituições Extraterritoriais'],
                        ],
                        max_length=5,
                        verbose_name='Natureza Jurídica',
                    ),
                ),
                (
                    'sistema_origem',
                    models.CharField(
                        blank=True,
                        choices=[['', 'Cadastro manual'], ['SIAPE', 'SIAPE'], ['WS-SIAPE', 'WS-SIAPE'], ['SIAFI', 'SIAFI']],
                        help_text='Indica de qual sistema a pessoa veio: SIAPE, SIAFI etc',
                        max_length=50,
                    ),
                ),
                ('cpf', models.CharField(db_index=True, max_length=20, null=True, verbose_name='CPF')),
                ('sexo', models.CharField(choices=[['M', 'Masculino'], ['F', 'Feminino']], max_length=1, null=True)),
                (
                    'grupo_sanguineo',
                    models.CharField(blank=True, choices=[['A', 'A'], ['B', 'B'], ['AB', 'AB'], ['O', 'O']], max_length=2, null=True, verbose_name='Grupo Sanguíneo'),
                ),
                ('fator_rh', models.CharField(blank=True, choices=[['+', '+'], ['-', '-']], max_length=8, null=True, verbose_name='Fator RH')),
                ('titulo_numero', models.CharField(blank=True, max_length=12, null=True)),
                ('titulo_zona', models.CharField(blank=True, max_length=3, null=True)),
                ('titulo_secao', models.CharField(blank=True, max_length=4, null=True)),
                (
                    'titulo_uf',
                    djtools.db.models.BrEstadoBrasileiroField(
                        blank=True,
                        choices=[
                            ('AC', 'Acre'),
                            ('AL', 'Alagoas'),
                            ('AP', 'Amapá'),
                            ('AM', 'Amazonas'),
                            ('BA', 'Bahia'),
                            ('CE', 'Ceará'),
                            ('DF', 'Distrito Federal'),
                            ('ES', 'Espírito Santo'),
                            ('GO', 'Goiás'),
                            ('MA', 'Maranhão'),
                            ('MT', 'Mato Grosso'),
                            ('MS', 'Mato Grosso do Sul'),
                            ('MG', 'Minas Gerais'),
                            ('PA', 'Pará'),
                            ('PB', 'Paraíba'),
                            ('PR', 'Paraná'),
                            ('PE', 'Pernambuco'),
                            ('PI', 'Piauí'),
                            ('RJ', 'Rio de Janeiro'),
                            ('RN', 'Rio Grande do Norte'),
                            ('RS', 'Rio Grande do Sul'),
                            ('RO', 'Rondônia'),
                            ('RR', 'Roraima'),
                            ('SC', 'Santa Catarina'),
                            ('SP', 'São Paulo'),
                            ('SE', 'Sergipe'),
                            ('TO', 'Tocantins'),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                ('titulo_data_emissao', models.DateField(null=True)),
                ('rg', models.CharField(max_length=20, null=True, verbose_name='RG')),
                ('rg_orgao', models.CharField(max_length=10, null=True)),
                ('rg_data', models.DateField(null=True)),
                (
                    'rg_uf',
                    djtools.db.models.BrEstadoBrasileiroField(
                        choices=[
                            ('AC', 'Acre'),
                            ('AL', 'Alagoas'),
                            ('AP', 'Amapá'),
                            ('AM', 'Amazonas'),
                            ('BA', 'Bahia'),
                            ('CE', 'Ceará'),
                            ('DF', 'Distrito Federal'),
                            ('ES', 'Espírito Santo'),
                            ('GO', 'Goiás'),
                            ('MA', 'Maranhão'),
                            ('MT', 'Mato Grosso'),
                            ('MS', 'Mato Grosso do Sul'),
                            ('MG', 'Minas Gerais'),
                            ('PA', 'Pará'),
                            ('PB', 'Paraíba'),
                            ('PR', 'Paraná'),
                            ('PE', 'Pernambuco'),
                            ('PI', 'Piauí'),
                            ('RJ', 'Rio de Janeiro'),
                            ('RN', 'Rio Grande do Norte'),
                            ('RS', 'Rio Grande do Sul'),
                            ('RO', 'Rondônia'),
                            ('RR', 'Roraima'),
                            ('SC', 'Santa Catarina'),
                            ('SP', 'São Paulo'),
                            ('SE', 'Sergipe'),
                            ('TO', 'Tocantins'),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                ('nascimento_data', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Nascimento')),
                ('nome_mae', models.CharField(max_length=100, null=True, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Pai')),
                ('foto', djtools.thumbs.ImageWithThumbsField(blank=True, null=True, storage=djtools.storages.get_overwrite_storage(), upload_to='fotos_pessoa_externa')),
                ('cnh_carteira', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_registro', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_categoria', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_emissao', models.DateField(blank=True, null=True)),
                ('cnh_uf', models.CharField(blank=True, max_length=2, null=True)),
                ('cnh_validade', models.DateField(blank=True, null=True)),
                ('ctps_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('ctps_uf', models.CharField(blank=True, max_length=2, null=True)),
                ('ctps_data_prim_emprego', models.DateField(blank=True, null=True)),
                ('ctps_serie', models.CharField(blank=True, max_length=10, null=True)),
                ('pis_pasep', models.CharField(blank=True, max_length=20, null=True)),
                ('pagto_agencia', models.CharField(blank=True, max_length=20, null=True)),
                ('pagto_ccor', models.CharField(blank=True, max_length=20, null=True)),
                ('pagto_ccor_tipo', models.CharField(blank=True, max_length=2, null=True)),
                ('username', models.CharField(db_index=True, max_length=50, null=True, unique=True)),
                (
                    'tem_digital_fraca',
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text='Servidores com impressão digital fraca devem ter essa opção marcada',
                        verbose_name='Permitir registro de ponto sem impressão digital',
                    ),
                ),
                (
                    'senha_ponto',
                    models.CharField(
                        blank=True,
                        help_text='Servidores com impressão digital fraca devem ter uma senha definida para bater o ponto',
                        max_length=128,
                        verbose_name='Senha para registro de ponto sem impressão digital',
                    ),
                ),
                ('data_obito', models.DateField(blank=True, null=True)),
                ('template', models.BinaryField(blank=True, null=True)),
                ('template_importado_terminal', models.BooleanField(default=False, verbose_name='Digital importada do terminal')),
                (
                    'nacionalidade',
                    models.IntegerField(
                        choices=[[1, 'Brasileiro Nato'], [2, 'Brasileiro Naturalizado'], [3, 'Equiparado'], [4, 'Estrangeiro']], null=True, verbose_name='Nacionalidade'
                    ),
                ),
                ('lattes', models.URLField(blank=True)),
                ('matricula', djtools.db.models.CharFieldPlus(db_index=True, max_length=30, null=True, verbose_name='Matrícula')),
                ('deficiencia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Deficiencia', verbose_name='Deficiência')),
                ('estado_civil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.EstadoCivil')),
                ('nascimento_municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Municipio', verbose_name='Município')),
                ('pagto_banco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Banco')),
                ('pais_origem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Pais', verbose_name='País de Origem')),
                ('raca', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Raca')),
            ],
            options={'verbose_name': 'Pessoa Externa', 'verbose_name_plural': 'Pessoas Externas'},
        ),
        migrations.CreateModel(
            name='PessoaJuridicaContato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, null=True, verbose_name='Descrição')),
                ('telefone', models.CharField(max_length=45, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='E-mail')),
                ('via_form_suap', models.BooleanField(default=False, verbose_name='Via SUAP?')),
            ],
            options={'verbose_name': 'Contato da Pessoa Jurídica', 'verbose_name_plural': 'Contatos da Pessoa Jurídica'},
        ),
        migrations.CreateModel(
            name='PosicionamentoPCA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_pca_posicionamento', models.CharField(db_index=True, max_length=11)),
                ('codigo_posicionamento_pca', models.CharField(db_index=True, max_length=9)),
                ('data_inicio_posicionamento_pca', djtools.db.models.DateFieldPlus(db_index=True)),
                ('data_fim_posicionamento_pca', djtools.db.models.DateFieldPlus()),
                ('forma_entrada', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.FormaProvimentoVacancia')),
                ('pca', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PCA')),
            ],
            options={'verbose_name': 'Posicionamento no PCA', 'verbose_name_plural': 'Posicionamentos no PCA', 'ordering': ['-data_inicio_posicionamento_pca']},
        ),
        migrations.CreateModel(
            name='RegimeJuridico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_regime', models.CharField(db_index=True, max_length=2, null=True)),
                ('sigla', models.CharField(max_length=10, null=True, unique=True)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'db_table': 'regime_juridico'},
        ),
        migrations.CreateModel(
            name='RegimeJuridicoPCA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_regime_juridico_pca', models.CharField(max_length=2)),
                ('data_inicio_regime_juridico_pca', djtools.db.models.DateFieldPlus(db_index=True)),
                ('data_fim_regime_juridico_pca', djtools.db.models.DateFieldPlus(db_index=True)),
                ('valor_fator_tempo_regime_juridico_pca', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12)),
                ('pca', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PCA')),
                ('regime_juridico', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.RegimeJuridico')),
            ],
            options={'abstract': False, 'verbose_name': 'Regime Jurídico do PCA', 'verbose_name_plural': 'Regimes Jurídicos do PCA'},
        ),
        migrations.CreateModel(
            name='ServidorAfastamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(db_index=True, editable=False, null=True)),
                ('data_termino', models.DateField(blank=True, db_index=True, null=True)),
                ('quantidade_dias_afastamento', djtools.db.models.PositiveIntegerFieldPlus(default=0, verbose_name='Quantidade de dias afastamento')),
                ('tem_efeito_financeiro', models.BooleanField(default=False, verbose_name='Tem efeito financeiro')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('afastamento', djtools.db.models.ForeignKeyPlus(editable=False, on_delete=django.db.models.deletion.CASCADE, to='rh.AfastamentoSiape')),
            ],
            options={'verbose_name': 'Afastamento SIAPE do Servidor', 'verbose_name_plural': 'Afastamentos SIAPE dos Servidores'},
        ),
        migrations.CreateModel(
            name='ServidorFuncaoHistorico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio_funcao', djtools.db.models.DateFieldPlus(db_index=True)),
                ('data_fim_funcao', djtools.db.models.DateFieldPlus(null=True)),
                ('nivel', models.CharField(blank=True, max_length=4, null=True)),
                ('atividade', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Atividade')),
                ('funcao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Funcao')),
            ],
            options={'verbose_name': 'Servidor - Histórico de Função', 'verbose_name_plural': 'Servidor - Histórico de Funções'},
        ),
        migrations.CreateModel(
            name='ServidorOcorrencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diploma_legal_data', models.DateField(editable=False, null=True)),
                ('diploma_legal_num', models.CharField(editable=False, max_length=10)),
                ('data', models.DateField(db_index=True, editable=False, null=True)),
                ('data_termino', models.DateField(blank=True, db_index=True, null=True)),
                ('quantidade_dias_ocorrencia', djtools.db.models.PositiveIntegerFieldPlus(default=0, verbose_name='Quantidade de dias ocorrência')),
                ('diploma_legal', djtools.db.models.ForeignKeyPlus(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.DiplomaLegal')),
                ('ocorrencia', djtools.db.models.ForeignKeyPlus(editable=False, on_delete=django.db.models.deletion.CASCADE, to='rh.Ocorrencia')),
            ],
            options={'verbose_name': 'Ocorrência de Servidor', 'verbose_name_plural': 'Ocorrências de Servidores', 'db_table': 'servidor_ocorrencia'},
        ),
        migrations.CreateModel(
            name='ServidorSetorHistorico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio_no_setor', models.DateField()),
                ('data_fim_no_setor', models.DateField(blank=True, null=True)),
            ],
            options={'verbose_name': 'Histórico Setor Servidor', 'verbose_name_plural': 'Histórico Setores Servidor', 'db_table': 'suap_servidorsetorhistorico'},
        ),
        migrations.CreateModel(
            name='ServidorSetorLotacaoHistorico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio_setor_lotacao', models.DateField(db_index=True)),
                ('data_fim_setor_lotacao', djtools.db.models.DateFieldPlus(blank=True, null=True)),
                ('hora_atualizacao_siape', djtools.db.models.DateTimeFieldPlus()),
            ],
            options={'verbose_name': 'Histórico Setor de Lotação do Servidor', 'verbose_name_plural': 'Histórico Setores de Lotação do Servidor'},
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'codigo',
                    models.CharField(
                        blank=True,
                        help_text='Caso o setor tenha este campo em branco será considerado setor SUAP',
                        max_length=9,
                        null=True,
                        unique=True,
                        verbose_name='Código SIAPE',
                    ),
                ),
                ('sigla', models.CharField(max_length=15)),
                ('nome', models.CharField(max_length=100)),
                ('excluido', models.BooleanField(default=False, help_text='Setores excluídos não farão parte das buscas e não devem possuir servidores', verbose_name='Excluído')),
                ('codigo_siorg', models.CharField(blank=True, max_length=6, verbose_name='Código SIORG')),
                ('areas_vinculacao', djtools.db.models.ManyToManyFieldPlus(blank=True, to='rh.AreaVinculacao', verbose_name='Áreas de Vinculação')),
                ('setores_compartilhados', models.ManyToManyField(related_name='_setor_setores_compartilhados_+', to='rh.Setor')),
                ('superior', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Setor', verbose_name='Setor Superior')),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
                'db_table': 'setor',
                'ordering': ['sigla'],
                'permissions': (
                    ('pode_gerenciar_setor_telefone', 'Pode gerenciar telefones de setores'),
                    ('pode_gerenciar_setor_jornada_historico', 'Pode gerenciar carga horária de setores'),
                ),
                'default_manager_name': 'todos',
            },
            managers=[('todos', django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name='SetorJornadaHistorico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio_da_jornada', djtools.db.models.DateFieldPlus(default=datetime.datetime.today, verbose_name='Data Inicial da Jornada')),
                ('data_fim_da_jornada', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data Final da Jornada')),
                ('jornada_trabalho', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.JornadaTrabalho', verbose_name='Jornada de Trabalho')),
                ('setor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor', verbose_name='Setor')),
            ],
            options={
                'verbose_name': 'Histórico de Jornada do Setor',
                'verbose_name_plural': 'Históricos de Jornadas dos Setores',
                'ordering': ('setor', '-data_inicio_da_jornada'),
            },
        ),
        migrations.CreateModel(
            name='Situacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('nome_siape', models.CharField(max_length=40)),
                ('nome', models.CharField(max_length=40)),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={'verbose_name': 'Situação', 'verbose_name_plural': 'Situações', 'db_table': 'situacao', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='SubgrupoOcorrencia',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('descricao', models.CharField(max_length=40, null=True))],
            options={'db_table': 'subgrupo_ocorrencia'},
        ),
        migrations.CreateModel(
            name='TipoUnidadeOrganizacional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Tipo de Unidade Organizacional', 'verbose_name_plural': 'Tipos de Unidade Organizacional'},
        ),
        migrations.CreateModel(
            name='Titulacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=40)),
                ('codigo', models.CharField(blank=True, max_length=4, unique=True)),
                ('titulo_masculino', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Título Masculino')),
                ('titulo_feminino', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Título Feminino')),
            ],
            options={'verbose_name': 'Titulação', 'verbose_name_plural': 'Titulações', 'db_table': 'titulacao', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='UnidadeOrganizacional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('sigla', models.CharField(max_length=25, verbose_name='Sigla')),
                (
                    'codigo_protocolo',
                    models.CharField(blank=True, help_text='Este valor deve ter 5 dígitos.', max_length=5, verbose_name='Prefixo para geração do número de protocolo'),
                ),
                ('codigo_ug', models.CharField(blank=True, max_length=6, verbose_name='Código UG')),
                ('codigo_ugr', models.CharField(blank=True, max_length=6, verbose_name='Código UGR')),
                ('cnpj', djtools.db.models.BrCnpjField(blank=True, max_length=18, null=True, verbose_name='CNPJ')),
                ('endereco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('zona_rual', models.BooleanField(default=False, verbose_name='Zona Rural?')),
                ('bairro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('cep', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cep')),
                ('telefone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('fax', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fax')),
                ('codigo_inep', models.CharField(blank=True, max_length=25, verbose_name='Código INEP')),
                ('codigo_censup', models.CharField(blank=True, max_length=25, null=True, verbose_name='Código CENSUP')),
                ('codigo_emec', models.CharField(blank=True, max_length=25, null=True, verbose_name='Código e-MEC')),
                ('portaria_criacao', models.TextField(blank=True, verbose_name='Portaria de Criação')),
                ('codigo_interno', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, verbose_name='Código Interno')),
                ('codigo_sistec', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, verbose_name='Código SISTEC')),
                (
                    'id_repositorio_pen',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        default='001',
                        help_text='Identificador do repositório de estruturas - Órgãos do Poder Executivo = 001',
                        max_length=255,
                        null=True,
                        verbose_name='ID Repositório Estruturas',
                    ),
                ),
                (
                    'id_estrutura_pen',
                    djtools.db.models.CharFieldPlus(
                        blank=True, help_text='Identificador da estrutura referente a esta unidade no barramento', max_length=255, null=True, verbose_name='ID Estrutura PEN'
                    ),
                ),
                (
                    'equivalente',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        help_text='Campus SUAP equivalente. Preencha caso esteja editando um campus SIAPE.',
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='rh.UnidadeOrganizacional',
                    ),
                ),
                ('municipio', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Municipio', verbose_name='Município')),
                ('setor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor')),
                (
                    'setor_recebimento_pen',
                    models.ForeignKey(
                        blank=True,
                        help_text='Setor que irá receber processos enviados por outras instituições via ConectaGOV (barramento)',
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='setor_barramento',
                        to='rh.Setor',
                        verbose_name='Setor de Recebimento de Processos Externos))',
                    ),
                ),
                ('tipo', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.TipoUnidadeOrganizacional')),
            ],
            options={'verbose_name': 'Campus', 'verbose_name_plural': 'Campi', 'db_table': 'unidadeorganizacional', 'ordering': ['setor__sigla']},
        ),
        migrations.CreateModel(
            name='Viagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_siorg', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código Siorg Solicitante')),
                ('nome_siorg', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome Siorg Solicitante')),
                ('nome_proposto', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome do Proposto')),
                ('tipo_proposto', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Tipo de Proposto')),
                ('numero_pcdp', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Número PCDP')),
                ('motivo_viagem', models.TextField(blank=True, verbose_name='Motivo da Viagem')),
                ('objetivo_viagem', models.TextField(blank=True, verbose_name='Objetivo da Viagem')),
                ('data_inicio_viagem', djtools.db.models.DateFieldPlus(db_index=True, verbose_name='Data Inicial da Viagem')),
                ('data_fim_viagem', djtools.db.models.DateFieldPlus(db_index=True, verbose_name='Data Fim da Viagem')),
                ('quantidade_viagens', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de Viagens')),
                ('quantidade_de_dias_afastamento', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de dias afastados')),
                ('quantidade_de_diarias', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Quantidade de diarias')),
                (
                    'valor_desconto_auxilio_alimentacao',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor de desconto do auxílio alimentação'),
                ),
                (
                    'valor_desconto_auxilio_transporte',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor de desconto do auxílio transporte'),
                ),
                ('valor_passagem', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da passagem')),
                ('valor_diaria', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da diária')),
                ('valor_viagem', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da viagem')),
                (
                    'situacao',
                    models.PositiveIntegerField(
                        choices=[
                            (1, 'Criado'),
                            (2, 'Solicitado Passagem'),
                            (3, 'Reservado Passagem'),
                            (4, 'Cancelado'),
                            (6, 'Aprovado pelo Proponente'),
                            (7, 'Aprovado pelo Ordenador de Despesa'),
                            (8, 'Efetuado a Execução Financeira'),
                            (9, 'Prestado Contas'),
                            (10, 'Aprovado pelo Proponente - Prest. Contas'),
                            (11, 'Aprovado pelo Ordenador de Despesa - Prest. Contas'),
                            (15, 'Viagem Encerrada'),
                            (17, 'Não Aprovada'),
                            (20, 'Viagem não realizada'),
                            (1001, 'Em Andamento'),
                            (1002, 'Em Prestação de Contas'),
                            (1003, 'Prestação de Contas Pendente'),
                            (1004, 'Encerrada - realizada'),
                            (1005, 'Encerrada - não realizada'),
                        ],
                        verbose_name='Situação',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Viagem',
                'verbose_name_plural': 'Viagens',
                'permissions': (
                    ('pode_ver_relatorios_viagens', 'Pode ver relatórios viagens'),
                    ('pode_ver_relatorios_viagens_detalhados', 'Pode ver relatórios viagens detalhados'),
                ),
            },
            managers=[('consolidadas', django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name='PessoaFisica',
            fields=[
                (
                    'pessoa_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.Pessoa'),
                ),
                ('cpf', models.CharField(db_index=True, max_length=20, null=True, verbose_name='CPF')),
                ('documento_identificador', djtools.db.models.CharFieldPlus(db_index=True, max_length=50, null=True)),
                ('sexo', models.CharField(choices=[['M', 'Masculino'], ['F', 'Feminino']], max_length=1, null=True)),
                (
                    'grupo_sanguineo',
                    models.CharField(blank=True, choices=[['A', 'A'], ['B', 'B'], ['AB', 'AB'], ['O', 'O']], max_length=2, null=True, verbose_name='Grupo Sanguíneo'),
                ),
                ('fator_rh', models.CharField(blank=True, choices=[['+', '+'], ['-', '-']], max_length=8, null=True, verbose_name='Fator RH')),
                ('titulo_numero', models.CharField(blank=True, max_length=12, null=True)),
                ('titulo_zona', models.CharField(blank=True, max_length=3, null=True)),
                ('titulo_secao', models.CharField(blank=True, max_length=4, null=True)),
                (
                    'titulo_uf',
                    djtools.db.models.BrEstadoBrasileiroField(
                        blank=True,
                        choices=[
                            ('AC', 'Acre'),
                            ('AL', 'Alagoas'),
                            ('AP', 'Amapá'),
                            ('AM', 'Amazonas'),
                            ('BA', 'Bahia'),
                            ('CE', 'Ceará'),
                            ('DF', 'Distrito Federal'),
                            ('ES', 'Espírito Santo'),
                            ('GO', 'Goiás'),
                            ('MA', 'Maranhão'),
                            ('MT', 'Mato Grosso'),
                            ('MS', 'Mato Grosso do Sul'),
                            ('MG', 'Minas Gerais'),
                            ('PA', 'Pará'),
                            ('PB', 'Paraíba'),
                            ('PR', 'Paraná'),
                            ('PE', 'Pernambuco'),
                            ('PI', 'Piauí'),
                            ('RJ', 'Rio de Janeiro'),
                            ('RN', 'Rio Grande do Norte'),
                            ('RS', 'Rio Grande do Sul'),
                            ('RO', 'Rondônia'),
                            ('RR', 'Roraima'),
                            ('SC', 'Santa Catarina'),
                            ('SP', 'São Paulo'),
                            ('SE', 'Sergipe'),
                            ('TO', 'Tocantins'),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                ('titulo_data_emissao', models.DateField(null=True)),
                ('rg', models.CharField(max_length=20, null=True, verbose_name='RG')),
                ('rg_orgao', models.CharField(max_length=10, null=True)),
                ('rg_data', models.DateField(null=True)),
                (
                    'rg_uf',
                    djtools.db.models.BrEstadoBrasileiroField(
                        choices=[
                            ('AC', 'Acre'),
                            ('AL', 'Alagoas'),
                            ('AP', 'Amapá'),
                            ('AM', 'Amazonas'),
                            ('BA', 'Bahia'),
                            ('CE', 'Ceará'),
                            ('DF', 'Distrito Federal'),
                            ('ES', 'Espírito Santo'),
                            ('GO', 'Goiás'),
                            ('MA', 'Maranhão'),
                            ('MT', 'Mato Grosso'),
                            ('MS', 'Mato Grosso do Sul'),
                            ('MG', 'Minas Gerais'),
                            ('PA', 'Pará'),
                            ('PB', 'Paraíba'),
                            ('PR', 'Paraná'),
                            ('PE', 'Pernambuco'),
                            ('PI', 'Piauí'),
                            ('RJ', 'Rio de Janeiro'),
                            ('RN', 'Rio Grande do Norte'),
                            ('RS', 'Rio Grande do Sul'),
                            ('RO', 'Rondônia'),
                            ('RR', 'Roraima'),
                            ('SC', 'Santa Catarina'),
                            ('SP', 'São Paulo'),
                            ('SE', 'Sergipe'),
                            ('TO', 'Tocantins'),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                ('nascimento_data', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Nascimento')),
                ('nome_mae', models.CharField(max_length=100, null=True, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Pai')),
                ('foto', djtools.thumbs.ImageWithThumbsField(blank=True, null=True, storage=djtools.storages.get_overwrite_storage(), upload_to='fotos')),
                ('cnh_carteira', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_registro', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_categoria', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_emissao', models.DateField(blank=True, null=True)),
                ('cnh_uf', models.CharField(blank=True, max_length=2, null=True)),
                ('cnh_validade', models.DateField(blank=True, null=True)),
                ('ctps_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('ctps_uf', models.CharField(blank=True, max_length=2, null=True)),
                ('ctps_data_prim_emprego', models.DateField(blank=True, null=True)),
                ('ctps_serie', models.CharField(blank=True, max_length=10, null=True)),
                ('pis_pasep', models.CharField(blank=True, max_length=20, null=True, verbose_name='PIS / PASEP')),
                ('pagto_agencia', models.CharField(blank=True, max_length=20, null=True, verbose_name='Agência')),
                ('pagto_ccor', models.CharField(blank=True, max_length=20, null=True, verbose_name='Conta')),
                ('pagto_ccor_tipo', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo')),
                ('username', models.CharField(db_index=True, max_length=50, null=True, unique=True)),
                (
                    'tem_digital_fraca',
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text='Pessoas com impressão digital fraca devem ter essa opção marcada',
                        verbose_name='Permitir registro de ponto sem impressão digital',
                    ),
                ),
                (
                    'senha_ponto',
                    models.CharField(
                        blank=True,
                        help_text='Pessoas com impressão digital fraca devem ter uma senha definida para usar o terminal',
                        max_length=128,
                        verbose_name='Senha para registro de ponto sem impressão digital',
                    ),
                ),
                ('data_obito', models.DateField(blank=True, null=True)),
                ('template', models.BinaryField(blank=True, null=True)),
                ('template_importado_terminal', models.BooleanField(default=False, verbose_name='Digital importada do terminal')),
                (
                    'nacionalidade',
                    models.IntegerField(
                        choices=[[1, 'Brasileiro Nato'], [2, 'Brasileiro Naturalizado'], [3, 'Equiparado'], [4, 'Estrangeiro']], null=True, verbose_name='Nacionalidade'
                    ),
                ),
                ('lattes', models.URLField(blank=True)),
                ('eh_servidor', models.BooleanField(default=False)),
                ('eh_aluno', models.BooleanField(default=False)),
                ('eh_prestador', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Pessoa Física',
                'verbose_name_plural': 'Pessoas Físicas',
                'db_table': 'pessoa_fisica',
                'permissions': (
                    ('pode_gerar_cracha', 'Pode gerar crachá'),
                    ('pode_cadastrar_digital', 'Pode cadastrar digital'),
                    ('pode_atualizar_digital', 'Pode atualizar digital'),
                    ('pode_gerar_carteira', 'Pode gerar carteira'),
                ),
            },
            bases=('rh.pessoa',),
        ),
        migrations.CreateModel(
            name='PessoaJuridica',
            fields=[
                (
                    'pessoa_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.Pessoa'),
                ),
                ('nome_fantasia', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Nome Fantasia')),
                ('cnpj', djtools.db.models.BrCnpjField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('ramo_atividade', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Ramo de Atividade')),
                ('nome_representante_legal', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Nome do Representante Legal')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('matricula', djtools.db.models.CharFieldPlus(db_index=True, max_length=30, verbose_name='Matrícula')),
            ],
            options={'verbose_name': 'Pessoa Jurídica', 'verbose_name_plural': 'Pessoas Jurídicas', 'db_table': 'pessoa_juridica'},
            bases=('rh.pessoa',),
        ),
        migrations.AddField(
            model_name='setor',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                db_column='uo_id',
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='setor_set',
                to='rh.UnidadeOrganizacional',
                verbose_name='Campus',
            ),
        ),
        migrations.AddField(
            model_name='servidorsetorlotacaohistorico',
            name='setor_exercicio',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='servidor_setor_exercicio_historico', to='rh.Setor'),
        ),
        migrations.AddField(
            model_name='servidorsetorlotacaohistorico', name='setor_lotacao', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor')
        ),
        migrations.AddField(model_name='servidorsetorhistorico', name='setor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor')),
        migrations.AddField(
            model_name='servidorocorrencia',
            name='subgrupo',
            field=djtools.db.models.ForeignKeyPlus(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.SubgrupoOcorrencia'),
        ),
        migrations.AddField(model_name='servidorfuncaohistorico', name='setor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor')),
        migrations.AddField(
            model_name='servidorfuncaohistorico',
            name='setor_suap',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setor_suap', to='rh.Setor'),
        ),
        migrations.AddField(
            model_name='pessoaexterna',
            name='setores_adicionais',
            field=models.ManyToManyField(
                blank=True, help_text='O funcionário terá acesso aos processos dos setores adicionais no sistema de protocolo.', to='rh.Setor', verbose_name='Setores Adicionais'
            ),
        ),
        migrations.AddField(
            model_name='pessoa',
            name='setores_adicionais',
            field=models.ManyToManyField(
                blank=True, help_text='O funcionário terá acesso aos processos dos setores adicionais no sistema de protocolo.', to='rh.Setor', verbose_name='Setores Adicionais'
            ),
        ),
        migrations.AddField(
            model_name='papel',
            name='setor_suap',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='papel_servidor_setor_suap', to='rh.Setor'),
        ),
        migrations.AlterUniqueTogether(name='padraovencimento', unique_together=set([('categoria', 'classe', 'posicao_vertical')])),
        migrations.AddField(model_name='jornadatrabalhopca', name='pca', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PCA')),
        migrations.AlterUniqueTogether(name='instituicao', unique_together=set([('nome',)])),
        migrations.AddField(
            model_name='deficiencia',
            name='grupo_deficiencia',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.GrupoDeficiencia', verbose_name='Grupo de Deficiência'),
        ),
        migrations.AddField(
            model_name='cargoemprego', name='grupo_cargo_emprego', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.GrupoCargoEmprego')
        ),
        migrations.AddField(
            model_name='bilheteviagem',
            name='viagem',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Viagem', verbose_name='Viagem'),
        ),
        migrations.AddField(
            model_name='avaliador',
            name='banco',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Banco', verbose_name='Bancos'),
        ),
        migrations.AddField(
            model_name='avaliador',
            name='instituicao_origem',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Instituicao', verbose_name='Instituição'),
        ),
        migrations.AddField(
            model_name='avaliador',
            name='padrao_vencimento',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.PadraoVencimento'),
        ),
        migrations.AddField(
            model_name='avaliador', name='titulacao', field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Titulacao')
        ),
        migrations.AddField(model_name='avaliador', name='vinculo', field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='comum.Vinculo')),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                (
                    'pessoafisica_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.PessoaFisica'),
                )
            ],
            options={'verbose_name': 'Funcionário', 'verbose_name_plural': 'Funcionários', 'db_table': 'suap_funcionario'},
            bases=('rh.pessoafisica',),
        ),
        migrations.AddField(
            model_name='viagem',
            name='pessoa_fisica',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='viagemscdppessoafisica_set', to='rh.PessoaFisica'),
        ),
        migrations.AlterUniqueTogether(
            name='posicionamentopca', unique_together=set([('codigo_pca_posicionamento', 'codigo_posicionamento_pca', 'forma_entrada', 'data_inicio_posicionamento_pca')])
        ),
        migrations.AddField(
            model_name='pessoajuridicacontato', name='pessoa_juridica', field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaJuridica')
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='deficiencia',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Deficiencia', verbose_name='Deficiência'),
        ),
        migrations.AddField(
            model_name='pessoafisica', name='estado_civil', field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.EstadoCivil')
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='nascimento_municipio',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Municipio', verbose_name='Município'),
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='pagto_banco',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Banco', verbose_name='Banco'),
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='pais_origem',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Pais', verbose_name='País de Origem'),
        ),
        migrations.AddField(
            model_name='pessoafisica', name='raca', field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Raca')
        ),
        migrations.AddField(
            model_name='pessoafisica', name='user', field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
        ),
        migrations.AddField(
            model_name='pessoaexterna', name='pessoa_fisica', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica')
        ),
        migrations.AddField(
            model_name='papel',
            name='pessoa',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica', verbose_name='Pessoa Física'),
        ),
        migrations.AlterUniqueTogether(name='bilheteviagem', unique_together=set([('viagem', 'numero')])),
        migrations.CreateModel(
            name='Servidor',
            fields=[
                (
                    'funcionario_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.Funcionario'),
                ),
                ('matricula', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Matrícula')),
                ('matricula_crh', models.CharField(db_index=True, max_length=20, verbose_name='Matrícula CRH')),
                ('matricula_sipe', models.CharField(db_index=True, max_length=20, verbose_name='Matrícula SIPE')),
                ('matricula_anterior', models.CharField(blank=True, max_length=20, null=True, verbose_name='Matrícula Anterior')),
                ('qtde_depend_ir', models.IntegerField(blank=True, null=True)),
                ('nivel_padrao', models.CharField(blank=True, max_length=4, null=True)),
                ('opera_raio_x', models.BooleanField(default=False)),
                ('num_processo_aposentadoria', models.CharField(blank=True, max_length=30, null=True)),
                ('numerador_prop_aposentadoria', models.CharField(blank=True, max_length=20, null=True)),
                ('denominador_prop_aposentadoria', models.CharField(blank=True, max_length=20, null=True)),
                ('data_cadastro_siape', models.DateField(blank=True, null=True)),
                ('data_inicio_servico_publico', models.DateField(blank=True, null=True)),
                ('data_inicio_exercicio_na_instituicao', models.DateField(blank=True, null=True)),
                ('data_posse_na_instituicao', models.DateField(blank=True, null=True)),
                ('data_posse_no_cargo', models.DateField(blank=True, null=True)),
                ('data_inicio_exercicio_no_cargo', models.DateField(blank=True, null=True)),
                ('data_fim_servico_na_instituicao', models.DateField(blank=True, null=True)),
                ('email_siape', models.EmailField(blank=True, max_length=254, verbose_name='Email SIAPE')),
                ('email_institucional', models.EmailField(blank=True, max_length=254, verbose_name='Email Institucional')),
                ('email_academico', models.EmailField(blank=True, max_length=254, verbose_name='Email Acadêmico')),
                ('email_google_classroom', models.EmailField(blank=True, max_length=254, verbose_name='Email do Google Classroom')),
                ('alterado_em', models.DateTimeField(auto_now=True)),
                ('identificacao_unica_siape', models.CharField(blank=True, default='Novo', max_length=20, null=True)),
                ('codigo_vaga', models.CharField(blank=True, max_length=7, null=True)),
                ('cargo_emprego_data_ocupacao', models.DateField(blank=True, null=True)),
                ('cargo_emprego_data_saida', models.DateField(blank=True, null=True)),
                ('funcao_opcao', models.NullBooleanField()),
                ('funcao_codigo', models.CharField(blank=True, max_length=20, null=True)),
                ('funcao_data_ocupacao', models.DateField(blank=True, null=True)),
                ('funcao_data_saida', models.DateField(blank=True, null=True)),
                ('setor_lotacao_data_ocupacao', models.DateField(null=True)),
                ('data_exclusao_instituidor', models.DateField(blank=True, null=True)),
                ('eh_docente', models.NullBooleanField()),
                ('eh_tecnico_administrativo', models.NullBooleanField()),
                ('areas_de_conhecimento', djtools.db.models.ManyToManyFieldPlus(blank=True, to='rh.AreaConhecimento')),
                ('cargo_classe', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.CargoClasse')),
                ('cargo_emprego', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.CargoEmprego')),
                ('funcao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Funcao')),
                ('funcao_atividade', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Atividade')),
                ('jornada_trabalho', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.JornadaTrabalho')),
                ('nivel_escolaridade', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.NivelEscolaridade')),
                ('pessoa_fisica', djtools.db.models.ForeignKeyPlus(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='servidores', to='rh.PessoaFisica')),
                ('regime_juridico', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.RegimeJuridico')),
                (
                    'setor_exercicio',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='servidores_exercicio',
                        to='rh.Setor',
                        verbose_name='Setor de Exercício SIAPE',
                    ),
                ),
                ('situacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Situacao', verbose_name='Situação')),
                ('titulacao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Titulacao')),
            ],
            options={
                'verbose_name': 'Servidor',
                'verbose_name_plural': 'Servidores',
                'db_table': 'servidor',
                'permissions': (
                    ('pode_ver_relatorios_rh', 'Pode ver relatórios do RH'),
                    ('chefe', 'Chefe'),
                    ('gabinete', 'Gabinete'),
                    ('auditor', 'Auditor'),
                    ('eh_servidor', 'Servidor'),
                    ('eh_rh_sistemico', 'RH Sistêmico'),
                    ('eh_rh_campus', 'RH Campus'),
                    ('cadastrador_rsc_simec', 'Cadastrador RSC/SIMEC'),
                    ('pode_ver_cpf_servidor', 'Pode ver CPF'),
                    ('pode_ver_dados_pessoais_servidor', 'Pode ver dados pessoais de servidores'),
                    ('pode_ver_telefones_pessoais_servidor', 'Pode ver telefones pessoais de servidores'),
                    ('pode_ver_emails_servidor', 'Pode visualizar emails de servidores'),
                    ('pode_ver_endereco_servidor', 'Pode visualizar endereço de servidores'),
                    ('pode_ver_dados_bancarios_servidor', 'Pode visualizar dados bancários de servidores'),
                    ('pode_ver_dados_professor_servidor', 'Pode visualizar dados de professor de servidores'),
                    ('pode_ver_ferias_servidor', 'Pode visualizar Férias dos servidores'),
                    ('pode_ver_ocorrencias_afastamentos_servidor', 'Pode visualizar Ocorrências e Afastamentos dos Servidores'),
                    ('pode_ver_historico_setores_servidor', 'Pode visualizar historico de setor dos Servidores'),
                    ('pode_ver_historico_funcional_servidor', 'Pode visualizar historico funcional dos Servidores'),
                    ('pode_ver_historico_funcao_servidor', 'Pode visualizar historico de funções dos Servidores'),
                    ('pode_ver_arquivos_servidor', 'Pode visualizar arquivos dos Servidores'),
                    ('pode_ver_contracheques_servidor', 'Pode visualizar contracheques dos Servidores'),
                    ('pode_ver_viagens_servidor', 'Pode visualizar viagens dos Servidores'),
                    ('pode_editar_cargo_emprego_externo', 'Pode editar cargo emprego de servidor fora do PCCTAE'),
                    ('pode_ver_identificacao_unica_siape', 'Pode visualizar Identificação Única SIAPE'),
                    ('pode_importar_servidor_ws', 'Pode importar servidor via Webservice'),
                    ('pode_gerenciar_extracao_scdp', 'Pode gerenciar extração SCDP'),
                    ('pode_gerenciar_extracao_siape', 'Pode gerenciar extração SIAPE'),
                ),
            },
            bases=('rh.funcionario',),
        ),
        migrations.AlterUniqueTogether(name='papel', unique_together=set([('pessoa', 'papel_content_type', 'papel_content_id', 'data_inicio')])),
        migrations.AddField(
            model_name='horarioagendado',
            name='solicitante',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solicitante', to='rh.Funcionario'),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='setor',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                help_text='Este setor poderá ser modificado manualmente pelos responsáveis pelo RH',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='funcionarios',
                to='rh.Setor',
                verbose_name='Setor SUAP',
            ),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='setor_funcao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='funcionarios_com_funcao', to='rh.Setor', verbose_name='Setor da Função SIAPE'
            ),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='setor_lotacao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='funcionarios_lotados', to='rh.Setor', verbose_name='Setor de Lotação SIAPE'
            ),
        ),
        migrations.AddField(
            model_name='viagem',
            name='servidor',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='viagemscdpservidor_set', to='rh.Servidor'),
        ),
        migrations.AddField(
            model_name='servidorsetorlotacaohistorico', name='servidor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(
            model_name='servidorsetorhistorico', name='servidor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(
            model_name='servidorocorrencia', name='servidor', field=djtools.db.models.ForeignKeyPlus(editable=False, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(
            model_name='servidorfuncaohistorico', name='servidor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(
            model_name='servidorafastamento', name='servidor', field=djtools.db.models.ForeignKeyPlus(editable=False, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(model_name='pca', name='servidor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')),
        migrations.AddField(
            model_name='cargahorariareduzida',
            name='chefe_imediato_validador',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chefe_imediato_validador', to='rh.Servidor'),
        ),
        migrations.AddField(
            model_name='cargahorariareduzida', name='servidor', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(
            model_name='cargahorariareduzida',
            name='servidor_rh_validador',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servidor_rh_validador', to='rh.Servidor', verbose_name='Validador'
            ),
        ),
        migrations.AddField(
            model_name='agendaatendimentohorario',
            name='profissional',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Profissional'),
        ),
        migrations.AlterUniqueTogether(name='servidorsetorlotacaohistorico', unique_together=set([('servidor', 'data_inicio_setor_lotacao')])),
        migrations.AlterUniqueTogether(name='servidorsetorhistorico', unique_together=set([('servidor', 'data_inicio_no_setor')])),
        migrations.AlterUniqueTogether(name='servidorfuncaohistorico', unique_together=set([('servidor', 'data_inicio_funcao')])),
        migrations.AlterUniqueTogether(name='servidorafastamento', unique_together=set([('servidor', 'afastamento', 'data_inicio')])),
        migrations.AlterIndexTogether(name='servidorafastamento', index_together=set([('servidor', 'afastamento', 'data_inicio')])),
    ]
