# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 15:05


import ckeditor.fields
import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cnpq', '0001_initial'),
        ('rh', '0001_initial'),
        ('edu', '0002_auto_20190814_1454'),
        ('patrimonio', '0001_initial'),
        ('ae', '0002_auto_20190814_1454'),
        ('financeiro', '0001_initial'),
        ('comum', '0002_auto_20190814_1443'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaConhecimentoParecerista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('areas_de_conhecimento', djtools.db.models.ManyToManyFieldPlus(blank=True, to='rh.AreaConhecimento')),
                ('parecerista', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.PrestadorServico', verbose_name='Parecerista')),
            ],
            options={'verbose_name': 'Área de Conhecimento do Parecerista', 'verbose_name_plural': 'Áreas de Conhecimento do Parecerista'},
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateTimeFieldPlus(auto_now=True, verbose_name='Data')),
                ('parecer', models.TextField()),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação')),
                ('pontuacao_normalizada', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação Normalizada')),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_avaliador', to='rh.PessoaFisica', verbose_name='Avaliador'
                    ),
                ),
            ],
            options={'verbose_name': 'Avaliação', 'verbose_name_plural': 'Avaliações'},
        ),
        migrations.CreateModel(
            name='AvaliadorExterno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telefone', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('lattes', models.URLField(blank=True)),
                (
                    'instituicao_origem',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_instituicao_avaliador',
                        to='rh.Instituicao',
                        verbose_name='Instituição',
                    ),
                ),
                ('pessoa_fisica', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_avaliador_externo', to='rh.PessoaFisica')),
                (
                    'titulacao',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_avaliador_instituicao', to='rh.Titulacao', verbose_name='Titulação'
                    ),
                ),
                ('vinculo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_avaliador_externo_vinculo', to='comum.Vinculo')),
            ],
            options={'verbose_name': 'Avaliador Externo', 'verbose_name_plural': 'Avaliadores Externos'},
        ),
        migrations.CreateModel(
            name='AvaliadorIndicado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejeitado', models.BooleanField(default=False, verbose_name='Indicação Rejeitada pelo Avaliador')),
                ('rejeitado_em', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Rejeitado em')),
                (
                    'pessoa_fisica',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_avaliador_indicado', to='rh.PessoaFisica', verbose_name='Avaliador'
                    ),
                ),
            ],
            options={'verbose_name': 'Avaliador', 'verbose_name_plural': 'Avaliadores'},
        ),
        migrations.CreateModel(
            name='BolsaDisponivel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'num_maximo_ic',
                    models.PositiveIntegerField(help_text='Informe o número máximo de Bolsas de Iniciação Científica.', null=True, verbose_name='Bolsas de Iniciação Científica'),
                ),
                (
                    'num_maximo_pesquisador',
                    models.PositiveIntegerField(help_text='Informe o número máximo de Bolsas para Pesquisador.', null=True, verbose_name='Bolsas para Pesquisador'),
                ),
                ('data_avaliacao_classificacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Avaliação da Classificação')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='ComissaoEditalPesquisa',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'))],
            options={'verbose_name': 'Comissão de Avaliação', 'verbose_name_plural': 'Comissões de Avaliação'},
        ),
        migrations.CreateModel(
            name='CriterioAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('pontuacao_maxima', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação Máxima')),
            ],
            options={'verbose_name': 'Critério de Avaliação', 'verbose_name_plural': 'Critérios de Avaliação', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='Desembolso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'mes',
                    models.PositiveIntegerField(
                        choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5'], [6, '6'], [7, '7'], [8, '8'], [9, '9'], [10, '10'], [11, '11'], [12, '12']],
                        help_text='O mês 1 indica o primeiro mês do projeto',
                        verbose_name='Mês',
                    ),
                ),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor (R$)')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Cadastro do Desembolso')),
                ('ano', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_desembolso_ano', to='comum.Ano', verbose_name='Ano')),
                (
                    'despesa',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_desembolso_despesa', to='financeiro.NaturezaDespesa', verbose_name='Despesa'
                    ),
                ),
            ],
            options={'verbose_name': 'Desembolso', 'verbose_name_plural': 'Desembolsos'},
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                (
                    'tipo_edital',
                    models.CharField(choices=[('1', 'Pesquisa'), ('2', 'Inovação'), ('3', 'Pesquisa/Inovação Contínuo')], max_length=10, verbose_name='Tipo do Edital'),
                ),
                ('forma_selecao', models.CharField(choices=[('1', 'Campus'), ('2', 'Geral')], default='1', max_length=10, verbose_name='Forma de Seleção')),
                (
                    'campus_especifico',
                    models.BooleanField(
                        default=False,
                        help_text='Caso esta opção seja marcada, os projetos deste edital poderão ser avaliados por servidores do mesmo campus do projeto.',
                        verbose_name='Edital de Campus',
                    ),
                ),
                (
                    'qtd_bolsa_alunos',
                    models.PositiveIntegerField(default=0, help_text='Número máximo de bolsas para alunos.', null=True, verbose_name='Total de Bolsas para Alunos'),
                ),
                (
                    'qtd_bolsa_servidores',
                    models.PositiveIntegerField(default=0, help_text='Número máximo de bolsas para servidores.', null=True, verbose_name='Total de Bolsas para Servidores'),
                ),
                (
                    'formato',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Completo', 'Completo'), ('Simplificado', 'Simplificado')], default='Completo', max_length=20, verbose_name='Formato do Edital'
                    ),
                ),
                ('inicio_inscricoes', djtools.db.models.DateTimeFieldPlus(verbose_name='Início das Inscrições')),
                ('fim_inscricoes', djtools.db.models.DateTimeFieldPlus(verbose_name='Fim das Inscrições')),
                ('inicio_pre_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Início da Pré-Seleção')),
                ('inicio_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Início da Seleção')),
                ('fim_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Fim da Seleção')),
                ('data_recurso', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data Limite Para Recursos')),
                ('divulgacao_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Divulgação da Seleção')),
                ('coordenador_pode_receber_bolsa', models.BooleanField(default=True, verbose_name='Coordenador pode receber bolsa')),
                (
                    'exige_grupo_pesquisa',
                    models.BooleanField(
                        default=True,
                        help_text='Marque esta opção se somente servidor vinculado a um grupo de pesquisa da Instituição pode submeter projeto.',
                        verbose_name='Apenas para membros de grupo de pesquisa',
                    ),
                ),
                ('participa_aluno', models.BooleanField(default=False, help_text='Marque esta opção caso alunos possam participar do projeto.', verbose_name='Participa Aluno')),
                ('qtd_maxima_alunos', models.PositiveIntegerField(default=0, help_text='Número máximo de alunos em cada projeto.', null=True, verbose_name='Total de Alunos')),
                (
                    'qtd_maxima_alunos_bolsistas',
                    models.PositiveIntegerField(
                        default=0, help_text='Número máximo de alunos candidatos à bolsa em cada projeto.', null=True, verbose_name='Total de Alunos Bolsistas'
                    ),
                ),
                (
                    'participa_servidor',
                    models.BooleanField(default=False, help_text='Marque esta opção caso servidores possam participar do projeto.', verbose_name='Participa Servidor'),
                ),
                (
                    'qtd_maxima_servidores',
                    models.PositiveIntegerField(default=0, help_text='Número máximo de servidores em cada projeto.', null=True, verbose_name='Total de Servidores'),
                ),
                (
                    'qtd_maxima_servidores_bolsistas',
                    models.PositiveIntegerField(
                        default=0, help_text='Número máximo de servidores candidatos à bolsa em cada projeto.', null=True, verbose_name='Total de Servidores Bolsistas'
                    ),
                ),
                (
                    'qtd_anos_anteriores_publicacao',
                    models.PositiveIntegerField(
                        default=0,
                        help_text='Exemplo: *3* anos anteriores para edital cadastrado em 2014, serão consideradas as publicações em 2011, 2012 e 2013.',
                        null=True,
                        verbose_name='Anos de consideração das Publicações',
                    ),
                ),
                (
                    'peso_avaliacao_lattes_coordenador',
                    models.PositiveIntegerField(
                        default=0,
                        help_text='Informe o peso em percentual que será usado na Avaliação do Coordenador do Projeto através do currículo Lattes',
                        null=True,
                        verbose_name='Peso da Avaliação do Coordenador (%)',
                    ),
                ),
                (
                    'peso_avaliacao_projeto',
                    models.PositiveIntegerField(
                        default=0, help_text='Informe o peso em percentual que será usado na Avaliação do Projeto', null=True, verbose_name='Peso da Avaliação do Projeto (%)'
                    ),
                ),
                ('inclusao_bolsas_ae', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da geração das bolsas no AE')),
                ('data_avaliacao_classificacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Avaliação da Classificação')),
                (
                    'termo_compromisso_coordenador',
                    ckeditor.fields.RichTextField(
                        blank=True, help_text='Informe o termo de compromisso do coordenador do projeto.', null=True, verbose_name='Termo de Compromisso do Coordenador'
                    ),
                ),
                ('ch_semanal_coordenador', models.PositiveIntegerField(default=4, help_text='Carga horária semanal do coordenador.', verbose_name='Carga Horária do Coordenador')),
                (
                    'nota_corte_projeto_fluxo_continuo',
                    models.PositiveIntegerField(
                        default=0,
                        help_text='Informe o percentual minímo exigido da pontuação máxima para considerar um projeto aprovado.',
                        null=True,
                        verbose_name='Ponto de Corte para Aprovação de Projeto (%)',
                    ),
                ),
                (
                    'permite_coordenador_com_bolsa_previa',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso este edital permita que o coordenador seja bolsista mesmo que ele já receba bolsa em outro projeto em execução atualmente.',
                        verbose_name='Coordenador com mais de uma bolsa',
                    ),
                ),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Cadastrado em')),
                ('autorizado', models.NullBooleanField(default=True, verbose_name='Edital autorizado')),
                ('autorizado_em', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Autorizado em')),
                (
                    'lattes_obrigatorio',
                    models.BooleanField(
                        default=True,
                        help_text='Marque esta opção caso apenas os alunos que informaram a URL do Currículo Lattes possam ser adicionados na equipe do projeto.',
                        verbose_name='Currículo Lattes Obrigatório',
                    ),
                ),
                (
                    'tempo_maximo_meses_curriculo_desatualizado',
                    models.PositiveIntegerField(
                        default=6,
                        help_text='Período máximo em meses que o curriculo do Coordenador pode estar desatualizado para aceitação de projetos.',
                        verbose_name='Período máximo currículo desatualizado',
                    ),
                ),
                (
                    'atividade_todo_mes',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção se for obrigatória a execução de pelo menos uma atividade em cada mês de duração do projeto.',
                        verbose_name='Atividade Todo Mês',
                    ),
                ),
                (
                    'prazo_atividade',
                    models.IntegerField(
                        blank=True,
                        help_text='Informe o prazo máximo de duração de cada atividade. Se não há prazo máximo, deixe este campo em branco.',
                        null=True,
                        verbose_name='Prazo Máximo de Cada Atividade (em dias)',
                    ),
                ),
                (
                    'discente_proprio_campus',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso só seja permitida a participação de alunos do mesmo campus do projeto.',
                        verbose_name='Apenas Alunos do Campus do Projeto',
                    ),
                ),
                (
                    'impedir_projeto_sem_anexo',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção para impedir que projetos sem anexos cadastrados avancem para a fase de pré-seleção.',
                        verbose_name='Impedir Projetos sem Anexos',
                    ),
                ),
                (
                    'exige_anuencia',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção para que apenas os projetos com registro da anuência da chefia avancem para a fase de pré-seleção.',
                        verbose_name='Exigir Anuência da Chefia',
                    ),
                ),
                ('arquivo', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_edital_arquivo', to='comum.Arquivo')),
                (
                    'autorizado_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_autoriza_cadastro_edital',
                        to='rh.PessoaFisica',
                        verbose_name='Autorizado por',
                    ),
                ),
                (
                    'autorizado_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_vinculo_autoriza_cadastro_edital',
                        to='comum.Vinculo',
                        verbose_name='Autorizado por',
                    ),
                ),
                (
                    'cadastrado_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_cadastro_edital',
                        to='rh.PessoaFisica',
                        verbose_name='Cadastrado por',
                    ),
                ),
                (
                    'cadastrado_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_vinculo_cadastro_edital',
                        to='comum.Vinculo',
                        verbose_name='Cadastrado por',
                    ),
                ),
                (
                    'titulacoes_avaliador',
                    djtools.db.models.ManyToManyFieldPlus(
                        help_text='Selecione quais titulações serão permitidas para os avaliadores deste edital.', to='rh.Titulacao', verbose_name='Titulações dos Avaliadores'
                    ),
                ),
            ],
            options={'verbose_name': 'Edital', 'verbose_name_plural': 'Editais', 'permissions': (('pode_ver_config_edital', 'Pode ver configuração edital'),)},
        ),
        migrations.CreateModel(
            name='EditalAnexo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                (
                    'tipo_membro',
                    models.CharField(
                        blank=True,
                        choices=[('1', 'Docente'), ('5', 'Técnico Administrativo'), ('2', 'Aluno'), ('3', 'Coordenador Docente'), ('4', 'Coordenador Técnico Administrativo')],
                        max_length=1,
                        null=True,
                        verbose_name='Tipo de Membro',
                    ),
                ),
                (
                    'vinculo',
                    models.CharField(blank=True, choices=[('Bolsista', 'Bolsista'), ('Voluntário', 'Voluntário')], max_length=20, null=True, verbose_name='Tipo de Vínculo'),
                ),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')),
            ],
            options={'ordering': ['ordem']},
        ),
        migrations.CreateModel(
            name='EditalAnexoAuxiliar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('arquivo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_edital_anexoauxiliar', to='comum.Arquivo')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')),
            ],
            options={'ordering': ['ordem']},
        ),
        migrations.CreateModel(
            name='EditalArquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('arquivo', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/pesquisa/edital/')),
                ('data_cadastro', djtools.db.models.DateTimeFieldPlus(verbose_name='Data do Cadastro')),
                (
                    'autor',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_autor_arquivo', to='rh.PessoaFisica', verbose_name='Autor'
                    ),
                ),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')),
                (
                    'vinculo_autor',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_editalarquivo_vinculo', to='comum.Vinculo', verbose_name='Autor'
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='EditalSubmissaoObra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Título')),
                ('arquivo', models.FileField(upload_to='private-media/pesquisa/editalsubmissaoobra/', verbose_name='Arquivo do Edital')),
                ('data_inicio_submissao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início da Submissão')),
                ('data_termino_submissao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término da Submissão')),
                ('data_inicio_verificacao_plagio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início da Verificação de Plágio')),
                ('data_termino_verificacao_plagio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término da Verificação de Plágio')),
                ('data_inicio_analise_especialista', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Análise de Especialista')),
                ('data_termino_analise_especialista', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Análise de Especialista')),
                ('data_inicio_validacao_conselho', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Validação do Conselho')),
                ('data_termino_validacao_conselho', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Validação do Conselho')),
                ('data_inicio_aceite', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Aceite')),
                ('data_termino_aceite', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Aceite')),
                ('data_inicio_termos', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Envio dos Termos')),
                ('data_termino_termos', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Envio dos Termos')),
                ('data_inicio_revisao_linguistica', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Revisão Linguística/Textual')),
                ('data_termino_revisao_linguistica', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Revisão Linguística/Textual')),
                ('data_inicio_diagramacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Diagramação')),
                ('data_termino_diagramacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Diagramação')),
                ('data_inicio_solicitacao_isbn', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Solicitação ISBN')),
                ('data_termino_solicitacao_isbn', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Solicitação ISBN')),
                ('data_inicio_impressao_boneco', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Impressão de Boneco')),
                ('data_termino_impressao_boneco', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Impressão de Boneco')),
                ('data_revisao_layout', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Revisão de Layout')),
                ('data_inicio_correcao_final', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Correção Final')),
                ('data_termino_correcao_final', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Correção Final')),
                ('data_inicio_analise_liberacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Análise de Liberação')),
                ('data_termino_analise_liberacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Análise de Liberação')),
                ('data_inicio_impressao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início de Impressão')),
                ('data_termino_impressao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término de Impressão')),
                ('data_lancamento', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Lançamento')),
                ('local_lancamento', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Local de Lançamento')),
                ('observacoes_lancamento', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Observações do Lançamento')),
                ('instrucoes', ckeditor.fields.RichTextField(verbose_name='Instruções para Submissão de Obra')),
                ('manual', models.FileField(upload_to='private-media/pesquisa/editalsubmissaoobra/', verbose_name='Manual do Autor')),
                (
                    'questionario_parecerista',
                    models.FileField(null=True, upload_to='private-media/pesquisa/editalsubmissaoobra/', verbose_name='Ficha de Avaliação para Parecerista'),
                ),
            ],
            options={'verbose_name': 'Edital para Submissão de Obra', 'verbose_name_plural': 'Editais para Submissão de Obra'},
        ),
        migrations.CreateModel(
            name='EquipamentoLaboratorioPesquisa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=5000, verbose_name='Descrição')),
                ('imagem', models.ImageField(null=True, upload_to='upload/pesquisa/fotos/')),
            ],
            options={'verbose_name': 'Equipamento do Laboratório de Pesquisa', 'verbose_name_plural': 'Equipamentos do Laboratório de Pesquisa'},
        ),
        migrations.CreateModel(
            name='Etapa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('indicadores_qualitativos', models.TextField(verbose_name='Resultados Esperados')),
                ('inicio_execucao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Início da Execução')),
                ('fim_execucao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Fim da Execução')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data de Cadastro da Etapa')),
            ],
            options={'verbose_name': 'Atividade', 'verbose_name_plural': 'Atividades'},
        ),
        migrations.CreateModel(
            name='FotoLaboratorioPesquisa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=1000, verbose_name='Descrição')),
                ('imagem', models.ImageField(upload_to='upload/pesquisa/fotos/')),
            ],
            options={'verbose_name': 'Foto do Laboratório de Pesquisa', 'verbose_name_plural': 'Fotos do Laboratório de Pesquisa'},
        ),
        migrations.CreateModel(
            name='FotoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legenda', models.TextField(blank=True)),
                ('imagem', models.ImageField(upload_to='upload/pesquisa/fotos/')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='HistoricoEquipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movimentacao', models.CharField(max_length=50, null=True)),
                ('data_movimentacao', djtools.db.models.DateFieldPlus()),
                ('data_movimentacao_saida', djtools.db.models.DateFieldPlus(blank=True, null=True)),
                ('categoria', models.CharField(blank=True, choices=[('1', 'Coordenador'), ('2', 'Membro')], max_length=5, null=True)),
                ('vinculo', models.CharField(blank=True, choices=[('Bolsista', 'Bolsista'), ('Voluntário', 'Voluntário')], max_length=25, null=True)),
                ('carga_horaria', models.PositiveIntegerField(blank=True, help_text='Carga horária semanal', null=True, verbose_name='Carga Horária')),
                (
                    'tipo_de_evento',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (11, 'Saiu da coordenação do projeto'),
                            (12, 'Tornou-se coordenador do projeto'),
                            (1, 'Assumiu a coordenação do projeto'),
                            (2, 'Aluno inserido'),
                            (3, 'Servidor inserido'),
                            (4, 'Participante ativado'),
                            (5, 'Participante inativado'),
                            (6, 'Participante excluído'),
                            (7, 'Bolsa concedida durante a distribuição de bolsas'),
                            (8, 'Bolsas não concedida durante a distribuição de bolsas'),
                            (9, 'Aluno alterado'),
                            (10, 'Servidor alterado'),
                        ],
                    ),
                ),
                ('obs', models.CharField(max_length=1000, null=True)),
            ],
            options={'verbose_name': 'Histórico da Equipe', 'verbose_name_plural': 'Históricos das Equipes'},
        ),
        migrations.CreateModel(
            name='ItemAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação')),
                ('parecer', models.TextField(blank=True, null=True)),
                ('avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Avaliacao')),
                ('criterio_avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.CriterioAvaliacao', verbose_name='Critério')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='ItemMemoriaCalculo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(max_length=2014, verbose_name='Descrição')),
                ('unidade_medida', models.CharField(max_length=50, verbose_name='Unidade de Medida')),
                ('qtd', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('valor_unitario', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor Unitário (R$)')),
                (
                    'data_cadastro',
                    djtools.db.models.DateFieldPlus(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data de Cadastro do Item de Mémoria de Cálculo'),
                ),
                (
                    'despesa',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_itemmemoria_despesa', to='financeiro.NaturezaDespesa', verbose_name='Despesa'
                    ),
                ),
            ],
            options={'verbose_name': 'Item de Memória de Cálculo', 'verbose_name_plural': 'Itens de Memória de Cálculo'},
        ),
        migrations.CreateModel(
            name='LaboratorioPesquisa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=1000, verbose_name='Nome')),
                ('descricao', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Descrição')),
                ('contato', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Contato')),
                ('servicos_realizados', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Serviços Realizados')),
                ('horario_funcionamento', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Horário de Funcionamento')),
                (
                    'area_pesquisa',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.AreaConhecimento', verbose_name='Área de Pesquisa'),
                ),
                ('coordenador', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Coordenador')),
                ('membros', djtools.db.models.ManyToManyFieldPlus(to='comum.Vinculo', verbose_name='Membros')),
                ('sala', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Sala', verbose_name='Sala')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
            ],
            options={'verbose_name': 'Laboratório de Pesquisa', 'verbose_name_plural': 'Laboratórios de Pesquisa'},
        ),
        migrations.CreateModel(
            name='LinhaEditorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True, verbose_name='Nome')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={'verbose_name': 'Linha Editorial', 'verbose_name_plural': 'Linhas Editoriais'},
        ),
        migrations.CreateModel(
            name='MembroObra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo_autor',
                    djtools.db.models.CharFieldPlus(choices=[('Autor', 'Autor'), ('Coautor', 'Coautor'), ('Organizador', 'Organizador')], max_length=30, verbose_name='Tipo'),
                ),
                ('nome', djtools.db.models.CharFieldPlus(max_length=1000, verbose_name='Nome')),
                ('endereco', djtools.db.models.CharFieldPlus(max_length=1000, verbose_name='Endereço')),
                ('complemento', djtools.db.models.CharFieldPlus(max_length=1000, verbose_name='Complemento')),
                ('bairro', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Bairro')),
                ('cep', djtools.db.models.CharFieldPlus(max_length=20, verbose_name='CEP')),
                ('rg', djtools.db.models.CharFieldPlus(max_length=15, verbose_name='RG')),
                ('rg_orgao_emissor', djtools.db.models.CharFieldPlus(max_length=15, verbose_name='Órgão Emissor')),
                ('cpf', djtools.db.models.CharFieldPlus(max_length=15, verbose_name='CPF')),
                ('sexo', djtools.db.models.CharFieldPlus(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=20, verbose_name='Sexo')),
                ('profissao', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Profissão')),
                ('email', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Email')),
                ('telefone', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Telefone')),
                ('cidade', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.Cidade', verbose_name='Cidade')),
                (
                    'estado_civil',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='estado_civil_membroobra', to='comum.EstadoCivil', verbose_name='Estado Civil'
                    ),
                ),
            ],
            options={'verbose_name': 'Membro da Obra', 'verbose_name_plural': 'Membros da Obra'},
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data de Cadastro da Meta')),
            ],
            options={'verbose_name': 'Meta', 'verbose_name_plural': 'Metas'},
        ),
        migrations.CreateModel(
            name='Obra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_autor', djtools.db.models.CharFieldPlus(choices=[('Autor', 'Autor'), ('Organizador', 'Organizador')], max_length=30, verbose_name='Tipo')),
                (
                    'termo_compromisso_autor_editora',
                    models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Termo de Compromisso do Autor com a Editora'),
                ),
                ('titulo', djtools.db.models.CharFieldPlus(max_length=1000, verbose_name='Título')),
                ('sinopse', djtools.db.models.CharFieldPlus(max_length=5000, verbose_name='Sinopse')),
                (
                    'nucleos_pesquisa',
                    djtools.db.models.CharFieldPlus(
                        blank=True, help_text='Separe os nomes dos grupos por vírgula.', max_length=1000, null=True, verbose_name='Núcleos de Pesquisa'
                    ),
                ),
                (
                    'tipo_submissao',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Anais', 'Anais'), ('Ebook', 'Ebook'), ('Impresso/Ebook', 'Impresso/Ebook')], max_length=20, verbose_name='Tipo de Submissão'
                    ),
                ),
                (
                    'recurso_impressao',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('Recurso próprio', 'Recurso próprio'), ('Edital', 'Edital'), ('Parceria', 'Parceria')],
                        help_text='Se Recurso de Impressão for Próprio ou Parceria, devem ser entregues 4 exemplares da obra para a editora até Data de Término de Impressão',
                        max_length=20,
                        null=True,
                        verbose_name='Recurso para Impressão',
                    ),
                ),
                (
                    'arquivo',
                    models.FileField(
                        help_text='O arquivo com a obra deve estar em formato Word. Outros formatos não serão aceitos. O arquivo Word poderá ser enviado de forma compactada (ZIP ou RAR).',
                        upload_to='private-media/pesquisa/arquivos_obra/',
                        verbose_name='Obra Completa',
                    ),
                ),
                (
                    'obra_sem_identificacao_autor',
                    models.FileField(
                        help_text='O arquivo não deve ter nenhum dado que identifique a autoria e/ou organização da obra. O arquivo com a obra deve estar em formato Word. Outros formatos não serão aceitos. O arquivo Word poderá ser enviado de forma compactada (ZIP ou RAR).',
                        upload_to='private-media/pesquisa/arquivos_obra/',
                        verbose_name='Obra Sem Identificação',
                    ),
                ),
                ('submetido_em', djtools.db.models.DateTimeFieldPlus(verbose_name='Submetido em')),
                (
                    'situacao',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('Submetida', 'Submetida'),
                            ('Autêntica', 'Autêntica'),
                            ('Classificada', 'Classificada'),
                            ('Validada', 'Validada'),
                            ('Aceita', 'Aceita'),
                            ('Assinada', 'Assinada'),
                            ('Revisada', 'Revisada'),
                            ('Diagramada', 'Diagramada'),
                            ('Registrada ISBN', 'Registrada ISBN'),
                            ('Catalogada', 'Catalogada'),
                            ('Corrigida', 'Corrigida'),
                            ('Liberada', 'Liberada'),
                            ('Concluída', 'Concluída'),
                            ('Cancelada', 'Cancelada'),
                            ('Reprovada', 'Reprovada'),
                        ],
                        default='Submetida',
                        max_length=40,
                        verbose_name='Situação',
                    ),
                ),
                (
                    'autentica',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Sim', 'Sim'), ('Com Ressalva', 'Com Ressalva'), ('Não', 'Não')], max_length=40, null=True, verbose_name='Autêntica'
                    ),
                ),
                ('autenticidade_verificada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Plágio registrado em')),
                ('autenticidade_obs', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Observações')),
                (
                    'obra_corrigida',
                    models.FileField(
                        blank=True,
                        help_text='O arquivo com a obra deve estar em formato Word. Outros formatos não serão aceitos. O arquivo Word poderá ser enviado de forma compactada (ZIP ou RAR).',
                        null=True,
                        upload_to='private-media/pesquisa/arquivos_obra/',
                        verbose_name='Obra Corrigida',
                    ),
                ),
                (
                    'situacao_conselho_editorial',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('Favorável', 'Favorável'), ('Favorável com Ressalvas', 'Favorável com Ressalvas'), ('Não-Favorável', 'Não-Favorável')],
                        max_length=40,
                        null=True,
                        verbose_name='Julgamento do Conselheiro Editorial',
                    ),
                ),
                ('obs_conselho_editorial', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Observação do Julgamento do Conselheiro Editorial')),
                ('julgamento_conselho_realizado_em', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Plágio registrado em')),
                (
                    'status_obra',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Habilitada', 'Habilitada'), ('Não-habilitada', 'Não-habilitada')], max_length=40, null=True, verbose_name='Situação da Obra'
                    ),
                ),
                ('aceita_editora_realizada_em', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Aceite pela editora realizada em')),
                (
                    'termo_autorizacao_publicacao',
                    models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Termos de Autorização de Publicação'),
                ),
                (
                    'termo_uso_imagem',
                    models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Termos de Uso de Imagem, Voz e Texto'),
                ),
                (
                    'termo_cessao_direitos_autorais',
                    models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Termo de cessão de Direitos Autorais'),
                ),
                (
                    'termo_nome_menor',
                    models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Termo de Autorização para uso de Nome de Menor'),
                ),
                (
                    'contrato_cessao_direitos',
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to='private-media/pesquisa/arquivos_obra/',
                        verbose_name='Contrato de Cessão e Transferência de Direitos Patrimoniais de Autor',
                    ),
                ),
                (
                    'termo_autorizacao_uso_imagem',
                    models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Termo de Autorização para uso de Imagem e Fotografia'),
                ),
                (
                    'termo_autorizacao_publicacao_assinado',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=40, null=True, verbose_name='Termo de Autorização de Publicação'
                    ),
                ),
                (
                    'termo_uso_imagem_assinado',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=40, null=True, verbose_name='Termo de Uso de Imagem, Voz e Texto'
                    ),
                ),
                (
                    'termo_cessao_direitos_autorais_assinado',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=40, null=True, verbose_name='Termo de cessão de Direitos Autorais'
                    ),
                ),
                (
                    'termo_nome_menor_assinado',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=40, null=True, verbose_name='Termo de Autorização para uso de Nome de Menor'
                    ),
                ),
                (
                    'contrato_cessao_direitos_assinado',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('Sim', 'Sim'), ('Não', 'Não')],
                        max_length=40,
                        null=True,
                        verbose_name='Contrato de Cessão e Transferência de Direitos Patrimoniais de Autor',
                    ),
                ),
                (
                    'termo_autorizacao_uso_imagem_assinado',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=40, null=True, verbose_name='Termo de Autorização para uso de Imagem e Fotografia'
                    ),
                ),
                ('termos_assinados_realizado_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Registro dos termos assinados em')),
                ('revisao_realizada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Revisão realizada em')),
                ('link_obra_revisada', djtools.db.models.CharFieldPlus(blank=True, max_length=500, null=True, verbose_name='Link da Obra Revisada')),
                ('obs_revisor', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Observações do Revisor')),
                ('arquivo_obra_revisada', models.FileField(blank=True, null=True, upload_to='', verbose_name='Obra Revisada')),
                ('revisada_pelo_autor', models.FileField(blank=True, null=True, upload_to='', verbose_name='Obra Revisada pelo Autor')),
                ('parecer_revisor', djtools.db.models.CharFieldPlus(blank=True, max_length=2000, null=True, verbose_name='Parecer do Revisor')),
                ('correcoes_enviadas_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Correções enviadas em')),
                ('versao_final_revisao', models.FileField(blank=True, null=True, upload_to='', verbose_name='Versão Final da Revisão')),
                ('versao_final_revisao_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Revisão Final em')),
                ('diagramacao_link', djtools.db.models.CharFieldPlus(blank=True, max_length=500, null=True, verbose_name='Link da Diagramação')),
                ('justificativa_capa', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Justificativa')),
                ('justificativa_miolo', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Justificativa')),
                ('justificativa_capa_impresso', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Justificativa')),
                ('justificativa_miolo_impresso', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Justificativa')),
                ('obs_diagramador', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Observações do Diagramador')),
                ('diagramacao_avaliada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Diagramação avaliada em')),
                ('diagramacao_concluida', models.BooleanField(default=False, verbose_name='Diagramação Concluída')),
                (
                    'diagramacao_capa_aprovada',
                    djtools.db.models.CharFieldPlus(blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=50, null=True, verbose_name='Aprovar Capa?'),
                ),
                (
                    'diagramacao_miolo_aprovada',
                    djtools.db.models.CharFieldPlus(blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=50, null=True, verbose_name='Aprovar Miolo'),
                ),
                (
                    'diagramacao_capa_aprovada_impresso',
                    djtools.db.models.CharFieldPlus(blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=50, null=True, verbose_name='Aprovar Capa?'),
                ),
                (
                    'diagramacao_miolo_aprovada_impresso',
                    djtools.db.models.CharFieldPlus(blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=50, null=True, verbose_name='Aprovar Miolo'),
                ),
                ('arquivo_diagramacao_capa', models.FileField(blank=True, null=True, upload_to='', verbose_name='Diagramação da Capa')),
                ('arquivo_diagramacao_miolo', models.FileField(blank=True, null=True, upload_to='', verbose_name='Diagramação do Miolo')),
                ('arquivo_diagramacao_capa_impresso', models.FileField(blank=True, null=True, upload_to='', verbose_name='Diagramação da Capa')),
                ('arquivo_diagramacao_miolo_impresso', models.FileField(blank=True, null=True, upload_to='', verbose_name='Diagramação do Miolo')),
                ('arquivo_diagramacao_versao_final', models.FileField(blank=True, null=True, upload_to='', verbose_name='Versão Final da Diagramação')),
                ('isbn', djtools.db.models.CharFieldPlus(blank=True, max_length=30, null=True, verbose_name='ISBN')),
                ('isbn_impresso', djtools.db.models.CharFieldPlus(blank=True, max_length=30, null=True, verbose_name='ISBN (Impresso)')),
                ('ficha_catalografica', models.FileField(blank=True, null=True, upload_to='private-media/pesquisa/arquivos_obra/', verbose_name='Ficha Catalográfica')),
                ('ficha_catalografica_impresso', models.FileField(blank=True, null=True, upload_to='', verbose_name='Ficha Catalográfica (Impresso)')),
                (
                    'situacao_publicacao',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Não Iniciada', 'Não Iniciada'), ('Em Andamento', 'Em Andamento'), ('Concluída', 'Concluída')],
                        default='Não Iniciada',
                        max_length=50,
                        verbose_name='Situação da Publicação',
                    ),
                ),
                ('num_copias', models.IntegerField(blank=True, null=True, verbose_name='Número de Cópias')),
                ('data_envio_impressao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Envio para Impressão')),
                ('link_repositorio_virtual', djtools.db.models.CharFieldPlus(blank=True, max_length=200, null=True, verbose_name='Link do Repositório Virtual')),
                (
                    'data_liberacao_repositorio_virtual',
                    djtools.db.models.DateFieldPlus(
                        blank=True,
                        help_text='Se não houver limite de data de liberação, informar data igual a hoje.',
                        null=True,
                        verbose_name='Data de Liberação para Repositório Virtual',
                    ),
                ),
                ('bibliotecas_campi', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Bibliotecas dos Campi')),
                ('acervo_fisico', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Acervo Físico da Editora')),
                ('biblioteca_nacional', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Biblioteca Nacional')),
                ('publicacao_autor', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Autor/Organizador')),
                ('publicacao_coautor', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Coautor')),
                (
                    'aprovacao_liberacao_publicacao',
                    djtools.db.models.CharFieldPlus(blank=True, choices=[('Sim', 'Sim'), ('Não', 'Não')], max_length=20, null=True, verbose_name='Aprovado'),
                ),
                ('obs_liberacao_publicacao', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Parecer sobre a Liberação')),
                ('cancelada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Cancelada em')),
                ('obra_concluida', models.FileField(blank=True, null=True, upload_to='', verbose_name='Obra Concluída')),
                ('obra_concluida_em', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Obra Concluída em')),
                ('checklist_capa_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_capa_titulo', models.BooleanField(default=False, verbose_name='Título do Livro/Coleção')),
                ('checklist_capa_subtitulo', models.BooleanField(default=False, verbose_name='Subtítulo (quando houver)')),
                ('checklist_capa_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_capa_marca_serie', models.BooleanField(default=False, verbose_name='Marca da Série (quando houver)')),
                ('checklist_capa_marca_colecao', models.BooleanField(default=False, verbose_name='Marca da Coleção (quando houver)')),
                ('checklist_orelha_texto_editora', models.BooleanField(default=False, verbose_name='Texto sobre a Editora')),
                ('checklist_orelha_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_lombada_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_lombada_titulo', models.BooleanField(default=False, verbose_name='Título do Livro/Coleção')),
                ('checklist_lombada_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_quarta_capa_sinopse', models.BooleanField(default=False, verbose_name='Sinopse')),
                ('checklist_quarta_capa_codigo_isbn', models.BooleanField(default=False, verbose_name='Código de Barras ISBN')),
                ('checklist_quarta_capa_marca_instituicao', models.BooleanField(default=False, verbose_name='Marca Institucional')),
                ('checklist_quarta_capa_abeu', models.BooleanField(default=False, verbose_name='Marca da ABEU')),
                ('checklist_quarta_capa_comemorativa', models.BooleanField(default=False, verbose_name='Marca Comemorativa')),
                ('checklist_orelha_verso_foto_autor', models.BooleanField(default=False, verbose_name='Foto do Autor (quando houver)')),
                ('checklist_orelha_verso_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_orelha_verso_texto_autor', models.BooleanField(default=False, verbose_name='Texto sobre o Autor')),
                ('checklist_folha_rosto_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_folha_rosto_titulo', models.BooleanField(default=False, verbose_name='Título do Livro/Coleção')),
                ('checklist_folha_rosto_subtitulo', models.BooleanField(default=False, verbose_name='Subtítulo (quando houver)')),
                ('checklist_folha_rosto_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_folha_rosto_cidade_ano', models.BooleanField(default=False, verbose_name='Cidade/Ano')),
                ('checklist_ficha_tecnica_institucional', models.BooleanField(default=False, verbose_name='Institucional')),
                ('checklist_ficha_tecnica_marca', models.BooleanField(default=False, verbose_name='Marca Institucional')),
                ('checklist_ficha_tecnica_conselho', models.BooleanField(default=False, verbose_name='Conselho Editorial')),
                ('checklist_ficha_tecnica_creditos', models.BooleanField(default=False, verbose_name='Créditos (rev./proj./imgs./ilus.)')),
                ('checklist_ficha_tecnica_formato', models.BooleanField(default=False, verbose_name='Formato (E-book/Impresso)')),
                ('checklist_ficha_tecnica_prefixo', models.BooleanField(default=False, verbose_name='Prefixo Editorial')),
                ('checklist_ficha_tecnica_linha', models.BooleanField(default=False, verbose_name='Linha Editorial')),
                ('checklist_ficha_tecnica_link', models.BooleanField(default=False, verbose_name='Link p/ Download')),
                ('checklist_ficha_tecnica_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_ficha_tecnica_endereco', models.BooleanField(default=False, verbose_name='Endereço e contato da Editora')),
                ('checklist_ficha_tecnica_edital', models.BooleanField(default=False, verbose_name='Texto referente ao Edital')),
                ('checklist_ficha_catalografica_nome', models.BooleanField(default=False, verbose_name='Nome da Instituição')),
                ('checklist_ficha_catalografica_titulo', models.BooleanField(default=False, verbose_name='Título do Livro')),
                ('checklist_ficha_catalografica_autores', models.BooleanField(default=False, verbose_name='Autores')),
                ('checklist_ficha_catalografica_paginas', models.BooleanField(default=False, verbose_name='N° de Páginas')),
                ('checklist_ficha_catalografica_ano', models.BooleanField(default=False, verbose_name='Ano de Publicação')),
                ('checklist_miolo_prefacio', models.BooleanField(default=False, verbose_name='Prefácio')),
                ('checklist_miolo_apresentacao', models.BooleanField(default=False, verbose_name='Apresentação')),
                ('checklist_miolo_sumario', models.BooleanField(default=False, verbose_name='Sumário')),
                ('checklist_miolo_sequencia', models.BooleanField(default=False, verbose_name='Sequência de Textos')),
                ('checklist_miolo_num_paginas', models.BooleanField(default=False, verbose_name='Numeração de Páginas')),
                ('checklist_miolo_titulos', models.BooleanField(default=False, verbose_name='Títulos Correntes e Seções')),
                ('checklist_miolo_imagens', models.BooleanField(default=False, verbose_name='Verificação de Imagens')),
                ('checklist_miolo_margens', models.BooleanField(default=False, verbose_name='Margens/alinhamentos')),
                ('checklist_miolo_sangrias', models.BooleanField(default=False, verbose_name='Sangrias')),
                ('checklist_miolo_alerta_reproducao', models.BooleanField(default=False, verbose_name='Alerta de Reprodução')),
                ('checklist_pagina_final_marca', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_colofao_tipografias', models.BooleanField(default=False, verbose_name='Tipografias')),
                ('checklist_colofao_papel_capa', models.BooleanField(default=False, verbose_name='Papel da Capa')),
                ('checklist_colofao_papel_miolo', models.BooleanField(default=False, verbose_name='Papel do Miolo')),
                ('checklist_colofao_grafica', models.BooleanField(default=False, verbose_name='Gráfica')),
                ('checklist_colofao_copyright', models.BooleanField(default=False, verbose_name='Copyrights')),
                ('checklist_revisao_ortografica', models.BooleanField(default=False, verbose_name='Ortográfica')),
                ('checklist_revisao_linguistica', models.BooleanField(default=False, verbose_name='Linguística')),
                ('checklist_revisao_normalizacao', models.BooleanField(default=False, verbose_name='Normalização')),
                ('checklist_divulgacao_midias', models.BooleanField(default=False, verbose_name='Facebook/Instagram')),
                ('checklist_divulgacao_convite_virtual', models.BooleanField(default=False, verbose_name='Convite Virtual')),
                ('checklist_divulgacao_convite_impresso', models.BooleanField(default=False, verbose_name='Convite Impresso')),
                ('checklist_divulgacao_repositorio', models.BooleanField(default=False, verbose_name='Repositório')),
                ('checklist_tipo_arquivo_ebook', models.BooleanField(default=False, verbose_name='Versão E-book')),
                ('checklist_tipo_arquivo_impresso', models.BooleanField(default=False, verbose_name='Versão Impressa')),
                ('checklist_diagramador_capa_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_diagramador_capa_titulo', models.BooleanField(default=False, verbose_name='Título do Livro/Coleção')),
                ('checklist_diagramador_capa_subtitulo', models.BooleanField(default=False, verbose_name='Subtítulo (quando houver)')),
                ('checklist_diagramador_capa_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_diagramador_capa_marca_serie', models.BooleanField(default=False, verbose_name='Marca da Série (quando houver)')),
                ('checklist_diagramador_capa_marca_colecao', models.BooleanField(default=False, verbose_name='Marca da Coleção (quando houver)')),
                ('checklist_diagramador_orelha_texto_editora', models.BooleanField(default=False, verbose_name='Texto sobre a Editora')),
                ('checklist_diagramador_orelha_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_diagramador_lombada_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_diagramador_lombada_titulo', models.BooleanField(default=False, verbose_name='Título do Livro/Coleção')),
                ('checklist_diagramador_lombada_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_diagramador_quarta_capa_sinopse', models.BooleanField(default=False, verbose_name='Sinopse')),
                ('checklist_diagramador_quarta_capa_codigo_isbn', models.BooleanField(default=False, verbose_name='Código de Barras ISBN')),
                ('checklist_diagramador_quarta_capa_marca_instituicao', models.BooleanField(default=False, verbose_name='Marca Institucional')),
                ('checklist_diagramador_quarta_capa_abeu', models.BooleanField(default=False, verbose_name='Marca da ABEU')),
                ('checklist_diagramador_quarta_capa_comemorativa', models.BooleanField(default=False, verbose_name='Marca Comemorativa')),
                ('checklist_diagramador_orelha_verso_foto_autor', models.BooleanField(default=False, verbose_name='Foto do Autor (quando houver)')),
                ('checklist_diagramador_orelha_verso_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_diagramador_orelha_verso_texto_autor', models.BooleanField(default=False, verbose_name='Texto sobre o Autor')),
                ('checklist_diagramador_folha_rosto_nome_autor', models.BooleanField(default=False, verbose_name='Nome do Autor')),
                ('checklist_diagramador_folha_rosto_titulo', models.BooleanField(default=False, verbose_name='Título do Livro/Coleção')),
                ('checklist_diagramador_folha_rosto_subtitulo', models.BooleanField(default=False, verbose_name='Subtítulo (quando houver)')),
                ('checklist_diagramador_folha_rosto_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_diagramador_folha_rosto_cidade_ano', models.BooleanField(default=False, verbose_name='Cidade/Ano')),
                ('checklist_diagramador_ficha_tecnica_institucional', models.BooleanField(default=False, verbose_name='Institucional')),
                ('checklist_diagramador_ficha_tecnica_marca', models.BooleanField(default=False, verbose_name='Marca Institucional')),
                ('checklist_diagramador_ficha_tecnica_conselho', models.BooleanField(default=False, verbose_name='Conselho Editorial')),
                ('checklist_diagramador_ficha_tecnica_creditos', models.BooleanField(default=False, verbose_name='Créditos (rev./proj./imgs./ilus.)')),
                ('checklist_diagramador_ficha_tecnica_formato', models.BooleanField(default=False, verbose_name='Formato (E-book/Impresso)')),
                ('checklist_diagramador_ficha_tecnica_prefixo', models.BooleanField(default=False, verbose_name='Prefixo Editorial')),
                ('checklist_diagramador_ficha_tecnica_linha', models.BooleanField(default=False, verbose_name='Linha Editorial')),
                ('checklist_diagramador_ficha_tecnica_link', models.BooleanField(default=False, verbose_name='Link p/ Download')),
                ('checklist_diagramador_ficha_tecnica_marca_editora', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_diagramador_ficha_tecnica_endereco', models.BooleanField(default=False, verbose_name='Endereço e contato da Editora')),
                ('checklist_diagramador_ficha_tecnica_edital', models.BooleanField(default=False, verbose_name='Texto referente ao Edital')),
                ('checklist_diagramador_ficha_catalografica_nome', models.BooleanField(default=False, verbose_name='Nome da Instituição')),
                ('checklist_diagramador_ficha_catalografica_titulo', models.BooleanField(default=False, verbose_name='Título do Livro')),
                ('checklist_diagramador_ficha_catalografica_autores', models.BooleanField(default=False, verbose_name='Autores')),
                ('checklist_diagramador_ficha_catalografica_paginas', models.BooleanField(default=False, verbose_name='N° de Páginas')),
                ('checklist_diagramador_ficha_catalografica_ano', models.BooleanField(default=False, verbose_name='Ano de Publicação')),
                ('checklist_diagramador_miolo_prefacio', models.BooleanField(default=False, verbose_name='Prefácio')),
                ('checklist_diagramador_miolo_apresentacao', models.BooleanField(default=False, verbose_name='Apresentação')),
                ('checklist_diagramador_miolo_sumario', models.BooleanField(default=False, verbose_name='Sumário')),
                ('checklist_diagramador_miolo_sequencia', models.BooleanField(default=False, verbose_name='Sequência de Textos')),
                ('checklist_diagramador_miolo_num_paginas', models.BooleanField(default=False, verbose_name='Numeração de Páginas')),
                ('checklist_diagramador_miolo_titulos', models.BooleanField(default=False, verbose_name='Títulos Correntes e Seções')),
                ('checklist_diagramador_miolo_imagens', models.BooleanField(default=False, verbose_name='Verificação de Imagens')),
                ('checklist_diagramador_miolo_margens', models.BooleanField(default=False, verbose_name='Margens/alinhamentos')),
                ('checklist_diagramador_miolo_sangrias', models.BooleanField(default=False, verbose_name='Sangrias')),
                ('checklist_diagramador_pagina_final_marca', models.BooleanField(default=False, verbose_name='Marca da Editora')),
                ('checklist_diagramador_colofao_tipografias', models.BooleanField(default=False, verbose_name='Tipografias')),
                ('checklist_diagramador_colofao_papel_capa', models.BooleanField(default=False, verbose_name='Papel da Capa')),
                ('checklist_diagramador_colofao_papel_miolo', models.BooleanField(default=False, verbose_name='Papel do Miolo')),
                ('checklist_diagramador_colofao_grafica', models.BooleanField(default=False, verbose_name='Gráfica')),
                ('checklist_diagramador_colofao_copyright', models.BooleanField(default=False, verbose_name='Copyrights')),
                ('checklist_diagramador_divulgacao_midias', models.BooleanField(default=False, verbose_name='Facebook/Instagram')),
                ('checklist_diagramador_divulgacao_convite_virtual', models.BooleanField(default=False, verbose_name='Convite Virtual')),
                ('checklist_diagramador_divulgacao_convite_impresso', models.BooleanField(default=False, verbose_name='Convite Impresso')),
                ('checklist_diagramador_divulgacao_repositorio', models.BooleanField(default=False, verbose_name='Repositório')),
                ('checklist_diagramador_tipo_arquivo_ebook', models.BooleanField(default=False, verbose_name='Versão E-book')),
                ('checklist_diagramador_tipo_arquivo_impresso', models.BooleanField(default=False, verbose_name='Versão Impressa')),
                (
                    'aceita_editora_realizada_por',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_aceite_editora_obra', to='rh.PessoaFisica'),
                ),
                (
                    'aceita_editora_realizada_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_aceite_editora_obra_vinculo', to='comum.Vinculo'
                    ),
                ),
                ('area', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.AreaConhecimento', verbose_name='Área')),
                (
                    'autenticidade_verificada_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_autenticidade_verificada', to='rh.PessoaFisica'
                    ),
                ),
                (
                    'autenticidade_verificada_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_autenticidade_verificada_vinculo', to='comum.Vinculo'
                    ),
                ),
                (
                    'cancelada_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_obra_cancelada', to='rh.PessoaFisica'
                    ),
                ),
                (
                    'cancelada_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_obra_cancelada_vinculo', to='comum.Vinculo'
                    ),
                ),
                (
                    'diagramacao_realizada_por',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_diagramador', to='rh.PessoaFisica'),
                ),
                (
                    'diagramacao_realizada_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_diagramador_vinculo', to='comum.Vinculo'
                    ),
                ),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.EditalSubmissaoObra', verbose_name='Edital')),
                (
                    'julgamento_conselho_realizado_por',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_julgou_obra', to='rh.PessoaFisica'),
                ),
                (
                    'julgamento_conselho_realizado_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_julgou_obra_vinculo', to='comum.Vinculo'
                    ),
                ),
                ('linha_editorial', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.LinhaEditorial', verbose_name='Linha Editorial')),
                (
                    'responsavel',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_responsavel_obra', to='rh.PessoaFisica'
                    ),
                ),
                (
                    'responsavel_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_responsavel_obra_vinculo', to='comum.Vinculo'
                    ),
                ),
                (
                    'revisao_realizada_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_revisor_obra', to='rh.PessoaFisica'
                    ),
                ),
                (
                    'revisao_realizada_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_revisor_obra_vinculo', to='comum.Vinculo'
                    ),
                ),
                ('submetido_por', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_submeteu_obra', to='rh.PessoaFisica')),
                (
                    'submetido_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_submeteu_obra_vinculo', to='comum.Vinculo'),
                ),
                (
                    'termos_assinados_realizado_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_termo_assinado', to='rh.PessoaFisica'
                    ),
                ),
                (
                    'termos_assinados_realizado_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_termo_assinado_vinculo', to='comum.Vinculo'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Obra',
                'verbose_name_plural': 'Obras',
                'permissions': (
                    ('pode_avaliar_obra', 'Pode avaliar obra'),
                    ('pode_validar_obra', 'Pode validar obra'),
                    ('pode_revisar_obra', 'Pode revisar obra'),
                    ('pode_diagramar_obra', 'Pode diagramar obra'),
                    ('pode_gerar_ficha_catalografica', 'Pode gerar ficha catalográfica'),
                ),
            },
        ),
        migrations.CreateModel(
            name='OrigemRecursoEdital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Origem de Recurso do Edital', 'verbose_name_plural': 'Origens de Recurso do Edital'},
        ),
        migrations.CreateModel(
            name='ParametroEdital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_parametro', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12, verbose_name='Valor do Critério')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital', verbose_name='Edital')),
                ('parametro', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='cnpq.Parametro', verbose_name='Critério')),
            ],
            options={'verbose_name': 'Critério do Edital', 'verbose_name_plural': 'Critérios do Edital'},
        ),
        migrations.CreateModel(
            name='ParametroProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=0, verbose_name='Quantidade')),
                ('parametro_edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.ParametroEdital')),
            ],
            options={'verbose_name': 'Critério do Projeto', 'verbose_name_plural': 'Critérios do Projeto', 'ordering': ['parametro_edital__parametro__id']},
        ),
        migrations.CreateModel(
            name='ParecerObra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicado_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Parecerista indicado em')),
                (
                    'situacao',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Aprovada', 'Aprovada'), ('Aprovada com ressalvas', 'Aprovada com ressalvas'), ('Reprovada', 'Reprovada')],
                        default='Em análise',
                        max_length=40,
                        verbose_name='Avaliação',
                    ),
                ),
                ('nota', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Nota')),
                ('comentario', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Observações Complementares')),
                ('arquivo_parecer_area', models.FileField(blank=True, null=True, upload_to='', verbose_name='Parecer')),
                ('parecer_realizado_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Parecer realizado em')),
                ('recusou_indicacao', models.BooleanField(default=False, verbose_name='Recusou Indicação')),
                ('obra', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='parecer_obra', to='pesquisa.Obra')),
                (
                    'parecer_realizado_por',
                    djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_parecer_obra', to='rh.PessoaFisica'),
                ),
                (
                    'parecer_realizado_por_vinculo',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_parecer_obra_vinculo', to='comum.Vinculo'),
                ),
            ],
            options={'verbose_name': 'Parecer da Obra', 'verbose_name_plural': 'Pareceres da Obra'},
        ),
        migrations.CreateModel(
            name='Participacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.BooleanField(default=False, verbose_name='Coordenador')),
                ('vinculo', models.CharField(choices=[('Bolsista', 'Bolsista'), ('Voluntário', 'Voluntário')], max_length=255)),
                ('carga_horaria', models.PositiveIntegerField(help_text='Carga horária semanal', verbose_name='Carga Horária')),
                ('ativo', models.BooleanField(default=True)),
                ('data_inativacao', models.DateField(null=True, verbose_name='Data de Inativação')),
                ('bolsa_concedida', models.BooleanField(default=False)),
                (
                    'bolsa_no_ae',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bolsas', to='ae.ParticipacaoBolsa', verbose_name='Bolsa no AE'
                    ),
                ),
                (
                    'pessoa',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_participacao', to='rh.PessoaFisica', verbose_name='Participante'
                    ),
                ),
            ],
            options={'verbose_name': 'Participação', 'verbose_name_plural': 'Participações'},
        ),
        migrations.CreateModel(
            name='PessoaExternaObra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('endereco', djtools.db.models.CharFieldPlus(max_length=1000, verbose_name='Endereço')),
                ('complemento', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Complemento')),
                ('bairro', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Bairro')),
                ('cep', djtools.db.models.CharFieldPlus(max_length=20, verbose_name='CEP')),
                ('rg', djtools.db.models.CharFieldPlus(max_length=15, verbose_name='RG')),
                ('rg_orgao_emissor', djtools.db.models.CharFieldPlus(max_length=15, verbose_name='Órgão Emissor')),
                ('cpf', djtools.db.models.CharFieldPlus(max_length=15, verbose_name='CPF')),
                ('sexo', djtools.db.models.CharFieldPlus(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=20, verbose_name='Sexo')),
                ('profissao', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Profissão')),
                ('email', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Email')),
                ('telefone', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Telefone')),
                ('cidade', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.Cidade', verbose_name='Cidade')),
                (
                    'estado_civil',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='estado_civil_pessoaexterna', to='comum.EstadoCivil', verbose_name='Estado Civil'
                    ),
                ),
                (
                    'instituicao_origem',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_instituicao_pessoaexterna',
                        to='rh.Instituicao',
                        verbose_name='Instituição',
                    ),
                ),
                ('pessoa_fisica', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_editora_pessoa', to='comum.PrestadorServico')),
            ],
            options={'verbose_name': 'Pessoa Externa', 'verbose_name_plural': 'Pessoas Externas'},
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título do projeto')),
                (
                    'justificativa',
                    ckeditor.fields.RichTextField(
                        help_text='A justificativa deve responder: Por que executar o projeto? Por que ele deve ser selecionado e implementado? Aqui deve ficar claro que o projeto é uma resposta a um determinado problema percebido e identificado pela comunidade ou pelo proponente.)',
                        verbose_name='Justificativa',
                    ),
                ),
                (
                    'resumo',
                    ckeditor.fields.RichTextField(
                        help_text='Sua função é dar uma idéia geral do que se trata, seus objetivos, duração e custo, dentre  outros. Escrever um bom resumo é extremamente importante, pois este tem que cativar o leitor a aprofundar-se no projeto e descobrir o quanto ele é importante, bem intencionado e efetivo. O resumo deverá ser uma das últimas seções a ser redigida, pois então teremos maior intimidade com o projeto. (espaço máximo de 1.500 caracteres)',
                        verbose_name='Resumo',
                    ),
                ),
                (
                    'objetivo_geral',
                    ckeditor.fields.RichTextField(
                        help_text='O objetivo geral deve expressar o que se quer alcançar na região a longo prazo, ultrapassando inclusive o tempo de duração do projeto. Geralmente o objetivo geral está vinculado à estratégia global da instituição. (espaço máximo de 500 caracteres)',
                        verbose_name='Objetivo Geral',
                    ),
                ),
                (
                    'metodologia',
                    ckeditor.fields.RichTextField(
                        help_text='A metodologia deve descrever as formas e técnicas que serão utilizadas para executar as atividades previstas, devendo explicar passo a passo a realização de cada atividade e não apenas repetir as atividades. Deve levar em conta que as atividades tem início, meio e fim, detalhando o plano de trabalho. Um projeto pode ser considerado bem elaborado quando tem metodologia bem definida e clara. É a metodologia que vai dar aos avaliadores/pareceristas, a certeza de que os objetivos/metas do projeto realmente tem condições de serem alcançados.',
                        verbose_name='Metodologia da execução do projeto',
                    ),
                ),
                ('acompanhamento_e_avaliacao', ckeditor.fields.RichTextField(verbose_name='Acompanhamento e avaliação do projeto durante a execução')),
                (
                    'resultados_esperados',
                    ckeditor.fields.RichTextField(
                        help_text='Descrever os resultados esperados. Deve existir uma sintonia muito forte entre os resultados esperados e as metas. \nA divulgação das experiências  bem sucedidas é de fundamental importância, tanto para a continuidade do projeto, quanto para o impacto positivo que o projeto pretende deixar na comunidade. As ações de disseminação dos resultados também  precisam ser pensadas dentro de cada projeto. As propostas de divulgação poderão ser planejadas em nível local ou regional, incluindo os seguintes itens:\nDefinição do que será  objeto de divulgação (metodologias, técnicas, experiências);\nDefinição dos produtos por meio dos quais será feita a divulgação (livros, artigos para revistas/jornais, vídeos, seminários, propriedades piloto);\nDefinição das atividades de divulgação (palestras, reuniões);\nDefinição da abrangência da divulgação (local ou regional);\nDefinição do público que se pretende atingir (outras populações com características semelhantes às dos  beneficiários do projeto, órgãos públicos, setores acadêmicos, organizações não governamentais, etc. ',
                        verbose_name='Disseminação dos Resultados',
                    ),
                ),
                ('inicio_execucao', djtools.db.models.DateFieldPlus(verbose_name='Início da Execução')),
                ('fim_execucao', djtools.db.models.DateFieldPlus(verbose_name='Término da Execução')),
                (
                    'palavras_chaves',
                    djtools.db.models.CharFieldPlus(
                        help_text='Separe as palavras-chaves utilizando ponto e vírgula (;).', max_length=255, null=True, verbose_name='Palavras-Chaves'
                    ),
                ),
                ('pre_aprovado', models.BooleanField(default=False, verbose_name='Pré-selecionado')),
                ('data_pre_avaliacao', models.DateField(blank=True, null=True, verbose_name='Data da Pré-seleção')),
                ('aprovado', models.BooleanField(default=False, verbose_name='Selecionado')),
                ('aprovado_na_distribuicao', models.BooleanField(default=False, verbose_name='Selecionado na distribuição de bolsas')),
                ('data_avaliacao', models.DateField(blank=True, null=True, verbose_name='Data da seleção')),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, default=Decimal('0'), max_digits=12, null=True, verbose_name='Pontuação')),
                ('data_conclusao_planejamento', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Conclusão do Projeto')),
                ('data_finalizacao_conclusao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Finalização do Projeto')),
                ('data_validacao_pontuacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Finalização do Projeto')),
                ('fundamentacao_teorica', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('referencias_bibliograficas', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('introducao', ckeditor.fields.RichTextField(blank=True, null=True)),
                (
                    'pontuacao_curriculo',
                    djtools.db.models.DecimalFieldPlus(
                        blank=True, decimal_places=2, default=Decimal('0'), max_digits=12, null=True, verbose_name='Pontuação do Currículo do Coordenador'
                    ),
                ),
                (
                    'pontuacao_curriculo_normalizado',
                    djtools.db.models.DecimalFieldPlus(
                        blank=True, decimal_places=2, default=Decimal('0'), max_digits=12, null=True, verbose_name='Pontuação do currículo do coordenador normalizado'
                    ),
                ),
                (
                    'pontuacao_total',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, default=Decimal('0'), max_digits=12, null=True, verbose_name='Pontuação Total do Projeto'),
                ),
                ('cota_bolsa_aluno', models.PositiveIntegerField(default=0, null=True, verbose_name='Cota Bolsa para Alunos')),
                ('cota_bolsa_pesquisador', models.PositiveIntegerField(default=0, null=True, verbose_name='Cota Bolsa para Pesquisador')),
                ('obs_reprovacao', models.TextField(blank=True, null=True)),
                ('nome_edital_origem', djtools.db.models.CharFieldPlus(blank=True, max_length=500, null=True, verbose_name='Nome do Edital de Origem')),
                (
                    'valor_global_projeto',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2, default=Decimal('0.0'), help_text='Caso não tenha fomento, informe o valor 0,00.', max_digits=12, verbose_name='Valor Global do Projeto'
                    ),
                ),
                ('anuencia', models.NullBooleanField(verbose_name='Chefia de Acordo')),
                ('anuencia_registrada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Anuência Registrada em')),
                ('inativado', models.BooleanField(default=False, verbose_name='Inativado')),
                ('motivo_inativacao', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Motivo da Inativação do Projeto')),
                ('inativado_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Inativado em')),
                (
                    'area_conhecimento',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.AreaConhecimento', verbose_name='Área do Conhecimento'
                    ),
                ),
                (
                    'autor_pre_avaliacao',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_pre_avaliador',
                        to='rh.PessoaFisica',
                        verbose_name='Responsável pela Pré-seleção',
                    ),
                ),
                (
                    'coordenador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_coordenador_set',
                        to='rh.PessoaFisica',
                        verbose_name='Coordenador do Projeto',
                    ),
                ),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital', verbose_name='Edital')),
                (
                    'grupo_pesquisa',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='cnpq.GrupoPesquisa', verbose_name='Grupo de Pesquisa'),
                ),
                (
                    'inativado_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_projeto_inativado_por',
                        to='rh.Servidor',
                        verbose_name='Inativado por',
                    ),
                ),
                (
                    'participantes',
                    models.ManyToManyField(related_name='pesquisa_projeto_participantes', through='pesquisa.Participacao', to='rh.PessoaFisica', verbose_name='Participantes'),
                ),
                (
                    'responsavel_anuencia',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_responsavel_anuencia',
                        to='rh.Servidor',
                        verbose_name='Responsável pela Anuência',
                    ),
                ),
                (
                    'supervisor',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to='rh.PessoaFisica', verbose_name='Supervisor'
                    ),
                ),
                (
                    'uo',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_projeto_campus', to='rh.UnidadeOrganizacional', verbose_name='Campus'
                    ),
                ),
                (
                    'vinculo_autor_pre_avaliacao',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_vinculo_pre_avaliador',
                        to='comum.Vinculo',
                        verbose_name='Responsável pela Pré-seleção',
                    ),
                ),
                (
                    'vinculo_coordenador',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_vinculo_coordenador_set',
                        to='comum.Vinculo',
                        verbose_name='Coordenador do Projeto',
                    ),
                ),
                (
                    'vinculo_supervisor',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_vinculo_monitor',
                        to='comum.Vinculo',
                        verbose_name='Responsável pelo Monitoramento',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
                'permissions': (
                    ('pode_gerenciar_edital', 'Pode gerenciar edital'),
                    ('pode_avaliar_projeto', 'Pode avaliar projeto'),
                    ('pode_pre_avaliar_projeto', 'Pode pre avaliar projeto'),
                    ('pode_visualizar_projeto', 'Pode visualizar projeto'),
                    ('pode_visualizar_projetos_em_monitoramento', 'Pode visualizar projetos em monitoramento'),
                    ('pode_gerenciar_equipe_projeto', 'Pode gerenciar equipe projeto'),
                    ('pode_avaliar_cancelamento_projeto', 'Pode avaliar cancelamento projeto'),
                    ('pode_realizar_monitoramento_projeto', 'Pode realizar monitoramento projeto'),
                    ('pode_ver_equipe_projeto', 'Pode ver equipe do projeto'),
                    ('pode_interagir_com_projeto', 'Pode interagir com projeto'),
                    ('tem_acesso_sistemico', 'Tem acesso sistêmico'),
                    ('pode_acessar_lista_projetos', 'Pode acessar listagem de projetos'),
                ),
            },
        ),
        migrations.CreateModel(
            name='ProjetoAnexo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Descrição')),
                (
                    'mes',
                    models.IntegerField(
                        choices=[
                            [0, '-------------'],
                            [1, 'Janeiro'],
                            [2, 'Fevereiro'],
                            [3, 'Março'],
                            [4, 'Abril'],
                            [5, 'Maio'],
                            [6, 'Junho'],
                            [7, 'Julho'],
                            [8, 'Agosto'],
                            [9, 'Setembro'],
                            [10, 'Outubro'],
                            [11, 'Novembro'],
                            [12, 'Dezembro'],
                        ],
                        default=0,
                        verbose_name='Mês',
                    ),
                ),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, null=True, verbose_name='Cadastrado em')),
                ('anexo_edital', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='pesquisa.EditalAnexo')),
                (
                    'ano',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_ano_anexo', to='comum.Ano', verbose_name='Ano'),
                ),
                ('arquivo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_anexo_arquivo', to='comum.Arquivo')),
                ('desembolso', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Desembolso')),
                (
                    'membro_equipe',
                    djtools.db.models.ForeignKeyPlus(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_anexo_equipe', to='rh.PessoaFisica', verbose_name='Participante'
                    ),
                ),
                ('projeto', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
                (
                    'vinculo_membro_equipe',
                    djtools.db.models.ForeignKeyPlus(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_projetoanexo_vinculo', to='comum.Vinculo', verbose_name='Participante'
                    ),
                ),
            ],
            options={'ordering': ['membro_equipe__nome']},
        ),
        migrations.CreateModel(
            name='ProjetoCancelado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justificativa_cancelamento', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Justificativa do Cancelamento')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data da Solicitação do Cancelamento')),
                ('obs_avaliacao', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observação')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Avaliação da Solicitação')),
                ('parecer_favoravel', models.BooleanField(default=False, verbose_name='Parecer Favorável')),
                ('parecer_validacao', models.CharField(blank=True, max_length=500, null=True, verbose_name='Parecer da PROPI')),
                ('data_validacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Validação')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_cancelamento_avaliador',
                        to='rh.Servidor',
                        verbose_name='Operador',
                    ),
                ),
                ('projeto', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
                (
                    'proximo_projeto',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proximo_projeto', to='pesquisa.Projeto'),
                ),
                (
                    'validador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_cancelamento_validador',
                        to='rh.Servidor',
                        verbose_name='Validador',
                    ),
                ),
            ],
            options={'verbose_name': 'Projeto Cancelado', 'verbose_name_plural': 'Projetos Cancelados', 'ordering': ['-data_solicitacao']},
        ),
        migrations.CreateModel(
            name='ProjetoHistoricoDeEnvio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parecer_devolucao', models.TextField(verbose_name='Parecer sobre a devolução do projeto')),
                ('data_operacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de realização da Operação')),
                (
                    'situacao',
                    models.CharField(
                        blank=True, choices=[('E', 'Enviado'), ('D', 'Devolvido'), ('R', 'Reaberto'), ('F', 'Finalizado')], max_length=1, null=True, verbose_name='Situação'
                    ),
                ),
                (
                    'operador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pesquisa_historicoenvio_operado',
                        to='rh.Servidor',
                        verbose_name='Operador',
                    ),
                ),
                ('projeto', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
            ],
            options={'verbose_name': 'Histórico do Envio de Projetos', 'verbose_name_plural': 'Históricos dos Envios de Projetos'},
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origem', models.CharField(max_length=255, verbose_name='Origem do recurso')),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor disponível (R$)')),
                (
                    'despesa',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_recurso_despesa', to='financeiro.NaturezaDespesa', verbose_name='Despesa'
                    ),
                ),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')),
            ],
            options={'verbose_name': 'Investimento', 'verbose_name_plural': 'Investimentos', 'ordering': ['despesa__nome']},
        ),
        migrations.CreateModel(
            name='RecursoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justificativa', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Justificativa do Recurso')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data da Solicitação do Recurso')),
                ('parecer', models.CharField(blank=True, max_length=500, null=True, verbose_name='Parecer')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Avaliação da Solicitação')),
                ('parecer_favoravel', models.BooleanField(default=False, verbose_name='Parecer Favorável')),
                ('parecer_validacao', models.CharField(blank=True, max_length=500, null=True, verbose_name='Parecer da PROPI')),
                ('aceito', models.BooleanField(default=False, verbose_name='Aceito')),
                ('data_validacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Validação')),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='projeto_avaliador_recurso_pesquisa',
                        to='rh.Servidor',
                        verbose_name='Avaliador',
                    ),
                ),
                ('projeto', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
                (
                    'validador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='projeto_validador_recurso_pesquisa',
                        to='rh.Servidor',
                        verbose_name='Validador',
                    ),
                ),
            ],
            options={'verbose_name': 'Recurso', 'verbose_name_plural': 'Recursos', 'ordering': ['-data_solicitacao']},
        ),
        migrations.CreateModel(
            name='RegistroConclusaoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resultados_alcancados', models.TextField(help_text='Informações sobre os resultados obtidos pelo projeto.', verbose_name='Resultados Alcançados')),
                (
                    'disseminacao_resultados',
                    models.TextField(help_text='Informações de como os resultados foram e/ou serão divulgados para a sociedade.', verbose_name='Disseminação dos Resultados'),
                ),
                (
                    'obs',
                    models.TextField(
                        blank=True, help_text='Informação adicional que você julgar relevante no que diz respeito à conclusão do projeto.', null=True, verbose_name='Observação'
                    ),
                ),
                ('dt_avaliacao', djtools.db.models.DateFieldPlus(null=True)),
                (
                    'obs_avaliador',
                    models.TextField(
                        blank=True,
                        help_text='Informação adicional que você julgar relevante no que diz respeito à validação do projeto.',
                        null=True,
                        verbose_name='Observação do Coordenador de Pesquisa',
                    ),
                ),
                ('aprovado', models.BooleanField(default=False)),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_conclusao_avaliador', to='rh.Servidor'),
                ),
                ('projeto', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='RegistroExecucaoEtapa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo_indicador_qualitativo',
                    models.CharField(choices=[('1', 'Atendido'), ('2', 'Atendido Parcialmente'), ('3', 'Não Atendido')], max_length=1, verbose_name='Indicadores Qualitativos'),
                ),
                (
                    'inicio_execucao',
                    djtools.db.models.DateFieldPlus(
                        help_text='Informe uma data diferente da planejada caso o início da execução tenha sido adiantado/atrasado', verbose_name='Início da Execução'
                    ),
                ),
                (
                    'fim_execucao',
                    djtools.db.models.DateFieldPlus(
                        help_text='Informe uma data diferente da planejada caso o término da execução tenha sido adiantado/atrasado', verbose_name='Fim da Execução'
                    ),
                ),
                (
                    'info_ind_qualitativo',
                    models.TextField(
                        help_text='Informações sobre os resultados obitidos acerca dos indicadores qualitativos definidos para a atividade: ?',
                        verbose_name='Indicadores Qualitativos',
                    ),
                ),
                (
                    'obs',
                    models.TextField(
                        blank=True,
                        help_text='Descreva e coloque as informações que julgar relevantes na execução da atividade',
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(500)],
                        verbose_name='Descrição da Atividade Realizada',
                    ),
                ),
                (
                    'justificativa_reprovacao',
                    models.CharField(
                        blank=True,
                        help_text='Informação adicional que você julgar relevante no que diz respeito à reprovação da atividade.',
                        max_length=250,
                        null=True,
                        verbose_name='Justificativa da Reprovação da Atividade',
                    ),
                ),
                ('dt_avaliacao', djtools.db.models.DateFieldPlus(null=True)),
                ('aprovado', models.BooleanField(default=False)),
                ('arquivo', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/pesquisa/atividades/comprovantes/')),
                ('obs_cancelamento_avaliacao', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Motivo do Cancelamento da Avaliação')),
                ('avaliacao_cancelada_em', djtools.db.models.DateTimeFieldPlus(null=True)),
                (
                    'avaliacao_cancelada_por',
                    djtools.db.models.ForeignKeyPlus(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_cancelamento_avaliacao_etapa', to='rh.Servidor'
                    ),
                ),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_execucao_avaliador', to='rh.Servidor'),
                ),
                ('etapa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Etapa')),
            ],
            options={'verbose_name': 'Registro de Execução de Atividade', 'verbose_name_plural': 'Registros de Execução de Atividades'},
        ),
        migrations.CreateModel(
            name='RegistroGasto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'mes',
                    models.PositiveIntegerField(
                        choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5'], [6, '6'], [7, '7'], [8, '8'], [9, '9'], [10, '10'], [11, '11'], [12, '12']], verbose_name='Mês'
                    ),
                ),
                (
                    'descricao',
                    models.TextField(
                        help_text='Altere essa informação caso o produto/serviço/bolsa adiquirido(a)/pago(a) não tenha sido o definido na memória de cálculo',
                        max_length=2014,
                        verbose_name='Descrição',
                    ),
                ),
                ('qtd', models.PositiveIntegerField(help_text='Informe a quantidade adquirida/paga no período (mês/ano) informado', verbose_name='Quantidade')),
                (
                    'valor_unitario',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        help_text='Altere essa informação caso o valor do produto/serviço/bolsa adiquirido(a)/pago(a) no período (mês/ano) informado não tenha sido igual ao definido na memória de cálculo',
                        max_digits=12,
                        verbose_name='Valor Unitário (R$)',
                    ),
                ),
                (
                    'observacao',
                    models.TextField(
                        blank=True,
                        help_text='Insira alguma informação adicional referente à aquisição/pagamento do produto/serviço/bolsa caso ache necessário.',
                        null=True,
                        verbose_name='Observação',
                    ),
                ),
                ('dt_avaliacao', djtools.db.models.DateFieldPlus(null=True)),
                ('aprovado', models.BooleanField(default=False)),
                (
                    'justificativa_reprovacao',
                    models.CharField(
                        blank=True,
                        help_text='Informação adicional que você julgar relevante no que diz respeito à reprovação do gasto.',
                        max_length=250,
                        null=True,
                        verbose_name='Justificativa da Reprovação do Gasto',
                    ),
                ),
                ('arquivo', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/pesquisa/registrogasto/comprovantes/')),
                ('cotacao_precos', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/pesquisa/registrogasto/comprovantes/')),
                ('obs_cancelamento_avaliacao', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Motivo do Cancelamento da Avaliação')),
                ('avaliacao_cancelada_em', djtools.db.models.DateTimeFieldPlus(null=True)),
                ('ano', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_gasto_ano', to='comum.Ano', verbose_name='Ano')),
                (
                    'avaliacao_cancelada_por',
                    djtools.db.models.ForeignKeyPlus(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_cancelamento_avaliacao_gasto', to='rh.Servidor'
                    ),
                ),
                ('avaliador', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_gasto_avaliador', to='rh.Servidor')),
                ('desembolso', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Desembolso')),
                ('item', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.ItemMemoriaCalculo')),
            ],
            options={'abstract': False},
        ),
        migrations.AddField(
            model_name='participacao',
            name='projeto',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto', verbose_name='Projeto'),
        ),
        migrations.AddField(
            model_name='participacao',
            name='vinculo_pessoa',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_vinculo_participacao', to='comum.Vinculo', verbose_name='Participante'
            ),
        ),
        migrations.AddField(
            model_name='parametroprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')
        ),
        migrations.AddField(
            model_name='meta', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto', verbose_name='Projeto')
        ),
        migrations.AddField(
            model_name='membroobra', name='obra', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Obra', verbose_name='Obra')
        ),
        migrations.AddField(
            model_name='itemmemoriacalculo', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')
        ),
        migrations.AddField(
            model_name='historicoequipe', name='participante', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Participacao')
        ),
        migrations.AddField(
            model_name='historicoequipe', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')
        ),
        migrations.AddField(model_name='fotoprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
        migrations.AddField(
            model_name='fotolaboratoriopesquisa',
            name='laboratorio',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.LaboratorioPesquisa', verbose_name='Laboratório'),
        ),
        migrations.AddField(
            model_name='etapa', name='integrantes', field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='pesquisa_integrantes_set', to='pesquisa.Participacao')
        ),
        migrations.AddField(
            model_name='etapa',
            name='meta',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='etapa_set', to='pesquisa.Meta', verbose_name='Meta'),
        ),
        migrations.AddField(
            model_name='etapa',
            name='responsavel',
            field=djtools.db.models.ForeignKeyPlus(
                on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_participacao_responsavel', to='pesquisa.Participacao', verbose_name='Responsável pela Atividade'
            ),
        ),
        migrations.AddField(
            model_name='equipamentolaboratoriopesquisa',
            name='laboratorio',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.LaboratorioPesquisa', verbose_name='Laboratório'),
        ),
        migrations.AddField(
            model_name='equipamentolaboratoriopesquisa',
            name='patrimonio',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='patrimonio.Inventario', verbose_name='Inventário'),
        ),
        migrations.AddField(
            model_name='editalsubmissaoobra', name='linha_editorial', field=djtools.db.models.ManyToManyFieldPlus(to='pesquisa.LinhaEditorial', verbose_name='Linha Editorial')
        ),
        migrations.AddField(
            model_name='desembolso',
            name='item',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='pesquisa.ItemMemoriaCalculo', verbose_name='Mémoria de Cálculo'),
        ),
        migrations.AddField(
            model_name='desembolso',
            name='projeto',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto', verbose_name='Projeto'),
        ),
        migrations.AddField(
            model_name='criterioavaliacao', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')
        ),
        migrations.AddField(
            model_name='comissaoeditalpesquisa', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')
        ),
        migrations.AddField(
            model_name='comissaoeditalpesquisa',
            name='membros',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='pesquisa_comissao_membros', to='rh.PessoaFisica', verbose_name='Membros'),
        ),
        migrations.AddField(
            model_name='comissaoeditalpesquisa',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_comissao_ano', to='rh.UnidadeOrganizacional', verbose_name='Campus'
            ),
        ),
        migrations.AddField(
            model_name='comissaoeditalpesquisa',
            name='vinculos_membros',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='pesquisa_vinculos_membros_comissao_edital', to='comum.Vinculo', verbose_name='Membros'),
        ),
        migrations.AddField(model_name='bolsadisponivel', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Edital')),
        migrations.AddField(
            model_name='bolsadisponivel',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(
                on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_oferta_campus', to='rh.UnidadeOrganizacional', verbose_name='Campus'
            ),
        ),
        migrations.AddField(
            model_name='avaliadorindicado', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')
        ),
        migrations.AddField(
            model_name='avaliadorindicado',
            name='vinculo',
            field=djtools.db.models.ForeignKeyPlus(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_vinculo_avaliadorindicado', to='comum.Vinculo', verbose_name='Avaliador'
            ),
        ),
        migrations.AddField(model_name='avaliacao', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='pesquisa.Projeto')),
        migrations.AddField(
            model_name='avaliacao',
            name='vinculo',
            field=djtools.db.models.ForeignKeyPlus(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pesquisa_vinculo_avaliador', to='comum.Vinculo', verbose_name='Avaliador'
            ),
        ),
        migrations.AlterUniqueTogether(name='avaliacao', unique_together=set([('projeto', 'vinculo')])),
    ]
