# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 15:13


import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models
import djtools.middleware.threadlocals


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL), ('comum', '0002_auto_20190814_1443'), ('edu', '0003_aluno_candidato_vaga'), ('rh', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='AcuidadeVisual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('com_correcao', models.BooleanField(default=False, verbose_name='Com correção')),
                ('olho_direito', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Olho Direito')),
                ('olho_esquerdo', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Olho Esquerdo')),
            ],
            options={'verbose_name': 'Acuidade Visual'},
        ),
        migrations.CreateModel(
            name='Anamnese',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('hda', models.TextField(verbose_name='HDA')),
                ('gravida', models.NullBooleanField(verbose_name='Grávida?')),
                ('ectoscopia_alterada', models.BooleanField(default=False, verbose_name='Ectoscopia alterada')),
                ('alteracao_ectoscopia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração na ectoscopia')),
                ('acv_alterado', models.BooleanField(default=False, verbose_name='Aparelho cardiovascular alterado')),
                ('alteracao_acv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração no aparelho cardiovascular')),
                ('ar_alterado', models.BooleanField(default=False, verbose_name='Aparelho respiratório alterado')),
                ('alteracao_ar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração no aparelho respiratório')),
                ('abdome_alterado', models.BooleanField(default=False, verbose_name='Abdome alterado')),
                ('alteracao_abdome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração no abdome')),
                ('mmi_alterados', models.BooleanField(default=False, verbose_name='Membros inferiores alterados')),
                ('alteracao_mmi', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração nos membros inferiores')),
                ('mms_alterados', models.BooleanField(default=False, verbose_name='Membros superiores alterados')),
                ('alteracao_mms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração nos membros superiores')),
                ('outras_alteracoes', models.BooleanField(default=False, verbose_name='Outros órgãos/sistemas alterados')),
                ('outras_alteracoes_descricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição das outras alterações')),
            ],
            options={'verbose_name': 'Anamnese', 'verbose_name_plural': 'Anamneses'},
        ),
        migrations.CreateModel(
            name='AnamnesePsicologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('historico_queixa', models.TextField(blank=True, null=True, verbose_name='Histórico da Queixa')),
                ('dimensao_familiar', models.TextField(blank=True, null=True, verbose_name='Dimensão Familiar')),
                ('dimensao_escolar', models.TextField(blank=True, null=True, verbose_name='Dimensão Escolar')),
                ('dimensao_emocional', models.TextField(blank=True, null=True, verbose_name='Dimensão Emocional')),
                ('dimensao_projetos_vida', models.TextField(blank=True, null=True, verbose_name='Dimensão dos Projetos de Vida')),
                ('dimensao_social', models.TextField(blank=True, null=True, verbose_name='Dimensão Social')),
            ],
            options={'verbose_name': 'Anamnese Psicológica', 'verbose_name_plural': 'Anamneses Psicológicas'},
        ),
        migrations.CreateModel(
            name='AnexoPsicologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=2000, verbose_name='Descrição')),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, verbose_name='Cadastrado Em')),
                ('arquivo', djtools.db.models.FileFieldPlus(upload_to='upload/saude/psicologia/anexos/', verbose_name='Arquivo')),
            ],
            options={'verbose_name': 'Anexo de Psicologia', 'verbose_name_plural': 'Anexos de Psicologia'},
        ),
        migrations.CreateModel(
            name='AnoReferenciaAcaoEducativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', djtools.db.models.CharFieldPlus(max_length=200, verbose_name='Ano')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Ano de Referência', 'verbose_name_plural': 'Anos de Referências'},
        ),
        migrations.CreateModel(
            name='AnotacaoInterdisciplinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data')),
                ('anotacao', models.CharField(max_length=5000, verbose_name='Anotação')),
                ('profissional', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Profissional')),
            ],
            options={'verbose_name': 'Anotação Interdisciplinar', 'verbose_name_plural': 'Anotações Interdisciplinares'},
        ),
        migrations.CreateModel(
            name='AntecedentesFamiliares',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('data_cadastro', models.DateTimeField(auto_now=True))],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Antropometria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('estatura', models.PositiveIntegerField(blank=True, help_text='Em cm', null=True, verbose_name='Estatura')),
                ('peso', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=3, help_text='Em kg', max_digits=12, null=True, verbose_name='Peso')),
                (
                    'cintura',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, help_text='Em cm', max_digits=12, null=True, verbose_name='Circunferência da Cintura'),
                ),
                (
                    'quadril',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, help_text='Em cm', max_digits=12, null=True, verbose_name='Circunferência do Quadril'),
                ),
                (
                    'circunferencia_braco',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, help_text='Em cm', max_digits=12, null=True, verbose_name='Circunferência do Braço'),
                ),
                (
                    'pc_triciptal',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Prega Cutânea Tricipital'),
                ),
                (
                    'pc_biciptal',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Prega Cutânea Bicipital'),
                ),
                (
                    'pc_subescapular',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Prega Cutânea Subescapular'),
                ),
                (
                    'pc_suprailiaca',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Prega Cutânea Suprailíaca'),
                ),
                (
                    'percentual_gordura',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em %', max_digits=12, null=True, verbose_name='Percentual de Gordura'),
                ),
                ('perda_peso', models.BooleanField(default=False, verbose_name='Perda de peso')),
                ('quanto_perdeu', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em kg', max_digits=12, null=True, verbose_name='Quanto perdeu')),
                ('tempo_perda', models.PositiveIntegerField(blank=True, help_text='Em dias', null=True, verbose_name='Há quanto tempo vem perdendo peso?')),
                ('ganho_peso', models.BooleanField(default=False, verbose_name='Ganho de peso')),
                ('quanto_ganhou', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, help_text='Em kg', max_digits=12, null=True, verbose_name='Quanto ganhou')),
                ('tempo_ganho', models.PositiveIntegerField(blank=True, help_text='Em dias', null=True, verbose_name='Há quanto tempo vem ganhando peso?')),
                (
                    'dobra_cutanea_abdominal',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Dobra Cutânea Abdominal'),
                ),
                (
                    'dobra_cutanea_supraespinhal',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Dobra Cutânea Supraespinhal'),
                ),
                (
                    'dobra_cutanea_coxa_media',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Dobra Cutânea Coxa Média'),
                ),
                (
                    'dobra_cutanea_panturrilha_medial',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, help_text='Em mm', max_digits=12, null=True, verbose_name='Dobra Cutânea Panturrilha Medial'),
                ),
            ],
            options={'verbose_name': 'Antropometria'},
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo',
                    models.IntegerField(
                        choices=[
                            (1, 'Avaliação Biomédica'),
                            (2, 'Atendimento Médico/Enfermagem'),
                            (3, 'Odontológico'),
                            (4, 'Atendimento Psicológico'),
                            (5, 'Atendimento Nutricional'),
                            (7, 'Atendimento de Fisioterapia'),
                            (6, 'Atendimento Multidisciplinar'),
                        ],
                        verbose_name='Tipo',
                    ),
                ),
                ('situacao', models.IntegerField(choices=[(1, 'Aberto'), (2, 'Fechado'), (3, 'Cancelado'), (4, 'Reaberto')], verbose_name='Situação')),
                ('data_aberto', models.DateTimeField(verbose_name='Data de Abertura')),
                ('data_fechado', models.DateTimeField(blank=True, null=True, verbose_name='Data de Fechamento')),
                ('data_cancelado', models.DateTimeField(blank=True, null=True, verbose_name='Data de Cancelamento')),
                ('data_reaberto', models.DateTimeField(blank=True, null=True, verbose_name='Data de Reabertura')),
                ('obs_fechado', models.CharField(blank=True, max_length=200, verbose_name='Observação de Fechamento')),
                ('obs_cancelado', models.CharField(blank=True, max_length=200, verbose_name='Observação de Cancelamento')),
                ('aluno', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.Aluno')),
                ('prestador_servico', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.PrestadorServico')),
            ],
            options={'verbose_name': 'Atendimento', 'verbose_name_plural': 'Atendimentos', 'permissions': (('pode_ver_relatorio_gestao', 'Pode ver relatórios de gestão do AE'),)},
        ),
        migrations.CreateModel(
            name='AtendimentoEspecialidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidade', models.IntegerField(verbose_name='Especialidade')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Profissional',
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='AtendimentoFisioterapia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('anamnese', models.TextField(blank=True, null=True, verbose_name='Anamnese')),
                ('conduta', models.TextField(blank=True, null=True, verbose_name='Conduta de Fisioterapia')),
                ('hipotese', models.TextField(blank=True, null=True, verbose_name='Hipótese Diagnóstica')),
                ('descricao_evolucao', models.TextField(blank=True, null=True, verbose_name='Descrição da Evolução')),
                ('data_retorno', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data do Retorno')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Atendimento de Fisioterapia', 'verbose_name_plural': 'Atendimentos de Fisioterapia'},
        ),
        migrations.CreateModel(
            name='AtendimentoMultidisciplinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
            ],
            options={'verbose_name': 'Atendimento Multidisciplinar', 'verbose_name_plural': 'Atendimentos Multidisciplinares'},
        ),
        migrations.CreateModel(
            name='AtendimentoNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('observacoes', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Observações')),
                ('diagnostico_nutricional_obs', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Observações')),
                ('apetite', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Apetite')),
                ('aversoes', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Aversões')),
                ('preferencias', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Preferências')),
                ('consumo_liquidos', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Consumo de Água/Líquidos')),
                (
                    'categoria_trabalho',
                    djtools.db.models.CharFieldPlus(
                        blank=True, choices=[('Leve', 'Leve'), ('Moderada', 'Moderada'), ('Pesada', 'Pesada')], max_length=30, null=True, verbose_name='Categoria de Trabalho'
                    ),
                ),
                ('conduta', ckeditor.fields.RichTextField(null=True, verbose_name='Conduta')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
            ],
            options={'verbose_name': 'Atendimento Nutricional', 'verbose_name_plural': 'Atendimentos Nutricionais'},
        ),
        migrations.CreateModel(
            name='AtendimentoPsicologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('descricao_encaminhamento_externo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição do Encaminhamento Externo')),
                ('descricao_queixa_outros', models.CharField(blank=True, max_length=255, null=True, verbose_name='Queixa Principal - Outros')),
                ('descricao_queixa_identificada_outros', models.CharField(blank=True, max_length=255, null=True, verbose_name='Queixa Identificada - Outros')),
                ('intervencao', models.TextField(blank=True, null=True, verbose_name='Intervenção / Encaminhamento')),
                ('data_atendimento', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data/Hora do Atendimento')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
            ],
            options={'verbose_name': 'Atendimento Psicológico', 'verbose_name_plural': 'Atendimentos Psicológicos'},
        ),
        migrations.CreateModel(
            name='AtividadeGrupo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_evento', models.CharField(blank=True, max_length=500, null=True, verbose_name='Nome do Evento/Atividade')),
                ('tema', models.CharField(max_length=500, null=True, verbose_name='Tema')),
                ('motivo', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Motivo')),
                ('detalhamento', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Detalhamento')),
                ('publico_alvo', models.CharField(blank=True, max_length=500, null=True, verbose_name='Público-Alvo')),
                ('num_participantes', models.IntegerField(null=True, verbose_name='Número de Participantes')),
                ('data_inicio', models.DateTimeField(verbose_name='Data/Hora de Início')),
                ('data_termino', models.DateTimeField(verbose_name='Data/Hora de Término')),
                (
                    'turno',
                    models.CharField(
                        blank=True,
                        choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Diurno', 'Diurno'), ('Noturno', 'Noturno')],
                        max_length=15,
                        null=True,
                        verbose_name='Turno',
                    ),
                ),
                ('solicitante', models.CharField(blank=True, max_length=500, null=True, verbose_name='Solicitante')),
                ('anexo', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/saude/atividades_grupo/', verbose_name='Anexo')),
                ('eh_sistemica', models.BooleanField(default=False, verbose_name='Atividade Sistêmica')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Cancelada')),
                ('recurso_necessario', djtools.db.models.CharFieldPlus(max_length=5000, null=True, verbose_name='Recurso Necessário')),
                (
                    'cadastrado_por',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado Por',
                    ),
                ),
            ],
            options={'verbose_name': 'Atividade em Grupo', 'verbose_name_plural': 'Atividades em Grupo'},
        ),
        migrations.CreateModel(
            name='AvaliacaoGastroIntestinal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Avaliação Gastrointestinal', 'verbose_name_plural': 'Avaliações Gastrointestinais', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='BloqueioAtendimentoSaude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Bloqueado Até')),
                (
                    'paciente',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='paciente_bloqueio_agendamento', to='rh.PessoaFisica', verbose_name='Paciente'
                    ),
                ),
                (
                    'profissional',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='profissional_bloqueio_agendamento', to='rh.PessoaFisica', verbose_name='Profissional'
                    ),
                ),
            ],
            options={'verbose_name': 'Paciente Bloqueado', 'verbose_name_plural': 'Pacientes Bloqueados'},
        ),
        migrations.CreateModel(
            name='CartaoVacinal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_prevista', models.DateField(blank=True, null=True, verbose_name='Aprazamento')),
                ('data_vacinacao', models.DateField(blank=True, null=True, verbose_name='Data da Vacinação')),
                ('sem_data', models.NullBooleanField(default=None, verbose_name='Desconhece data de vacinação')),
                ('externo', models.BooleanField(default=False, verbose_name='Aplicação Externa')),
                ('numero_dose', models.PositiveIntegerField(verbose_name='Número da Dose')),
                ('obs', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observação')),
                (
                    'profissional',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Profissional'),
                ),
            ],
            options={'verbose_name': 'Cartão Vacinal', 'verbose_name_plural': 'Cartões Vacinais'},
        ),
        migrations.CreateModel(
            name='CategoriaExameLaboratorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Categoria de Exame Laboratorial', 'verbose_name_plural': 'Categorias de Exames Laboratoriais'},
        ),
        migrations.CreateModel(
            name='Cid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=4, verbose_name='Código')),
                ('denominacao', models.CharField(max_length=255, verbose_name='Denominação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Doença', 'verbose_name_plural': 'Doenças'},
        ),
        migrations.CreateModel(
            name='CondutaMedica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('conduta', models.TextField(verbose_name='Conduta')),
                (
                    'encaminhado_enfermagem',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso esta conduta médica necessite de uma intervenção de enfermagem.',
                        verbose_name='Encaminhado para Enfermagem',
                    ),
                ),
                ('atendido', models.BooleanField(default=False, verbose_name='Atendido')),
                (
                    'encaminhado_fisioterapia',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso esta conduta médica necessite de uma intervenção de fisioterapia.',
                        verbose_name='Encaminhado para Fisioterapia',
                    ),
                ),
                ('atendido_fisioterapia', models.BooleanField(default=False, verbose_name='Atendido')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Conduta Médica', 'verbose_name_plural': 'Condutas Médicas'},
        ),
        migrations.CreateModel(
            name='ConsumoNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('refeicao', djtools.db.models.CharFieldPlus(blank=True, max_length=100, null=True, verbose_name='Refeição')),
                ('horario_consumo_alimentacao', djtools.db.models.TimeFieldPlus(blank=True, null=True, verbose_name='Horário de Consumo')),
                ('local_consumo_alimentacao', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Local de Consumo')),
                ('alimentos_consumidos', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Alimentos Consumidos / Medidas Caseiras')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Informação sobre o Consumo', 'verbose_name_plural': 'Informações sobre o Consumo'},
        ),
        migrations.CreateModel(
            name='DesenvolvimentoPessoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('problema_aprendizado', models.BooleanField(default=False, verbose_name='Já teve ou tem algum problema de aprendizado')),
                ('qual_problema_aprendizado', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual problema de aprendizado')),
                (
                    'origem_problema',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('Problema auto-referido', 'Problema auto-referido'), ('Problema com diagnóstico prévio', 'Problema com diagnóstico prévio')],
                        max_length=50,
                        null=True,
                        verbose_name='Origem do Problema',
                    ),
                ),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Desenvolvimento Pessoal'},
        ),
        migrations.CreateModel(
            name='DiagnosticoNutricional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Diagnóstico Nutricional', 'verbose_name_plural': 'Diagnósticos Nutricionais', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='DificuldadeOral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dificuldade', models.CharField(max_length=200, unique=True, verbose_name='Dificuldade Oral')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Dificuldade Oral', 'verbose_name_plural': 'Dificuldades Orais'},
        ),
        migrations.CreateModel(
            name='DocumentoProntuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[(0, 'Atestado'), (1, 'Declaração de Comparecimento'), (2, 'Receituário')], max_length=255, verbose_name='Tipo')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('texto', ckeditor.fields.RichTextField(verbose_name='Texto')),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, verbose_name='Cadastrado Em')),
                ('cadastrado_por', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica')),
            ],
            options={'verbose_name': 'Documento do Prontuário', 'verbose_name_plural': 'Documentos do Prontuário'},
        ),
        migrations.CreateModel(
            name='Doenca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Doença', 'verbose_name_plural': 'Doenças'},
        ),
        migrations.CreateModel(
            name='Droga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Droga', 'verbose_name_plural': 'Drogas'},
        ),
        migrations.CreateModel(
            name='ExameEstomatologico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('labios', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração nos lábios')),
                ('lingua', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração na língua')),
                ('gengiva', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração na gengiva')),
                ('assoalho', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração no assoalho')),
                ('mucosa_jugal', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração na mucosa jugal')),
                ('palato_duro', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração no palato duro')),
                ('palato_mole', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração no palato mole')),
                ('rebordo', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração no rebordo')),
                ('cadeia_ganglionar', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração na cadeia ganglionar')),
                ('tonsilas_palatinas', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração nas tonsilas palatinas')),
                ('atm', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração na ATM')),
                ('oclusao', models.CharField(blank=True, max_length=500, null=True, verbose_name='Alteração na Oclusão')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Exame Estomatológico', 'verbose_name_plural': 'Exames Estomatológicos'},
        ),
        migrations.CreateModel(
            name='ExameFisico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('ectoscopia_alterada', models.BooleanField(default=False, verbose_name='Ectoscopia alterada')),
                ('alteracao_ectoscopia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração na ectoscopia')),
                ('acv_alterado', models.BooleanField(default=False, verbose_name='Aparelho cardiovascular alterado')),
                ('alteracao_acv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração no aparelho cardiovascular')),
                ('ar_alterado', models.BooleanField(default=False, verbose_name='Aparelho respiratório alterado')),
                ('alteracao_ar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração no aparelho respiratório')),
                ('abdome_alterado', models.BooleanField(default=False, verbose_name='Abdome alterado')),
                ('alteracao_abdome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração no abdome')),
                ('mmi_alterados', models.BooleanField(default=False, verbose_name='Membros inferiores alterados')),
                ('alteracao_mmi', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração nos membros inferiores')),
                ('mms_alterados', models.BooleanField(default=False, verbose_name='Membros superiores alterados')),
                ('alteracao_mms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alteração nos membros superiores')),
                ('outras_alteracoes', models.BooleanField(default=False, verbose_name='Outros órgãos/sistemas alterados')),
                ('outras_alteracoes_descricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição das outras alterações')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Exame Pessoal'},
        ),
        migrations.CreateModel(
            name='ExameImagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=200, verbose_name='Nome')),
                ('data_realizado', models.DateField(blank=True, null=True, verbose_name='Data de Realização')),
                ('data_cadastro', models.DateField(blank=True, null=True, verbose_name='Data de Cadastro')),
                ('resultado', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Resultado')),
                ('sigiloso', models.BooleanField(default=False, verbose_name='Sigiloso')),
                (
                    'profissional',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Profissional'),
                ),
            ],
            options={'verbose_name': 'Exame de Imagem', 'verbose_name_plural': 'Exames de Imagem'},
        ),
        migrations.CreateModel(
            name='ExameLaboratorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_realizado', models.DateField(blank=True, null=True, verbose_name='Data de Realização')),
                ('data_cadastro', models.DateField(blank=True, null=True, verbose_name='Data de Cadastro')),
                ('observacao', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Observação')),
                ('sigiloso', models.BooleanField(default=False, verbose_name='Sigiloso')),
                (
                    'categoria',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.CategoriaExameLaboratorial', verbose_name='Categoria'
                    ),
                ),
                (
                    'profissional',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Profissional'),
                ),
            ],
            options={'verbose_name': 'Exame Laboratorial', 'verbose_name_plural': 'Exames Laboratoriais'},
        ),
        migrations.CreateModel(
            name='ExamePeriodontal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('sextante', models.CharField(max_length=100, verbose_name='Sextante')),
                (
                    'ocorrencia',
                    models.CharField(choices=[('4', 'Biofilme Bacteriano'), ('2', 'Cálculo'), ('3', 'Recessão'), ('1', 'Sangramento')], max_length=2, verbose_name='Ocorrência'),
                ),
                ('resolvido', models.BooleanField(default=False, verbose_name='Resolvido')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Exame Periodontal', 'verbose_name_plural': 'Exames Periodontais'},
        ),
        migrations.CreateModel(
            name='FrequenciaAlimentarNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('valor', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Valor Informado')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
            ],
            options={'verbose_name': 'Frequência Alimentar do Atendimento Nutricional', 'verbose_name_plural': 'Frequências Alimentares dos Atendimentos Nutricionais'},
        ),
        migrations.CreateModel(
            name='FrequenciaPraticaAlimentar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Descrição')),
                ('valor_recomendado', models.IntegerField(verbose_name='Valor Recomendado')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Alimento/Bebida para Frequência de Prática Alimentar',
                'verbose_name_plural': 'Alimentos/Bebidas para Frequência de Prática Alimentar',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='HabitosDeVida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('atividade_fisica', models.BooleanField(default=False, verbose_name='Pratica atividade física')),
                ('qual_atividade', models.CharField(blank=True, max_length=250, null=True, verbose_name='Qual atividade')),
                (
                    'frequencia_semanal',
                    models.PositiveIntegerField(
                        blank=True, choices=[(1, ''), (2, 'Menos de 3x/semana'), (3, '3 ou mais x/semana')], null=True, verbose_name='Qual a frequência semanal'
                    ),
                ),
                (
                    'duracao_atividade',
                    models.PositiveIntegerField(
                        blank=True, choices=[(1, ''), (2, 'Menos de 50 min/dia'), (3, '50 min ou mais/dia')], null=True, verbose_name='Duração da atividade física'
                    ),
                ),
                ('fuma', models.BooleanField(default=False, verbose_name='Fuma')),
                ('frequencia_fumo', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, max_digits=12, null=True, verbose_name='Número de cigarros por dia')),
                ('usa_drogas', models.BooleanField(default=False, verbose_name='Faz uso ou já usou drogas ilícitas')),
                ('outras_drogas', models.CharField(blank=True, max_length=250, null=True, verbose_name='Outras drogas')),
                ('bebe', models.BooleanField(default=False, verbose_name='Ingere bebidas alcoólicas')),
                (
                    'frequencia_bebida',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(1, ''), (2, '1x/dia'), (3, '1x/semana'), (4, '1x/mês'), (5, '1x/ano')],
                        null=True,
                        verbose_name='Frequência mínima de ingestão de bebidas alcoólicas',
                    ),
                ),
                ('dificuldade_dormir', models.BooleanField(default=False, verbose_name='Tem dificuldade para dormir')),
                (
                    'horas_sono',
                    models.PositiveIntegerField(
                        blank=True, choices=[(1, ''), (2, 'Menos de 8 horas/dia'), (3, '8 ou mais horas/dia')], null=True, verbose_name='Horas de sono diárias'
                    ),
                ),
                (
                    'refeicoes_por_dia',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, ''),
                            (2, '1 refeição'),
                            (3, '2 refeições'),
                            (4, '3 refeições'),
                            (5, '4 refeições'),
                            (6, '5 refeições'),
                            (7, '6 refeições'),
                            (8, 'Mais de 6 refeições'),
                        ],
                        null=True,
                        verbose_name='Quantas refeições faz por dia',
                    ),
                ),
                ('vida_sexual_ativa', models.BooleanField(default=False, verbose_name='Tem vida sexual ativa')),
                ('metodo_contraceptivo', models.BooleanField(default=False, verbose_name='Faz uso de algum método contraceptivo')),
                ('uso_internet', models.BooleanField(default=False, verbose_name='Faz uso da internet?')),
                (
                    'tempo_uso_internet',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(1, 'Menos de 2 horas/dia'), (2, '2 a 3 horas/dia'), (3, '3 a 4 horas/dia'), (4, '4 ou mais horas/dia')],
                        null=True,
                        verbose_name='Qual o tempo de uso',
                    ),
                ),
                ('objetivo_uso_internet', models.CharField(blank=True, max_length=250, null=True, verbose_name='Objetivo do uso')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Hábitos de Vida'},
        ),
        migrations.CreateModel(
            name='HipoteseDiagnostica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('sigilo', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Sigilo')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                ('cid', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Cid', verbose_name='CID')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Hipótese Diagnóstica', 'verbose_name_plural': 'Hipóteses Diagnósticas'},
        ),
        migrations.CreateModel(
            name='HorarioAtendimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data do Atendimento')),
                ('hora_inicio', djtools.db.models.TimeFieldPlus(verbose_name='Hora de Início')),
                ('hora_termino', djtools.db.models.TimeFieldPlus(verbose_name='Hora de Término')),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(verbose_name='Cadastrado Em')),
                (
                    'especialidade',
                    models.CharField(
                        choices=[
                            ('Todos', '----------------'),
                            ('Avaliação Biomédica', 'Avaliação Biomédica'),
                            ('Assistente Social', 'Assistente Social'),
                            ('Enfermeiro', 'Enfermeiro'),
                            ('Fisioterapeuta', 'Fisioterapeuta'),
                            ('Médico', 'Médico'),
                            ('Nutricionista', 'Nutricionista'),
                            ('Odontólogo', 'Odontólogo'),
                            ('Psicólogo', 'Psicólogo'),
                            ('Técnico em Saúde Bucal', 'Técnico em Saúde Bucal'),
                        ],
                        max_length=100,
                        verbose_name='Especialidade',
                    ),
                ),
                ('disponivel', models.BooleanField(default=True, verbose_name='Disponível')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('motivo_cancelamento', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Justificativa')),
                ('cadastrado_por', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional')),
                ('paciente', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paciente_agendamento', to='rh.PessoaFisica')),
            ],
            options={
                'verbose_name': 'Horário de Atendimento',
                'verbose_name_plural': 'Horários de Atendimentos',
                'ordering': ['-data', 'hora_inicio', 'hora_termino'],
                'permissions': (('pode_ver_agenda_atendimento', 'Pode ver agenda de atendimentos'),),
            },
        ),
        migrations.CreateModel(
            name='InformacaoAdicional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('informacao', models.CharField(max_length=500, verbose_name='Informação Adicional')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Informação Adicional', 'verbose_name_plural': 'Informações Adicionais'},
        ),
        migrations.CreateModel(
            name='IntervencaoEnfermagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'conduta_medica',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.CondutaMedica', verbose_name='Conduta Médica'),
                ),
            ],
            options={'verbose_name': 'Intervenção de Enfermagem', 'verbose_name_plural': 'Intervenções de Enfermagem'},
        ),
        migrations.CreateModel(
            name='IntervencaoFisioterapia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'conduta_medica',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.CondutaMedica', verbose_name='Conduta Médica'),
                ),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Intervenção de Fisioterapia', 'verbose_name_plural': 'Intervenções de Fisioterapia'},
        ),
        migrations.CreateModel(
            name='MetaAcaoEducativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'indicador',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Número de Ações', 'Número de Ações'), ('Percentual', 'Percentual')], max_length=50, verbose_name='Tipo de Indicador'
                    ),
                ),
                ('valor', djtools.db.models.CharFieldPlus(max_length=20, verbose_name='Valor')),
                ('descricao', djtools.db.models.CharFieldPlus(blank=True, max_length=10000, null=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                (
                    'ano_referencia',
                    djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.AnoReferenciaAcaoEducativa', verbose_name='Ano de Referência'),
                ),
            ],
            options={'verbose_name': 'Meta da Ação Educativa', 'verbose_name_plural': 'Metas da Ação Educativa', 'ordering': ['-ano_referencia__ano']},
        ),
        migrations.CreateModel(
            name='MetodoContraceptivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=250, unique=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Método Contraceptivo', 'verbose_name_plural': 'Métodos Contraceptivos'},
        ),
        migrations.CreateModel(
            name='Motivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('motivo_atendimento', models.TextField(blank=True, null=True, verbose_name='Motivo do Atendimento')),
                ('pressao_sistolica', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pressão Sistólica')),
                ('pressao_diastolica', models.PositiveIntegerField(blank=True, help_text='Em mmHg', null=True, verbose_name='Pressão Diastólica')),
                ('temperatura', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, help_text='Em °C', max_digits=12, null=True, verbose_name='Temperatura')),
                ('respiracao', models.PositiveIntegerField(blank=True, help_text='Em rpm', null=True, verbose_name='Respiração')),
                ('pulsacao', models.PositiveIntegerField(blank=True, help_text='Em bpm', null=True, verbose_name='Pulsação')),
                ('escala_dor', models.PositiveIntegerField(blank=True, null=True, verbose_name='Escala de Dor')),
                (
                    'temperatura_categoria',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('1', 'Hipotermia'), ('2', 'Normal/Afebril'), ('3', 'Hipertemia'), ('4', 'Pirexia'), ('5', 'Hiperpirexia')],
                        max_length=2,
                        null=True,
                        verbose_name='Temperatura',
                    ),
                ),
                (
                    'respiracao_categoria',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('1', 'Eupnéica'), ('2', 'Dispnéica'), ('3', 'Ortopnéica'), ('4', 'Taquipnéica'), ('5', 'Bradipnéica'), ('6', 'Apnéia')],
                        max_length=2,
                        null=True,
                        verbose_name='Respiração',
                    ),
                ),
                ('estatura', models.PositiveIntegerField(blank=True, help_text='Em cm', null=True, verbose_name='Estatura')),
                ('peso', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=3, help_text='Em kg', max_digits=12, null=True, verbose_name='Peso')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Motivo do Atendimento', 'verbose_name_plural': 'Motivos do Atendimentos'},
        ),
        migrations.CreateModel(
            name='MotivoAtendimentoNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Motivo do Atendimento', 'verbose_name_plural': 'Motivos do Atendimento', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='MotivoChegadaPsicologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Motivo da Chegada', 'verbose_name_plural': 'Motivos da Chegada', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='ObjetivoAcaoEducativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=10000, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Objetivo da Ação Educativa', 'verbose_name_plural': 'Objetivos da Ação Educativa'},
        ),
        migrations.CreateModel(
            name='Odontograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('dentes_alterados', models.TextField(verbose_name='Marcações do Odontograma')),
                ('queixa_principal', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Queixa Principal')),
                (
                    'encaminhado_enfermagem',
                    models.BooleanField(
                        default=False, help_text='Marque esta opção caso este atendimento necessite de uma intervenção de enfermagem.', verbose_name='Encaminhado para Enfermagem'
                    ),
                ),
                ('atendido', models.BooleanField(default=False, verbose_name='Atendido')),
                ('atendido_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Atendido Em')),
                ('salvo', models.BooleanField(default=False, verbose_name='Salvo')),
                ('atendido_por', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rh.PessoaFisica')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Odontograma', 'verbose_name_plural': 'Odontogramas'},
        ),
        migrations.CreateModel(
            name='OpcaoRespostaMarcadorNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.CharFieldPlus(max_length=200, verbose_name='Opção de Resposta')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Opção de Resposta de Marcador Alimentar', 'verbose_name_plural': 'Opções de Resposta de Marcador Alimentar', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='OrientacaoNutricional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', ckeditor.fields.RichTextField(verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Orientação Nutricional', 'verbose_name_plural': 'Orientações Nutricionais', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='PercepcaoSaudeBucal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('qtd_vezes_fio_dental_ultima_semana', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantas vezes usou fio dental na última semana?')),
                (
                    'qtd_dias_consumiu_doce_ultima_semana',
                    models.PositiveIntegerField(blank=True, null=True, verbose_name='Na última semana quantos dias consumiu doces, balas, bolos ou refrigerantes?'),
                ),
                ('usa_protese', models.BooleanField(default=False, verbose_name='Usa prótese?')),
                ('usa_aparelho_ortodontico', models.BooleanField(default=False, verbose_name='Usa aparelho ortodôntico?')),
                ('foi_dentista_anteriormente', models.BooleanField(default=False, verbose_name='Já foi a um dentista anteriormente')),
                (
                    'tempo_ultima_vez_dentista',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(1, 'Menos de 1 mês'), (2, 'Entre 1 e 6 meses'), (3, 'Entre 6 e 12 meses'), (4, 'Entre 1 a 2 anos'), (5, 'Mais de 2 anos')],
                        null=True,
                        verbose_name='Quanto tempo faz que foi a última vez ao dentista',
                    ),
                ),
                (
                    'dificuldades',
                    models.BooleanField(
                        default=False,
                        verbose_name='Nos últimos 6 meses teve alguma dificuldade relacionada à boca, dente, prótese ou aparelho ortodôntico que lhe causou alguma dificuldade',
                    ),
                ),
                (
                    'grau_dificuldade_sorrir',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em sorrir'),
                ),
                (
                    'grau_dificuldade_falar',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em falar'),
                ),
                (
                    'grau_dificuldade_comer',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em comer'),
                ),
                (
                    'grau_dificuldade_relacionar',
                    models.PositiveIntegerField(
                        blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em relacionar-se socialmente'
                    ),
                ),
                (
                    'grau_dificuldade_manter_humor',
                    models.PositiveIntegerField(
                        blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em manter o humor habitual'
                    ),
                ),
                (
                    'grau_dificuldade_estudar',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em estudar'),
                ),
                (
                    'grau_dificuldade_trabalhar',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em trabalhar'),
                ),
                (
                    'grau_dificuldade_higienizar',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em higienizar a boca'),
                ),
                (
                    'grau_dificuldade_dormir',
                    models.PositiveIntegerField(blank=True, choices=[(1, 'Alto'), (2, 'Médio'), (3, 'Baixo')], null=True, verbose_name='Grau de dificuldade em dormir'),
                ),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'motivo_dificuldade_comer',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_comer',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_dormir',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_dormir',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_estudar',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_estudar',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_falar',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_falar',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_higienizar',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_higienizar',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_manter_humor',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_manter_humor',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_relacionar',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_relacionar',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_sorrir',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_sorrir',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'motivo_dificuldade_trabalhar',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='motivo_dificuldade_trabalhar',
                        to='saude.DificuldadeOral',
                        verbose_name='Qual motivo você atribui como responsável?',
                    ),
                ),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Percepção de Saúde Bucal'},
        ),
        migrations.CreateModel(
            name='PerguntaMarcadorNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pergunta', djtools.db.models.CharFieldPlus(max_length=2000, verbose_name='Pergunta')),
                (
                    'tipo_resposta',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Única Escolha', 'Única Escolha'), ('Múltipla Escolha', 'Múltipla Escolha')], max_length=100, verbose_name='Tipo de Resposta'
                    ),
                ),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Pergunta de Marcador Alimentar', 'verbose_name_plural': 'Perguntas de Marcador Alimentar', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='PlanoAlimentar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('cardapio', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Cardápio')),
                ('sugestoes_leitura', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Sugestões de Leituras e Links')),
                ('plano_alimentar_liberado', models.BooleanField(default=False, verbose_name='Plano Alimentar Liberado')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                ('orientacao_nutricional', models.ManyToManyField(related_name='diagnostico_nutricional', to='saude.OrientacaoNutricional', verbose_name='Orientação Nutricional')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Plano Alimentar', 'verbose_name_plural': 'Planos Alimentares'},
        ),
        migrations.CreateModel(
            name='PlanoTratamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('dente', models.CharField(blank=True, max_length=10, null=True, verbose_name='Dente')),
                ('face', models.CharField(blank=True, max_length=100, null=True, verbose_name='Face')),
                ('sextante', models.CharField(blank=True, max_length=20, null=True, verbose_name='Sextante')),
                ('realizado', models.BooleanField(default=False, verbose_name='Realizado')),
                ('ordem', models.IntegerField(default=1, null=True, verbose_name='Ordem')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
            ],
            options={'verbose_name': 'Plano de Tratamento', 'verbose_name_plural': 'Planos de Tratamento'},
        ),
        migrations.CreateModel(
            name='ProcedimentoEnfermagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacao', models.CharField(max_length=255, verbose_name='Denominação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Procedimento de Enfermagem', 'verbose_name_plural': 'Procedimentos de Enfermagem'},
        ),
        migrations.CreateModel(
            name='ProcedimentoIndicado',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'))],
            options={'verbose_name': 'Procedimento Indicado', 'verbose_name_plural': 'Procedimentos Indicados'},
        ),
        migrations.CreateModel(
            name='ProcedimentoMultidisciplinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacao', models.CharField(max_length=255, verbose_name='Denominação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Procedimento Multidisciplinar', 'verbose_name_plural': 'Procedimentos Multidisciplinares'},
        ),
        migrations.CreateModel(
            name='ProcedimentoOdontologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denominacao', models.CharField(max_length=255, verbose_name='Denominação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('pode_odontologo', models.BooleanField(default=True, verbose_name='Pode ser realizado por Odontólogo')),
                ('pode_tecnico', models.BooleanField(default=False, verbose_name='Pode ser realizado por Técnico de Saúde Bucal')),
            ],
            options={'verbose_name': 'Procedimento de Odontologia', 'verbose_name_plural': 'Procedimentos de Odontologia'},
        ),
        migrations.CreateModel(
            name='ProcedimentoOdontologico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                (
                    'tipo_consulta',
                    models.CharField(
                        choices=[
                            ('Avaliação Clínica Inicial', 'Avaliação Clínica Inicial'),
                            ('Conclusão de tratamento', 'Conclusão de tratamento'),
                            ('Consulta', 'Consulta'),
                            ('Continuação de Tratamento', 'Continuação de Tratamento'),
                            ('Reavaliação', 'Reavaliação'),
                            ('Urgência', 'Urgência'),
                        ],
                        default='Avaliação Clínica Inicial',
                        max_length=50,
                        verbose_name='Tipo de Consulta',
                    ),
                ),
                ('faces_marcadas', models.TextField(verbose_name='Faces')),
                (
                    'regiao_bucal',
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, '---------------------'),
                            ('Arcada Dentária', 'Arcada Dentária'),
                            ('Assoalho', 'Assoalho'),
                            ('ATM', 'ATM'),
                            ('Lábio Inferior Externo', 'Lábio Inferior Externo'),
                            ('Lábio Inferior Interno', 'Lábio Inferior Interno'),
                            ('Lábio Superior Externo', 'Lábio Superior Externo'),
                            ('Lábio Superior Interno', 'Lábio Superior Interno'),
                            ('Língua', 'Língua'),
                            ('Mucosa Jugal Direita', 'Mucosa Jugal Direita'),
                            ('Mucosa Jugal Esquerda', 'Mucosa Jugal Esquerda'),
                            ('Palato', 'Palato'),
                            ('Trígono Retromolar', 'Trígono Retromolar'),
                            ('S1', 'S1'),
                            ('S2', 'S2'),
                            ('S3', 'S3'),
                            ('S4', 'S4'),
                            ('S5', 'S5'),
                            ('S6', 'S6'),
                            ('S1 - S3', 'S1 - S3'),
                            ('S4 - S6', 'S4 - S6'),
                            ('S1 - S6', 'S1 - S6'),
                        ],
                        max_length=100,
                        null=True,
                        verbose_name='Região Bucal',
                    ),
                ),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                ('procedimento', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.ProcedimentoOdontologia')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Procedimento Odontológico', 'verbose_name_plural': 'Procedimentos Odontológicos'},
        ),
        migrations.CreateModel(
            name='ProcessoSaudeDoenca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('fez_cirurgia', models.BooleanField(default=False, verbose_name='Já fez alguma cirurgia')),
                ('que_cirurgia', models.TextField(blank=True, null=True, verbose_name='Que cirurgia')),
                ('tempo_cirurgia', models.CharField(blank=True, max_length=100, null=True, verbose_name='Quanto tempo da cirurgia')),
                ('hemorragia', models.BooleanField(default=False, verbose_name='Histórico de hemorragia')),
                ('tempo_hemorragia', models.CharField(blank=True, max_length=100, null=True, verbose_name='Há quanto tempo apresentou hemorragia')),
                ('alergia_alimentos', models.BooleanField(default=False, verbose_name='Alergia a alimentos')),
                ('que_alimentos', models.TextField(blank=True, null=True, verbose_name='Quais alimentos')),
                ('doencas_previas', models.BooleanField(default=False, verbose_name='Doenças Prévias')),
                ('que_doencas_previas', models.TextField(blank=True, null=True, verbose_name='Quais Doenças Prévias')),
                ('alergia_medicamentos', models.BooleanField(default=False, verbose_name='Alergia a medicamentos')),
                ('que_medicamentos', models.TextField(blank=True, null=True, verbose_name='Quais medicamentos')),
                ('usa_medicamentos', models.BooleanField(default=False, verbose_name='Faz uso de medicamentos rotineiramente')),
                ('usa_que_medicamentos', models.TextField(blank=True, null=True, verbose_name='Usa quais medicamentos')),
                ('tem_plano_saude', models.BooleanField(default=False, verbose_name='Tem Plano de Saúde')),
                ('tem_plano_odontologico', models.BooleanField(default=False, verbose_name='Tem Plano Odontológico')),
                ('transtorno_psiquiatrico', models.BooleanField(default=False, verbose_name='Já teve transtorno psiquiátrico?')),
                ('qual_transtorno_psiquiatrico', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual transtorno psiquiátrico?')),
                ('psiquiatra', models.BooleanField(default=False, verbose_name='Já passou por psiquiatra?')),
                (
                    'duracao_psiquiatria',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(1, 'Menos de 1 ano'), (2, 'Entre 1 e 2 anos'), (2, 'Entre 2 e 3 anos'), (4, 'Entre 3 e 4 anos'), (5, 'Entre 4 e 5 anos'), (6, 'Mais de 5 anos')],
                        null=True,
                        verbose_name='Tempo na psiquiatria',
                    ),
                ),
                (
                    'tempo_psiquiatria',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(1, 'Semanas'), (2, 'Meses'), (3, '1 ano'), (4, 'De 2 a 5 anos'), (5, 'Mais de 5 anos')],
                        null=True,
                        verbose_name='Há quanto tempo esteve no psiquiatra',
                    ),
                ),
                ('lesoes_ortopedicas', models.BooleanField(default=False, verbose_name='Teve lesões ortopédicas')),
                ('quais_lesoes_ortopedicas', models.TextField(blank=True, null=True, verbose_name='Quais lesões ortopédicas')),
                ('gestante', models.BooleanField(default=False, verbose_name='Gestante')),
                ('problema_auditivo', models.BooleanField(default=False, verbose_name='Problemas Auditivos')),
                ('qual_problema', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual problema auditivo')),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                ('doencas_cronicas', models.ManyToManyField(blank=True, to='saude.Doenca', verbose_name='Sofre de alguma doença crônica')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Prontuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cartao_vacinal', djtools.db.models.FileFieldPlus(null=True, upload_to='', verbose_name='Cartão Vacinal')),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Cadastrado Em')),
                (
                    'cadastrado_por',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pessoa_cadastro_cartaovacinal', to='rh.PessoaFisica'),
                ),
                ('pessoa_fisica', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica', verbose_name='Pessoa Física/Matrícula')),
            ],
            options={'verbose_name': 'Prontuário', 'verbose_name_plural': 'Prontuários'},
        ),
        migrations.CreateModel(
            name='QueixaPsicologica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Queixa', 'verbose_name_plural': 'Queixas', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='ReceitaNutricional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', ckeditor.fields.RichTextField(verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Receita', 'verbose_name_plural': 'Receitas', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='RegistroAdministrativo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=10000, verbose_name='Descrição')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional')),
                ('profissional', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica')),
            ],
            options={'verbose_name': 'Registro Administrativo', 'verbose_name_plural': 'Registros Administrativos'},
        ),
        migrations.CreateModel(
            name='RespostaMarcadorNutricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'pergunta',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='resposta_pergunta_marcador', to='saude.PerguntaMarcadorNutricao', verbose_name='Pergunta'
                    ),
                ),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
                (
                    'resposta',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='resposta_escolhida', to='saude.OpcaoRespostaMarcadorNutricao', verbose_name='Resposta'
                    ),
                ),
            ],
            options={'verbose_name': 'Resposta de Marcador Alimentar', 'verbose_name_plural': 'Respostas de Marcador Alimentar'},
        ),
        migrations.CreateModel(
            name='RestricaoAlimentar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Restrição Alimentar', 'verbose_name_plural': 'Restrições Alimentares', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='ResultadoProcedimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedimento', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.ProcedimentoOdontologia')),
            ],
            options={'verbose_name': 'Resultado do Procedimento', 'verbose_name_plural': 'Resultados do Procedimento'},
        ),
        migrations.CreateModel(
            name='SinaisVitais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now=True)),
                ('pressao_sistolica', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pressão Sistólica')),
                ('pressao_diastolica', models.PositiveIntegerField(blank=True, help_text='Em mmHg', null=True, verbose_name='Pressão Diastólica')),
                ('pulsacao', models.PositiveIntegerField(blank=True, help_text='Em bpm', null=True, verbose_name='Pulsação')),
                ('respiracao', models.PositiveIntegerField(blank=True, help_text='Em rpm', null=True, verbose_name='Respiração')),
                ('temperatura', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=1, help_text='Em °C', max_digits=12, null=True, verbose_name='Temperatura')),
                (
                    'temperatura_categoria',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('1', 'Hipotermia'), ('2', 'Normal/Afebril'), ('3', 'Hipertemia'), ('4', 'Pirexia'), ('5', 'Hiperpirexia')],
                        max_length=2,
                        null=True,
                        verbose_name='Temperatura',
                    ),
                ),
                (
                    'respiracao_categoria',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('1', 'Eupnéica'), ('2', 'Dispnéica'), ('3', 'Ortopnéica'), ('4', 'Taquipnéica'), ('5', 'Bradipnéica'), ('6', 'Apnéia')],
                        max_length=2,
                        null=True,
                        verbose_name='Respiração',
                    ),
                ),
                ('atendimento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento')),
                (
                    'profissional',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Cadastrado por',
                    ),
                ),
            ],
            options={'verbose_name': 'Sinais Vitais'},
        ),
        migrations.CreateModel(
            name='SituacaoClinica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                (
                    'categoria',
                    models.CharField(
                        choices=[
                            ('#2ecc71', '#2ecc71'),
                            ('#f1c40f', '#f1c40f'),
                            ('#2a84bf', '#2a84bf'),
                            ('#8e44ad', '#8e44ad'),
                            ('#FF0000', '#FF0000'),
                            ('#7f8c8d', '#7f8c8d'),
                            ('#FF8C00', '#FF8C00'),
                            ('#16a085', '#16a085'),
                            ('#2c3e50', '#2c3e50'),
                            ('#bdc3c7', '#bdc3c7'),
                        ],
                        max_length=10,
                        verbose_name='Categoria',
                    ),
                ),
                ('preenchimento', models.CharField(choices=[('1', 'Cheio'), ('2', 'Contorno')], default='1', max_length=2, verbose_name='Preenchimento')),
                ('cpod', models.CharField(blank=True, choices=[('C', 'C'), ('P', 'P'), ('O', 'O')], max_length=2, null=True, verbose_name='CPOD')),
            ],
            options={'verbose_name': 'Situação Clínica', 'verbose_name_plural': 'Situações Clínicas'},
        ),
        migrations.CreateModel(
            name='TipoAtividadeGrupo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=500, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Tipo de Atividade em Grupo', 'verbose_name_plural': 'Tipos de Atividade em Grupo'},
        ),
        migrations.CreateModel(
            name='TipoConsultaOdontologia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=200, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Tipo de Consulta de Odontologia', 'verbose_name_plural': 'Tipos de Consulta de Odontologia'},
        ),
        migrations.CreateModel(
            name='TipoExameLaboratorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('unidade', models.CharField(max_length=200, verbose_name='Unidade de Medida')),
                ('valor_referencia', ckeditor.fields.RichTextField(verbose_name='Valores de Referência')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('categoria', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.CategoriaExameLaboratorial')),
            ],
            options={'verbose_name': 'Tipo de Exame Laboratorial', 'verbose_name_plural': 'Tipos de Exames Laboratoriais'},
        ),
        migrations.CreateModel(
            name='Vacina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('doses', models.PositiveIntegerField(verbose_name='Número de Doses')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={'verbose_name': 'Vacina', 'verbose_name_plural': 'Vacinas'},
        ),
        migrations.CreateModel(
            name='ValorExameLaboratorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.CharField(max_length=100, verbose_name='Valor')),
                ('exame', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.ExameLaboratorial')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.TipoExameLaboratorial')),
            ],
            options={'verbose_name': 'Valor do Exame Complementar', 'verbose_name_plural': 'Valores do Exame Complementar'},
        ),
        migrations.AlterUniqueTogether(name='situacaoclinica', unique_together=set([('descricao',)])),
        migrations.AddField(
            model_name='resultadoprocedimento',
            name='situacao_clinica',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.SituacaoClinica'),
        ),
        migrations.AddField(model_name='prontuario', name='vacinas', field=models.ManyToManyField(through='saude.CartaoVacinal', to='saude.Vacina')),
        migrations.AddField(
            model_name='procedimentoindicado',
            name='procedimento',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.ProcedimentoOdontologia'),
        ),
        migrations.AddField(
            model_name='procedimentoindicado',
            name='situacao_clinica',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.SituacaoClinica'),
        ),
        migrations.AddField(
            model_name='planotratamento',
            name='procedimento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.ProcedimentoOdontologia'),
        ),
        migrations.AddField(
            model_name='planotratamento',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='planotratamento',
            name='situacao_clinica',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.SituacaoClinica'),
        ),
        migrations.AddField(
            model_name='planoalimentar',
            name='receita_nutricional',
            field=models.ManyToManyField(related_name='diagnostico_nutricional', to='saude.ReceitaNutricional', verbose_name='Receita Nutricional'),
        ),
        migrations.AddField(
            model_name='opcaorespostamarcadornutricao',
            name='pergunta',
            field=djtools.db.models.ForeignKeyPlus(
                on_delete=django.db.models.deletion.CASCADE, related_name='pergunta_marcador', to='saude.PerguntaMarcadorNutricao', verbose_name='Pergunta'
            ),
        ),
        migrations.AddField(
            model_name='odontograma',
            name='tipo_consulta',
            field=djtools.db.models.ManyToManyFieldPlus(related_name='tipo_consulta_odontologia', to='saude.TipoConsultaOdontologia'),
        ),
        migrations.AddField(
            model_name='metaacaoeducativa', name='objetivos', field=djtools.db.models.ManyToManyFieldPlus(to='saude.ObjetivoAcaoEducativa', verbose_name='Objetivo')
        ),
        migrations.AddField(
            model_name='intervencaoenfermagem',
            name='procedimento_enfermagem',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.ProcedimentoEnfermagem', verbose_name='Procedimento'),
        ),
        migrations.AddField(
            model_name='intervencaoenfermagem',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='habitosdevida',
            name='qual_metodo_contraceptivo',
            field=models.ManyToManyField(blank=True, to='saude.MetodoContraceptivo', verbose_name='Qual método contraceptivo'),
        ),
        migrations.AddField(model_name='habitosdevida', name='que_drogas', field=models.ManyToManyField(blank=True, to='saude.Droga', verbose_name='Quais drogas')),
        migrations.AddField(
            model_name='frequenciaalimentarnutricao',
            name='frequencia',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='frequencia_pratica_alimentar', to='saude.FrequenciaPraticaAlimentar'),
        ),
        migrations.AddField(
            model_name='frequenciaalimentarnutricao',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='examelaboratorial',
            name='prontuario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario', verbose_name='Prontuário'),
        ),
        migrations.AddField(
            model_name='exameimagem',
            name='prontuario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario', verbose_name='Prontuário'),
        ),
        migrations.AddField(
            model_name='documentoprontuario', name='prontuario', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario')
        ),
        migrations.AddField(
            model_name='cartaovacinal',
            name='prontuario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario', verbose_name='Prontuário'),
        ),
        migrations.AddField(
            model_name='cartaovacinal', name='vacina', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Vacina', verbose_name='Vacina')
        ),
        migrations.AddField(
            model_name='atividadegrupo', name='meta', field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.MetaAcaoEducativa')
        ),
        migrations.AddField(model_name='atividadegrupo', name='responsaveis', field=models.ManyToManyField(related_name='responsaveis_atividades_grupo', to='rh.PessoaFisica')),
        migrations.AddField(
            model_name='atividadegrupo',
            name='tipo',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.TipoAtividadeGrupo', verbose_name='Tipo'),
        ),
        migrations.AddField(
            model_name='atividadegrupo',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus'),
        ),
        migrations.AddField(
            model_name='atendimentopsicologia',
            name='motivo_chegada',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='motivo_chegada_psicologia',
                to='saude.MotivoChegadaPsicologia',
                verbose_name='Motivo da Chegada',
            ),
        ),
        migrations.AddField(
            model_name='atendimentopsicologia',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='atendimentopsicologia',
            name='queixa_identificada',
            field=models.ManyToManyField(related_name='queixa_identificada', to='saude.QueixaPsicologica', verbose_name='Queixa Identificada'),
        ),
        migrations.AddField(
            model_name='atendimentopsicologia',
            name='queixa_principal',
            field=models.ManyToManyField(related_name='queixa_principal', to='saude.QueixaPsicologica', verbose_name='Queixa Principal'),
        ),
        migrations.AddField(
            model_name='atendimentonutricao',
            name='avaliacao_gastrointestinal',
            field=models.ManyToManyField(related_name='avaliacao_gastrointestinal', to='saude.AvaliacaoGastroIntestinal', verbose_name='Avaliação Gastrointestinal'),
        ),
        migrations.AddField(
            model_name='atendimentonutricao',
            name='diagnostico_nutricional',
            field=models.ManyToManyField(related_name='diagnostico_nutricional', to='saude.DiagnosticoNutricional', verbose_name='Diagnóstico Nutricional'),
        ),
        migrations.AddField(
            model_name='atendimentonutricao',
            name='motivo',
            field=models.ManyToManyField(related_name='motivo_atendimento_nutricao', to='saude.MotivoAtendimentoNutricao', verbose_name='Motivo do Atendimento'),
        ),
        migrations.AddField(
            model_name='atendimentonutricao',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='atendimentonutricao',
            name='restricao_alimentar',
            field=models.ManyToManyField(related_name='restricao_alimentar', to='saude.RestricaoAlimentar', verbose_name='Restrição Alimentar'),
        ),
        migrations.AddField(
            model_name='atendimentomultidisciplinar',
            name='procedimento',
            field=djtools.db.models.ManyToManyFieldPlus(to='saude.ProcedimentoMultidisciplinar', verbose_name='Procedimentos'),
        ),
        migrations.AddField(
            model_name='atendimentomultidisciplinar',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='atendimento', name='prontuario', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario')
        ),
        migrations.AddField(
            model_name='atendimento', name='servidor', field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')
        ),
        migrations.AddField(
            model_name='atendimento',
            name='usuario_aberto',
            field=djtools.db.models.ForeignKeyPlus(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_usuario_aberto', to=settings.AUTH_USER_MODEL, verbose_name='Aberto por'
            ),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='usuario_cancelado',
            field=djtools.db.models.ForeignKeyPlus(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_usuario_cancelado', to=settings.AUTH_USER_MODEL, verbose_name='Cancelado por'
            ),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='usuario_fechado',
            field=djtools.db.models.ForeignKeyPlus(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_usuario_fechado', to=settings.AUTH_USER_MODEL, verbose_name='Fechado por'
            ),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='usuario_reaberto',
            field=djtools.db.models.ForeignKeyPlus(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_usuario_reaberto', to=settings.AUTH_USER_MODEL, verbose_name='Reaberto por'
            ),
        ),
        migrations.AddField(
            model_name='antropometria',
            name='atendimento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento'),
        ),
        migrations.AddField(
            model_name='antropometria',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='antecedentesfamiliares',
            name='agravos_primeiro_grau',
            field=models.ManyToManyField(blank=True, related_name='agravos_primeiro_grau', to='saude.Doenca', verbose_name='Agravos à saúde com parentesco de 1º grau'),
        ),
        migrations.AddField(
            model_name='antecedentesfamiliares',
            name='agravos_segundo_grau',
            field=models.ManyToManyField(blank=True, related_name='agravos_segundo_grau', to='saude.Doenca', verbose_name='Agravos à saúde com parentesco de 2º grau'),
        ),
        migrations.AddField(
            model_name='antecedentesfamiliares',
            name='atendimento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento'),
        ),
        migrations.AddField(
            model_name='antecedentesfamiliares',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='anotacaointerdisciplinar',
            name='prontuario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario', verbose_name='Prontuário'),
        ),
        migrations.AddField(
            model_name='anexopsicologia', name='atendimento', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento')
        ),
        migrations.AddField(
            model_name='anexopsicologia', name='cadastrado_por', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica')
        ),
        migrations.AddField(
            model_name='anamnesepsicologia',
            name='atendimento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento'),
        ),
        migrations.AddField(
            model_name='anamnesepsicologia',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='anamnesepsicologia', name='prontuario', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='saude.Prontuario')
        ),
        migrations.AddField(
            model_name='anamnese',
            name='atendimento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento'),
        ),
        migrations.AddField(
            model_name='anamnese',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AddField(
            model_name='acuidadevisual',
            name='atendimento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='saude.Atendimento', verbose_name='Atendimento'),
        ),
        migrations.AddField(
            model_name='acuidadevisual',
            name='profissional',
            field=djtools.db.models.CurrentUserField(
                blank=True,
                default=djtools.middleware.threadlocals.get_user,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Cadastrado por',
            ),
        ),
        migrations.AlterUniqueTogether(name='exameperiodontal', unique_together=set([('atendimento', 'sextante', 'ocorrencia')])),
    ]
