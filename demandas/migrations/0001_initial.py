# Generated by Django 3.2.5 on 2024-03-05 20:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models
import djtools.middleware.threadlocals


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('comum', '0059_auto_20230427_1602'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmbienteHomologacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', djtools.db.models.CharFieldPlus(default='master', max_length=255, verbose_name='Branch')),
                ('banco', djtools.db.models.CharFieldPlus(default='suap_mascarado_pequeno', max_length=255, verbose_name='Banco de Dados')),
                ('data_criacao', djtools.db.models.DateFieldPlus(verbose_name='Data de Criação')),
                ('data_expiracao', djtools.db.models.DateFieldPlus(verbose_name='Data de Expiração')),
                ('senha', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Senha')),
                ('pipeline', djtools.db.models.PositiveIntegerFieldPlus(verbose_name='Pipeline')),
                ('url_gitlab', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Pipeline')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Ambiente de Homologação',
                'verbose_name_plural': 'Ambientes de Homologação',
            },
        ),
        migrations.CreateModel(
            name='AreaAtuacaoDemanda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recebe_sugestoes', models.BooleanField(default=False, verbose_name='Recebe sugestões de melhorias?')),
                ('area', djtools.db.models.OneToOneFieldPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.areaatuacao', verbose_name='Área')),
                ('demandante_responsavel', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='demandanteresponsavelarea', to=settings.AUTH_USER_MODEL, verbose_name='Demandante Responsável pela Área')),
                ('demandantes', models.ManyToManyField(related_name='demanda_demandantesarea_set', to=settings.AUTH_USER_MODEL, verbose_name='Demandantes')),
            ],
            options={
                'verbose_name': 'Área de Atuação',
                'verbose_name_plural': 'Áreas de Atuação',
            },
        ),
        migrations.CreateModel(
            name='Demanda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[('Melhoria', 'Melhoria'), ('Funcionalidade', 'Funcionalidade')], default='Funcionalidade', max_length=255, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=250, verbose_name='Título da Demanda')),
                ('descricao', models.TextField(help_text='Evite colocar informações sensiveis nesse campo pois essa descrição é pública.', verbose_name='Descrição da Demanda')),
                ('privada', models.BooleanField(default=False, help_text='Indique se a demanda deve ser privada nos seus detalhes até a sua finalização.', verbose_name='Privada?')),
                ('aberto_em', models.DateTimeField(auto_now_add=True, verbose_name='Aberto Em')),
                ('prazo_legal', models.DateField(blank=True, help_text='Só preencher esse campo se existir um prazo legal da demanda. ex: Data limite(por lei, ou determinação) para estar em produção.', null=True, verbose_name='Prazo Legal')),
                ('data_atualizacao', models.DateField(blank=True, null=True, verbose_name='Data da Última Atualização')),
                ('prioridade', models.PositiveIntegerField(blank=True, null=True, verbose_name='Prioridade')),
                ('situacao', djtools.db.models.CharFieldPlus(choices=[['Solicitada', 'Solicitada'], ['Em negociação', 'Em negociação'], ['Em análise', 'Em análise'], ['Aprovada', 'Aprovada'], ['Em desenvolvimento', 'Em desenvolvimento'], ['Em homologação', 'Em homologação'], ['Homologada', 'Homologada'], ['Em implantação', 'Em implantação'], ['Concluída', 'Concluída'], ['Cancelada', 'Cancelada'], ['Suspensa', 'Suspensa']], default='Solicitada', max_length=255, verbose_name='Etapa')),
                ('especificacao_tecnica', models.TextField(blank=True, verbose_name='Especificação Técnica')),
                ('url_validacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='URL para Ambiente de Homologação')),
                ('senha_homologacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Senha para Ambiente de Homologação')),
                ('id_merge_request', models.PositiveIntegerField(blank=True, help_text='Identificador do Merge-request. Exemplo: na url https://gitlab.ifrn.edu.br/cosinf/suap/-/merge_requests/25 o número 25 é o identificador.', null=True, verbose_name='ID do Merge-Request')),
                ('milestone', models.PositiveIntegerField(null=True, verbose_name='ID da Milestone')),
                ('id_repositorio', models.PositiveIntegerField(null=True, verbose_name='ID do Repositório GIT')),
                ('consolidacao_sempre_visivel', models.BooleanField(default=False, verbose_name='Consolidação visível durante todas as etapas?')),
                ('votos', djtools.db.models.IntegerFieldPlus(default=0, verbose_name='Votos')),
                ('ambiente_homologacao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demandas.ambientehomologacao', verbose_name='Ambiente de Homologação')),
                ('analistas', models.ManyToManyField(help_text='Vincule usuários analistas dessa demanda', related_name='demanda_analistas_set', to=settings.AUTH_USER_MODEL, verbose_name='Analista')),
                ('area', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='demandas.areaatuacaodemanda', verbose_name='Área de Atuação')),
                ('demandantes', models.ManyToManyField(related_name='demanda_demandantes_set', to=settings.AUTH_USER_MODEL, verbose_name='Demandantes')),
                ('desenvolvedores', models.ManyToManyField(help_text='Vincule usuários desenvolvedores desta demanda.', related_name='demanda_desenvolvedores_set', to=settings.AUTH_USER_MODEL, verbose_name='Desenvolvedores')),
                ('interessados', models.ManyToManyField(help_text='Vincule outros usuários que desejem acompanhar as discussões desta demanda.', related_name='demanda_interessados_set', to=settings.AUTH_USER_MODEL, verbose_name='Interessados')),
                ('observadores', models.ManyToManyField(related_name='demanda_observadores_set', to=settings.AUTH_USER_MODEL, verbose_name='Observadores')),
                ('observadores_pendentes', models.ManyToManyField(related_name='demanda_observadores_pendentes_set', to=settings.AUTH_USER_MODEL, verbose_name='Observadores Pendentes')),
            ],
            options={
                'verbose_name': 'Demanda',
                'verbose_name_plural': 'Demandas',
                'ordering': ['prioridade', 'area'],
                'permissions': (('atende_demanda', 'Pode atender Demanda'), ('pode_relatorio', 'Pode visualizar relatórios')),
            },
        ),
        migrations.CreateModel(
            name='DoD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(null=True, verbose_name='Descrição')),
                ('detalhamento', models.TextField(null=True, verbose_name='Detalhamento')),
                ('envolvidos', models.TextField(null=True, verbose_name='Grupos de Usuários Envolvidos')),
                ('demanda', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda')),
            ],
            options={
                'verbose_name': 'Consolidação da Demanda',
                'verbose_name_plural': 'Consolidações das Demandas',
                'permissions': (('aprovar_dod', 'Pode aprovar demanda'), ('fechar_dod', 'Pode enviar demanda para aprovação')),
            },
        ),
        migrations.CreateModel(
            name='ProjetoGitlab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_projeto_gitlab', djtools.db.models.PositiveIntegerFieldPlus(verbose_name='ID projeto no gitlab')),
                ('nome_projeto', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome do projeto')),
                ('grupo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Grupo')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
            ],
            options={
                'verbose_name': 'Projeto no Gitlab',
                'verbose_name_plural': 'Projetos no Gitlab',
            },
        ),
        migrations.CreateModel(
            name='SugestaoMelhoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=250, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('situacao', djtools.db.models.CharFieldPlus(choices=[['1', 'Pendente'], ['2', 'Em análise'], ['3', 'Suspensa'], ['4', 'Deferida'], ['5', 'Indeferida'], ['6', 'Cancelada']], default='1', max_length=255, verbose_name='Situação')),
                ('votos', djtools.db.models.IntegerFieldPlus(default=0, verbose_name='Votos')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data de Cadastro')),
                ('atualizado_em', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em')),
                ('area_atuacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.areaatuacaodemanda', verbose_name='Área de Atuação')),
                ('demanda_gerada', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to='demandas.demanda', verbose_name='Demanda Gerada')),
                ('interessados', models.ManyToManyField(related_name='sugestaomelhoria_interessados_set', to=settings.AUTH_USER_MODEL, verbose_name='Interessados')),
                ('requisitante', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sugestaomelhoria_requisitante', to=settings.AUTH_USER_MODEL, verbose_name='Requisitante')),
                ('responsavel', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sugestaomelhoria_responsavel', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Sugestão de Melhoria',
                'verbose_name_plural': 'Sugestões de Melhorias',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=200, unique=True, verbose_name='Nome')),
                ('sigla', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Sigla')),
                ('icone', djtools.db.models.CharFieldPlus(blank=True, help_text='Informe um ícone para representar esta Tag. Fonte: https://fontawesome.com/', max_length=80, null=True, verbose_name='Ícone')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='SugestaoVoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concorda', models.BooleanField(null=True)),
                ('sugestao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.sugestaomelhoria', verbose_name='Sugestão de Melhoria')),
                ('usuario', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sugestaomelhoria',
            name='tags',
            field=models.ManyToManyField(to='demandas.Tag', verbose_name='Tags relacionadas'),
        ),
        migrations.CreateModel(
            name='NotaInterna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.TextField(verbose_name='Nota')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, verbose_name='Cadastrado em')),
                ('demanda', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda')),
                ('usuario', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nota Interna',
                'verbose_name_plural': 'Notas Interna',
                'ordering': ['-cadastrado_em'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoSituacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('situacao', djtools.db.models.CharFieldPlus(choices=[['Solicitada', 'Solicitada'], ['Em negociação', 'Em negociação'], ['Em análise', 'Em análise'], ['Aprovada', 'Aprovada'], ['Em desenvolvimento', 'Em desenvolvimento'], ['Em homologação', 'Em homologação'], ['Homologada', 'Homologada'], ['Em implantação', 'Em implantação'], ['Concluída', 'Concluída'], ['Cancelada', 'Cancelada'], ['Suspensa', 'Suspensa']], max_length=255, null=True, verbose_name='Situacao')),
                ('data_previsao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Previsão')),
                ('data_conclusao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Conclusão')),
                ('demanda', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda', verbose_name='Demanda')),
                ('usuario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='historicosituacao_usuarios_set', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Histórico das Etapas',
                'verbose_name_plural': 'Históricos das Etapas',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoPrioridade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('prioridade', djtools.db.models.PositiveIntegerFieldPlus(null=True, verbose_name='Prioridade')),
                ('demanda', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda', verbose_name='Demanda')),
                ('usuario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='historicoprioridade_usuarios_set', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Histórico de Prioridades',
                'verbose_name_plural': 'Históricos de Prioridades',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='Especificacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('atividades', models.TextField(blank=True, verbose_name='Atividade(s)')),
                ('ordem', djtools.db.models.PositiveIntegerFieldPlus(default=1, verbose_name='Ordem da Especificação')),
                ('dod', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.dod')),
            ],
            options={
                'verbose_name': 'Especificação',
                'verbose_name_plural': 'Especificações',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='DemandaVoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concorda', models.BooleanField(null=True)),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, verbose_name='Cadastrado em')),
                ('demanda', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda', verbose_name='Demanda')),
                ('usuario', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='demanda',
            name='tags',
            field=models.ManyToManyField(related_name='demanda_tags_set', to='demandas.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Atualizacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Título')),
                ('detalhamento', models.TextField(blank=True, null=True, verbose_name='Detalhamento')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[('Funcionalidade', 'Funcionalidade'), ('Manutenção', 'Manutenção'), ('Bug', 'Bug')], max_length=255)),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data de Implantação')),
                ('demanda', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda', verbose_name='Demanda Vinculada')),
                ('grupos', models.ManyToManyField(to='auth.Group', verbose_name='Grupos Envolvidos')),
                ('responsaveis', models.ManyToManyField(help_text='Vincule usuários desenvolvedores desta atualização.', related_name='atualizacao_responsaveis_set', to=settings.AUTH_USER_MODEL, verbose_name='Responsáveis')),
                ('tags', models.ManyToManyField(to='demandas.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Atualização',
                'verbose_name_plural': 'Atualizações',
                'ordering': ['-data'],
            },
        ),
        migrations.AddField(
            model_name='areaatuacaodemanda',
            name='tags_relacionadas',
            field=models.ManyToManyField(to='demandas.Tag', verbose_name='Tags relacionadas'),
        ),
        migrations.CreateModel(
            name='Anexos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='upload/demandas/anexos/')),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('demanda', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.demanda', verbose_name='Demanda')),
                ('usuario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='anexos_usuario_set', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Anexo',
                'verbose_name_plural': 'Anexos',
                'ordering': ['data_hora'],
            },
        ),
        migrations.CreateModel(
            name='AnalistaDesenvolvedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_gitlab', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Username Gitlab')),
                ('eh_analista', models.BooleanField(default=True, verbose_name='É Analista?')),
                ('eh_desenvolvedor', models.BooleanField(default=True, verbose_name='É Desenvolvedor?')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('pipeline', models.IntegerField(blank=True, null=True, verbose_name='Pipeline da IDE')),
                ('senha_ide', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Senha da IDE')),
                ('usuario', djtools.db.models.OneToOneFieldPlus(on_delete=django.db.models.deletion.CASCADE, related_name='analistadesenvolvedor', to=settings.AUTH_USER_MODEL, verbose_name='Analista/Desenvolvedor')),
            ],
            options={
                'verbose_name': 'Analista/Desenvolvedor',
                'verbose_name_plural': 'Analistas/Desenvolvedores',
            },
        ),
        migrations.AddField(
            model_name='ambientehomologacao',
            name='criador',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='demandas.analistadesenvolvedor', verbose_name='Responsável'),
        ),
    ]
