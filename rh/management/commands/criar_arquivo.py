import datetime

from catalogo_provedor_servico.models import SolicitacaoEtapa, SolicitacaoEtapaArquivo
from djtools.management.commands import BaseCommandPlus


# Ref:
# https://www.revsys.com/tidbits/loading-django-files-from-code/
class Command(BaseCommandPlus):
    def handle(self, *args, **options):

        # Arquivo A1.pdf
        # original_name = 'A1.pdf'
        # content_strb64 = ''
        # content_type = 'application/pdf'
        # size = 6187
        # charset = None

        original_name = 'B1.pdf'
        content_strb64 = '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R0IvSSB0cnVlPj4vQ29udGVudHMgMiAwIFI+PgplbmRvYmoKCjQgMCBvYmoKPDwvVHlwZS9QYWdlcwovUmVzb3VyY2VzIDExIDAgUgovTWVkaWFCb3hbIDAgMCA1OTUgODQxIF0KL0tpZHNbIDEgMCBSIF0KL0NvdW50IDE+PgplbmRvYmoKCjEyIDAgb2JqCjw8L1R5cGUvQ2F0YWxvZy9QYWdlcyA0IDAgUgovT3BlbkFjdGlvblsxIDAgUiAvWFlaIG51bGwgbnVsbCAwXQovTGFuZyhwdC1CUikKPj4KZW5kb2JqCgoxMyAwIG9iago8PC9DcmVhdG9yPEZFRkYwMDU3MDA3MjAwNjkwMDc0MDA2NTAwNzI+Ci9Qcm9kdWNlcjxGRUZGMDA0QzAwNjkwMDYyMDA3MjAwNjUwMDRGMDA2NjAwNjYwMDY5MDA2MzAwNjUwMDIwMDAzNjAwMkUwMDMwPgovQ3JlYXRpb25EYXRlKEQ6MjAxOTAzMDgxNzU5NDQtMDMnMDAnKT4+CmVuZG9iagoKeHJlZgowIDE0CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwNTI2OCAwMDAwMCBuIAowMDAwMDAwMDE5IDAwMDAwIG4gCjAwMDAwMDAxODUgMDAwMDAgbiAKMDAwMDAwNTQzNyAwMDAwMCBuIAowMDAwMDAwMjA0IDAwMDAwIG4gCjAwMDAwMDQ0ODggMDAwMDAgbiAKMDAwMDAwNDUwOSAwMDAwMCBuIAowMDAwMDA0NzExIDAwMDAwIG4gCjAwMDAwMDUwMDkgMDAwMDAgbiAKMDAwMDAwNTE4MSAwMDAwMCBuIAowMDAwMDA1MjEzIDAwMDAwIG4gCjAwMDAwMDU1MzYgMDAwMDAgbiAKMDAwMDAwNTYzMyAwMDAwMCBuIAp0cmFpbGVyCjw8L1NpemUgMTQvUm9vdCAxMiAwIFIKL0luZm8gMTMgMCBSCi9JRCBbIDxBREIzNDZGMTYxMDlDQTc2QkM0MkYwRUIzNjgxMEVGMD4KPEFEQjM0NkYxNjEwOUNBNzZCQzQyRjBFQjM2ODEwRUYwPiBdCi9Eb2NDaGVja3N1bSAvQUZDQkFFMUZGRUE2QUY5NDA2OTVFNTQzNUVFQkNFOEQKPj4Kc3RhcnR4cmVmCjU4MDgKJSVFT0YK'
        content_type = 'application/pdf'
        size = 6291

        # content_bytes_b64 = content_strb64.encode('utf-8')
        # sha256_hash_strb64 = hashlib.sha512(content_bytes_b64).hexdigest()
        # content_bytes = base64.b64decode(content_bytes_b64)
        # sha256_hash = hashlib.sha512(content_bytes).hexdigest()
        #
        # django_file = File(content_bytes)
        #
        # arquivo = ArquivoUnico()
        # content = ContentFile(content_bytes)
        # arquivo.content_type = content_type
        # arquivo.size_in_bytes = size
        # arquivo.sha256_hash = sha256_hash
        # arquivo.content.save(original_name, content, save=False)
        # arquivo.save()
        #
        # print(arquivo)

        # arquivo_unico, created = ArquivoUnico.get_or_create_from_file_strb64(strb64=content_strb64,
        #                                                               tipo_conteudo=content_type,
        #                                                               tamanho_em_bytes=size,
        #                                                               data_hora_primeiro_upload=datetime.date(2020, 5, 1))
        # print(arquivo_unico, created)

        solicitacao_etapa = SolicitacaoEtapa.objects.get(id=18)
        solicitacao_etapa_arquivo, solicitacao_etapa_arquivo_created, arquivo_unico, arquivo_unico_created = SolicitacaoEtapaArquivo.update_or_create_from_file_strb64(
            strb64=content_strb64,
            tipo_conteudo=content_type,
            data_hora_upload=datetime.datetime.now(),
            nome_original=original_name,
            nome_exibicao='CertidaoNascimento.pdf',
            solicitacao_etapa=solicitacao_etapa,
            nome_atributo_json='certidao_nascimento',
            tamanho_em_bytes_para_validar=size,
            hash_sha512_para_validar=None,
            # solicitacao_etapa_arquivo_id=3
        )

        print(solicitacao_etapa_arquivo, solicitacao_etapa_arquivo_created, arquivo_unico, arquivo_unico_created)
