# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-05-16 10:24
from __future__ import unicode_literals

from django.db import migrations
from django.db.models import Count


def remove_prontuarios_com_pessoafisica_duplicada(apps, schema_editor):
    Prontuario = apps.get_model('saude.Prontuario')
    Atendimento = apps.get_model('saude.Atendimento')
    CartaoVacinal = apps.get_model('saude.CartaoVacinal')
    AnotacaoInterdisciplinar = apps.get_model('saude.AnotacaoInterdisciplinar')
    ExameLaboratorial = apps.get_model('saude.ExameLaboratorial')
    ExameImagem = apps.get_model('saude.ExameImagem')
    AnamnesePsicologia = apps.get_model('saude.AnamnesePsicologia')
    DocumentoProntuario = apps.get_model('saude.DocumentoProntuario')
    PessoaFisica = apps.get_model('rh.PessoaFisica')
    PessoaExterna = apps.get_model('rh.PessoaExterna')

    for dicionario in Prontuario.objects.values('pessoa_fisica').annotate(count=Count('pessoa_fisica')).filter(count__gt=1):
        id_pessoa = dicionario['pessoa_fisica']
        pessoa = PessoaFisica.objects.get(id=id_pessoa)
        first = True
        for prontuario in pessoa.prontuario_set.all().order_by('pessoa_fisica'):
            if first:
                prontuario_principal = prontuario
                first = False
            else:
                Atendimento.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                CartaoVacinal.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                AnotacaoInterdisciplinar.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                ExameLaboratorial.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                ExameImagem.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                AnamnesePsicologia.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                DocumentoProntuario.objects.filter(prontuario=prontuario).update(prontuario=prontuario_principal)
                prontuario.delete()

    for atendimento in Atendimento.objects.filter(aluno__isnull=True, servidor__isnull=True, prestador_servico__isnull=True):
        if PessoaExterna.objects.filter(pessoa_fisica__cpf=atendimento.prontuario.pessoa_fisica.cpf).exists():
            externa = PessoaExterna.objects.filter(pessoa_fisica__cpf=atendimento.prontuario.pessoa_fisica.cpf)[0]
            atendimento.pessoa_externa = externa
            atendimento.save()
        else:
            pessoafisica = atendimento.prontuario.pessoa_fisica
            nova_pessoa = PessoaExterna()
            nova_pessoa.nome = pessoafisica.nome
            nova_pessoa.sexo = pessoafisica.sexo
            nova_pessoa.cpf = pessoafisica.cpf
            nova_pessoa.nascimento_data = pessoafisica.nascimento_data
            nova_pessoa.pessoa_fisica = pessoafisica
            nova_pessoa.save()
            atendimento.pessoa_externa = nova_pessoa
            atendimento.save()


class Migration(migrations.Migration):

    dependencies = [('saude', '0002_atendimento_pessoa_externa')]

    operations = [migrations.RunPython(remove_prontuarios_com_pessoafisica_duplicada)]
