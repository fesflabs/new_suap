# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 15:05


import ckeditor.fields
import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import djtools.db.models
import djtools.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [('financeiro', '0001_initial'), ('rh', '0001_initial'), ('comum', '0002_auto_20190814_1443')]

    operations = [
        migrations.CreateModel(
            name='AreaConhecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=8, unique=True, verbose_name='Código')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('superior', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.AreaConhecimento', verbose_name='Superior')),
            ],
            options={'verbose_name': 'Área do Conhecimento', 'verbose_name_plural': 'Áreas de Conhecimento'},
        ),
        migrations.CreateModel(
            name='AreaLicaoAprendida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, unique=True, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Área de Lição Aprendida', 'verbose_name_plural': 'Áreas de Lições Aprendidas'},
        ),
        migrations.CreateModel(
            name='AreaTematica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
                ('pessoa_fisica', djtools.db.models.ManyToManyFieldPlus(blank=True, to='rh.PessoaFisica')),
                ('vinculo', djtools.db.models.ManyToManyFieldPlus(to='comum.Vinculo')),
            ],
            options={'verbose_name': 'Área Temática', 'verbose_name_plural': 'Áreas Temáticas'},
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateTimeFieldPlus(auto_now=True, verbose_name='Data')),
                ('parecer', models.TextField()),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação')),
                ('avaliador', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica', verbose_name='Avaliador')),
            ],
            options={'verbose_name': 'Avaliação', 'verbose_name_plural': 'Avaliações'},
        ),
        migrations.CreateModel(
            name='AvaliacaoAluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_avaliacao', djtools.db.models.CharFieldPlus(choices=[('Parcial', 'Parcial'), ('Final', 'Final')], max_length=20, verbose_name='Tipo de Avaliação')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Realizada em')),
                ('data_validacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Validada pelo aluno em')),
                ('consideracoes_coordenador', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Considerações do Avaliador')),
                ('consideracoes_aluno', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Considerações do Aluno')),
                (
                    'avaliado_por',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='avaliador_avaliacao_aluno', to='rh.PessoaFisica'
                    ),
                ),
            ],
            options={'verbose_name': 'Avaliação do Aluno', 'verbose_name_plural': 'Avaliações dos Alunos'},
        ),
        migrations.CreateModel(
            name='AvaliadorExterno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telefone', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('lattes', models.URLField(blank=True)),
                (
                    'instituicao_origem',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='projetos_instituicao_avaliador',
                        to='rh.Instituicao',
                        verbose_name='Instituição',
                    ),
                ),
                ('pessoa_fisica', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_avaliador_externo', to='rh.PessoaFisica')),
                (
                    'titulacao',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='projetos_avaliador_instituicao', to='rh.Titulacao', verbose_name='Titulação'
                    ),
                ),
                ('vinculo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projetos_avaliador_externo_vinculo', to='comum.Vinculo')),
            ],
            options={'verbose_name': 'Avaliador Externo', 'verbose_name_plural': 'Avaliadores Externos', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='AvaliadorIndicado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pessoa_fisica', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica', verbose_name='Avaliador')),
            ],
            options={'verbose_name': 'Avaliador', 'verbose_name_plural': 'Avaliadores'},
        ),
        migrations.CreateModel(
            name='CaracterizacaoBeneficiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField()),
                ('quantidade_atendida', models.IntegerField(null=True, verbose_name='Quantidade Atendida')),
                ('descricao_beneficiario', djtools.db.models.CharFieldPlus(blank=True, max_length=2000, null=True, verbose_name='Descreva os Beneficiários do Público-Alvo')),
            ],
        ),
        migrations.CreateModel(
            name='ColaboradorVoluntario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telefone', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('lattes', models.URLField(blank=True, null=True)),
                (
                    'documentacao',
                    djtools.db.models.PrivateFileField(
                        storage=djtools.storages.get_private_storage(), upload_to='projetos/colaborador_voluntario', verbose_name='Documentação'
                    ),
                ),
                ('eh_aposentado', models.BooleanField(default=False, verbose_name='É Servidor Aposentado')),
                ('eh_vinculado_nucleo_arte', models.BooleanField(default=False, verbose_name='É Vinculado ao Núcleo de Arte')),
                (
                    'instituicao_origem',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='projetos_instituicao_colaborador',
                        to='rh.Instituicao',
                        verbose_name='Instituição',
                    ),
                ),
                ('prestador', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_colaborador_voluntario', to='comum.PrestadorServico')),
                (
                    'titulacao',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='projetos_colaborador_instituicao', to='rh.Titulacao', verbose_name='Titulação'
                    ),
                ),
            ],
            options={'verbose_name': 'Colaborador Voluntário', 'verbose_name_plural': 'Colaboradores Voluntários', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='ComissaoEdital',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'))],
            options={'verbose_name': 'Comissão de Avaliação', 'verbose_name_plural': 'Comissões de Avaliação'},
        ),
        migrations.CreateModel(
            name='CriterioAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('pontuacao_maxima', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação Máxima')),
                (
                    'ordem_desempate',
                    models.IntegerField(
                        help_text='Ordem 1 indica que o critério será o primeiro a ser considerado para desempate.', null=True, verbose_name='Ordem para Desempate'
                    ),
                ),
            ],
            options={'verbose_name': 'Critério de Avaliação', 'verbose_name_plural': 'Critérios de Avaliação', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='CriterioAvaliacaoAluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome do Critério')),
                ('descricao_criterio', djtools.db.models.CharFieldPlus(max_length=5000, verbose_name='Descrição do Critério')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Critério de Avaliação do Aluno', 'verbose_name_plural': 'Critérios de Avaliação do Aluno', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='Desembolso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'mes',
                    models.PositiveIntegerField(
                        choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5'], [6, '6'], [7, '7'], [8, '8'], [9, '9'], [10, '10'], [11, '11'], [12, '12']],
                        help_text='O mês 1 indica o primeiro mês do projeto',
                        verbose_name='Mês',
                    ),
                ),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor (R$)')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Cadastro do Desembolso')),
                ('ano', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Ano', verbose_name='Ano')),
                ('despesa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='financeiro.NaturezaDespesa', verbose_name='Despesa')),
            ],
            options={'verbose_name': 'Desembolso', 'verbose_name_plural': 'Desembolsos'},
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                (
                    'tipo_fomento',
                    djtools.db.models.CharFieldPlus(choices=[('Interno', 'Interno'), ('Externo', 'Externo')], default='Interno', max_length=10, verbose_name='Tipo do Fomento'),
                ),
                ('tipo_edital', models.CharField(choices=[('1', 'Extensão'), ('4', 'Extensão Contínuo')], max_length=10, verbose_name='Tipo do Edital')),
                ('forma_selecao', models.CharField(choices=[('1', 'Campus'), ('2', 'Tema'), ('3', 'Geral')], default='1', max_length=10, verbose_name='Forma de Seleção')),
                (
                    'campus_especifico',
                    models.BooleanField(
                        default=False,
                        help_text='Caso esta opção seja marcada, os projetos deste edital poderão ser avaliados por servidores do mesmo campus do projeto',
                        verbose_name='Edital de Campus',
                    ),
                ),
                (
                    'qtd_projetos_selecionados',
                    models.PositiveIntegerField(default=1, help_text='Número máximo de projetos selecionados', null=True, verbose_name='Quantidade de Projetos Selecionados'),
                ),
                ('inicio_inscricoes', djtools.db.models.DateTimeFieldPlus(verbose_name='Início das Inscrições')),
                ('fim_inscricoes', djtools.db.models.DateTimeFieldPlus(verbose_name='Fim das Inscrições')),
                ('inicio_pre_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Início da Pré-Seleção')),
                ('inicio_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Início da Seleção')),
                ('fim_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Fim da Seleção')),
                ('data_recurso', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data Limite Para Recursos')),
                ('divulgacao_selecao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Divulgação da Seleção')),
                ('participa_aluno', models.BooleanField(default=False, help_text='Marque esta opção caso alunos possam participar do projeto', verbose_name='Participa Aluno')),
                (
                    'participa_servidor',
                    models.BooleanField(default=False, help_text='Marque esta opção caso servidores possam participar do projeto', verbose_name='Participa Servidor'),
                ),
                ('inclusao_bolsas_ae', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da geração das bolsas no AE')),
                (
                    'valor_financiado_por_projeto',
                    djtools.db.models.DecimalFieldPlus(decimal_places=2, default=Decimal('0.0'), max_digits=12, verbose_name='Valor Financiado por Projeto'),
                ),
                (
                    'exige_licoes_aprendidas',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso seja necessário que os coordenadores dos projetos cadastrem as lições aprendidas',
                        verbose_name='Exige Lições Aprendidas',
                    ),
                ),
                ('data_avaliacao_classificacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Avaliação da Classificação')),
                (
                    'exige_avaliacao_aluno',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso seja necessário que os coordenadores dos projetos avaliem os alunos',
                        verbose_name='Exige Avaliações dos Alunos',
                    ),
                ),
                (
                    'ano_inicial_projeto_pendente',
                    models.CharField(
                        blank=True,
                        help_text='\n Permite que coordenadores com projeto em execução (ainda não finalizados) com início a partir do ano informado possam submeter projeto para este edital. Caso nenhum ano seja informado, apenas coordenadores sem projetos pendentes de anos anteriores poderão\xa0submeter projetos para este edital.\n',
                        max_length=5,
                        null=True,
                        verbose_name='Pode Submeter com Projeto Pendente a Partir do Ano?',
                    ),
                ),
                (
                    'permite_colaborador_voluntario',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso seja permitida a inclusão de colaborador voluntário nas equipes dos projetos',
                        verbose_name='Permite Colaborador Voluntário',
                    ),
                ),
                (
                    'permite_colaborador_voluntario_artes',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção caso seja permitida a inclusão de colaborador voluntário vinculado ao núcleo de arte nas equipes dos projetos',
                        verbose_name='Permite Voluntário Vinculado ao Núcleo de Arte',
                    ),
                ),
                (
                    'permite_indicacao_tardia_equipe',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção para permitir que o coordenador do projeto possa registar a participação de alunos na equipe durante a submissão do projeto mas sem indicar especificamente quais alunos serão',
                        verbose_name='Permite Cadastrar Aluno sem Identificá-lo',
                    ),
                ),
                (
                    'atividade_todo_mes',
                    models.BooleanField(
                        default=False,
                        help_text='Marque esta opção se for obrigatória a execução de pelo menos uma atividade em cada mês de duração do projeto.',
                        verbose_name='Atividade Todo Mês',
                    ),
                ),
                (
                    'prazo_atividade',
                    models.IntegerField(
                        blank=True,
                        help_text='Informe o prazo máximo de duração de cada atividade. Se não há prazo máximo, deixe este campo em branco.',
                        null=True,
                        verbose_name='Prazo Máximo de Cada Atividade (em dias)',
                    ),
                ),
                ('arquivo', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Arquivo')),
            ],
            options={'verbose_name': 'Edital', 'verbose_name_plural': 'Editais', 'ordering': ['-inicio_inscricoes']},
        ),
        migrations.CreateModel(
            name='EditalAnexo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                (
                    'tipo_membro',
                    models.CharField(
                        choices=[
                            ('1', 'Docente'),
                            ('5', 'Técnico Administrativo'),
                            ('2', 'Aluno'),
                            ('3', 'Coordenador Docente'),
                            ('4', 'Coordenador Técnico Administrativo'),
                            ('6', 'Colaborador Voluntário'),
                        ],
                        max_length=1,
                        verbose_name='Tipo de Membro',
                    ),
                ),
                ('vinculo', models.CharField(choices=[('Bolsista', 'Bolsista'), ('Voluntário', 'Voluntário')], max_length=20, verbose_name='Tipo de Vínculo')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')),
            ],
            options={'ordering': ['ordem']},
        ),
        migrations.CreateModel(
            name='EditalAnexoAuxiliar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('arquivo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Arquivo')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')),
            ],
            options={'ordering': ['ordem']},
        ),
        migrations.CreateModel(
            name='Etapa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('unidade_medida', models.CharField(max_length=255, verbose_name='Unidade de Medida')),
                ('qtd', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('indicadores_qualitativos', models.TextField(verbose_name='Indicador(es) Qualitativo(s)')),
                ('inicio_execucao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Início da Execução')),
                ('fim_execucao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Fim da Execução')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data de Cadastro da Etapa')),
            ],
            options={'verbose_name': 'Atividade', 'verbose_name_plural': 'Atividades'},
        ),
        migrations.CreateModel(
            name='ExtratoMensalProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'mes',
                    models.PositiveIntegerField(
                        choices=[
                            [1, 'Janeiro'],
                            [2, 'Fevereiro'],
                            [3, 'Março'],
                            [4, 'Abril'],
                            [5, 'Maio'],
                            [6, 'Junho'],
                            [7, 'Julho'],
                            [8, 'Agosto'],
                            [9, 'Setembro'],
                            [10, 'Outubro'],
                            [11, 'Novembro'],
                            [12, 'Dezembro'],
                        ],
                        verbose_name='Mês',
                    ),
                ),
                ('arquivo', models.FileField(max_length=255, upload_to='upload/projetos/extratos_mensais/')),
                ('ano', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Ano', verbose_name='Ano')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='FocoTecnologico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                (
                    'campi',
                    djtools.db.models.ManyToManyFieldPlus(
                        blank=True,
                        help_text='Informe os campi aos quais este foco tecnológico se relaciona. Esse campo é opcional e meramente informativo.',
                        to='rh.UnidadeOrganizacional',
                        verbose_name='Campi',
                    ),
                ),
            ],
            options={'verbose_name': 'Foco Tecnológico', 'verbose_name_plural': 'Focos Tecnológicos'},
            managers=[('ativos', django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name='FotoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legenda', models.TextField(blank=True)),
                ('imagem', models.ImageField(upload_to='upload/projetos/fotos/')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='HistoricoAlteracaoPeriodoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio_execucao', djtools.db.models.DateFieldPlus(verbose_name='Início da Execução')),
                ('fim_execucao', djtools.db.models.DateFieldPlus(verbose_name='Término da Execução')),
                ('justificativa', djtools.db.models.CharFieldPlus(max_length=5000, verbose_name='Justificativa')),
                ('registrado_em', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, verbose_name='Registrado em')),
            ],
            options={
                'verbose_name': 'Registro de Alteração de Período de Execução',
                'verbose_name_plural': 'Registros de Alterações de Períodos de Execução',
                'ordering': ['-registrado_em'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoEquipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movimentacao', models.CharField(max_length=50, null=True)),
                ('data_movimentacao', djtools.db.models.DateFieldPlus()),
                ('data_movimentacao_saida', djtools.db.models.DateFieldPlus(blank=True, null=True)),
                ('categoria', models.CharField(blank=True, choices=[('1', 'Coordenador'), ('2', 'Membro')], max_length=5, null=True)),
                ('vinculo', models.CharField(blank=True, choices=[('Bolsista', 'Sim'), ('Voluntário', 'Não')], max_length=25, null=True)),
                (
                    'tipo_de_evento',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (11, 'Saiu da coordenação do projeto'),
                            (12, 'Tornou-se coordenador do projeto'),
                            (1, 'Assumiu a coordenação do projeto'),
                            (2, 'Aluno inserido'),
                            (3, 'Servidor inserido'),
                            (13, 'Colaborador Voluntário inserido'),
                            (4, 'Participante ativado'),
                            (5, 'Participante inativado'),
                            (6, 'Participante excluído'),
                            (7, 'Bolsa concedida durante a distribuição de bolsas'),
                            (8, 'Bolsas não concedida durante a distribuição de bolsas'),
                            (9, 'Aluno alterado'),
                            (10, 'Servidor alterado'),
                            (14, 'Colaborador Voluntário alterado'),
                        ],
                    ),
                ),
                ('carga_horaria', models.PositiveIntegerField(blank=True, help_text='Carga horária semanal', null=True, verbose_name='Carga Horária')),
                ('obs', models.CharField(max_length=1000, null=True)),
            ],
            options={'verbose_name': 'Histórico da Equipe', 'verbose_name_plural': 'Históricos das Equipes'},
        ),
        migrations.CreateModel(
            name='HistoricoOrientacaoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateFieldPlus()),
                ('data_termino', djtools.db.models.DateFieldPlus(blank=True, null=True)),
            ],
            options={'verbose_name': 'Histórico de Orientação do Projeto', 'verbose_name_plural': 'Históricos de Orientações do Projeto'},
        ),
        migrations.CreateModel(
            name='ItemAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Pontuação')),
                ('pontuacao_original', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Pontuação Original')),
                ('data_alteracao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Alteração')),
                ('avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Avaliacao')),
                ('criterio_avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.CriterioAvaliacao', verbose_name='Critério')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='ItemAvaliacaoAluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'pontuacao',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Não se Aplica', 'Não se Aplica'), ('Excelente', 'Excelente'), ('Bom', 'Bom'), ('Regular', 'Regular'), ('Ruim', 'Ruim')],
                        max_length=20,
                        verbose_name='Pontuação',
                    ),
                ),
                ('avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_avaliacaoaluno', to='projetos.AvaliacaoAluno')),
                (
                    'criterio',
                    djtools.db.models.ForeignKeyPlus(
                        on_delete=django.db.models.deletion.CASCADE, related_name='projetos_criterioavaliacaoaluno', to='projetos.CriterioAvaliacaoAluno'
                    ),
                ),
            ],
            options={'verbose_name': 'Item de Avaliação do Aluno', 'verbose_name_plural': 'Itens de Avaliação dos Alunos', 'ordering': ['criterio__nome']},
        ),
        migrations.CreateModel(
            name='ItemMemoriaCalculo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(max_length=2014, verbose_name='Descrição')),
                ('unidade_medida', models.CharField(max_length=50, verbose_name='Unidade de Medida')),
                ('qtd', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('valor_unitario', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor Unitário (R$)')),
                (
                    'data_cadastro',
                    djtools.db.models.DateFieldPlus(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data de Cadastro do Item de Mémoria de Cálculo'),
                ),
                ('origem', models.CharField(blank=True, max_length=255, null=True, verbose_name='Origem do recurso')),
                ('despesa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='financeiro.NaturezaDespesa', verbose_name='Despesa')),
            ],
            options={'verbose_name': 'Item de Memória de Cálculo', 'verbose_name_plural': 'Itens de Memória de Cálculo'},
        ),
        migrations.CreateModel(
            name='LicaoAprendida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'descricao',
                    models.TextField(
                        help_text='As lições aprendidas visam garantir que as melhorias implantadas ao longo da execução de um projeto possam ser, também, implementadas como padrão nos próximos a serem desenvolvidos, como forma de evitar que erros ou equívocos se repitam em quaisquer atividades.',
                        verbose_name='Descrição',
                    ),
                ),
                ('area_licao_aprendida', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.AreaLicaoAprendida', verbose_name='Área')),
            ],
            options={'verbose_name': 'Lição Aprendida', 'verbose_name_plural': 'Lições Aprendidas'},
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveIntegerField(help_text='Informe um número inteiro maior ou igual a 1', verbose_name='Ordem')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data de Cadastro da Meta')),
            ],
            options={'verbose_name': 'Meta', 'verbose_name_plural': 'Metas'},
        ),
        migrations.CreateModel(
            name='NucleoExtensao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=500, verbose_name='Nome')),
                ('area_atuacao', models.CharField(max_length=5000, verbose_name='Área de Atuação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
            ],
            options={'verbose_name': 'Núcleo de Extensão e Prática Profissional', 'verbose_name_plural': 'Núcleos de Extensão e Prática Profissional', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='ObjetivoVisitaTecnica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=1000, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Objetivo da Visita Técnica', 'verbose_name_plural': 'Objetivos das Visitas Técnicas'},
        ),
        migrations.CreateModel(
            name='OfertaProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'qtd_aprovados',
                    models.PositiveIntegerField(
                        help_text='Informe quantos projetos poderão ser pré-selecionados pelo coordenador do respectivo campus', null=True, verbose_name='Pré-Selecionados'
                    ),
                ),
                (
                    'qtd_selecionados',
                    models.PositiveIntegerField(help_text='Informe quantos projetos serão selecionados pela pró-reitorial de extensão.', null=True, verbose_name='Selecionados'),
                ),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
            ],
            options={'verbose_name': 'Oferta de Projeto', 'verbose_name_plural': 'Ofertas de Projeto'},
        ),
        migrations.CreateModel(
            name='OfertaProjetoPorTema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selecionados', models.PositiveIntegerField(help_text='Informe quantos projetos serão selecionados pela Pró-Reitoria de Extensão', verbose_name='Selecionados')),
                ('area_tematica', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.AreaTematica', verbose_name='Área Temática')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')),
            ],
            options={'verbose_name': 'Oferta de Projeto por Tema', 'verbose_name_plural': 'Ofertas de Projeto por Tema'},
        ),
        migrations.CreateModel(
            name='OrigemRecursoEdital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Origem de Recurso do Edital', 'verbose_name_plural': 'Origens de Recurso do Edital'},
        ),
        migrations.CreateModel(
            name='Parametro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, verbose_name='Código')),
                ('descricao', models.CharField(max_length=150, verbose_name='Descrição')),
                ('grupo', models.CharField(max_length=150, verbose_name='Grupo')),
            ],
            options={'verbose_name': 'Critério', 'verbose_name_plural': 'Critérios'},
        ),
        migrations.CreateModel(
            name='ParametroEdital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_parametro', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12, verbose_name='Valor do Critério')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital', verbose_name='Edital')),
                ('parametro', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Parametro', verbose_name='Critério')),
            ],
            options={'verbose_name': 'Critério do Edital', 'verbose_name_plural': 'Critérios do Edital'},
        ),
        migrations.CreateModel(
            name='ParametroProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=0, verbose_name='Quantidade')),
                ('parametro_edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.ParametroEdital')),
            ],
            options={'verbose_name': 'Critério do Projeto', 'verbose_name_plural': 'Critérios do Projeto', 'ordering': ['parametro_edital__parametro__id']},
        ),
        migrations.CreateModel(
            name='Participacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.BooleanField(default=False, verbose_name='Coordenador')),
                ('vinculo', models.CharField(choices=[('Bolsista', 'Sim'), ('Voluntário', 'Não')], max_length=255)),
                ('carga_horaria', models.PositiveIntegerField(help_text='Carga horária semanal', verbose_name='Carga Horária')),
                ('ativo', models.BooleanField(default=True)),
                ('data_inativacao', models.DateField(null=True, verbose_name='Data de Inativação')),
                ('bolsa_concedida', models.BooleanField(default=False)),
                (
                    'orientador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projetos.Participacao', verbose_name='Orientador do Aluno'
                    ),
                ),
                (
                    'pessoa',
                    djtools.db.models.ForeignKeyPlus(
                        null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projetos_extensao', to='rh.PessoaFisica', verbose_name='Participante'
                    ),
                ),
            ],
            options={'verbose_name': 'Participação', 'verbose_name_plural': 'Participações'},
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título do projeto')),
                (
                    'publico_alvo',
                    models.CharField(
                        blank=True, choices=[('INTERNO', 'Interno'), ('EXTERNO', 'Externo'), ('AMBOS', 'Ambos')], max_length=255, null=True, verbose_name='Público Alvo'
                    ),
                ),
                (
                    'justificativa',
                    ckeditor.fields.RichTextField(
                        help_text='A justificativa deve responder: Por que executar o projeto? Por que ele deve ser selecionado e implementado? Aqui deve ficar claro que o projeto é uma resposta a um determinado problema percebido e identificado pela comunidade ou pelo proponente.)',
                        verbose_name='Justificativa',
                    ),
                ),
                (
                    'resumo',
                    ckeditor.fields.RichTextField(
                        help_text='Sua função é dar uma idéia geral do que se trata, seus objetivos, duração e custo, dentre  outros. Escrever um bom resumo é extremamente importante, pois este tem que cativar o leitor a aprofundar-se no projeto e descobrir o quanto ele é importante, bem intencionado e efetivo. O resumo deverá ser uma das últimas seções a ser redigida, pois então teremos maior intimidade com o projeto. (espaço máximo de 1.500 caracteres)',
                        verbose_name='Resumo',
                    ),
                ),
                (
                    'objetivo_geral',
                    ckeditor.fields.RichTextField(
                        help_text='O objetivo geral deve expressar o que se quer alcançar na região a longo prazo, ultrapassando inclusive o tempo de duração do projeto. Geralmente o objetivo geral está vinculado à estratégia global da instituição. (espaço máximo de 500 caracteres)',
                        verbose_name='Objetivo Geral',
                    ),
                ),
                (
                    'metodologia',
                    ckeditor.fields.RichTextField(
                        help_text='A metodologia deve descrever as formas e técnicas que serão utilizadas para executar as atividades previstas, devendo explicar passo a passo a realização de cada atividade e não apenas repetir as atividades. Deve levar em conta que as atividades tem início, meio e fim, detalhando o plano de trabalho. Um projeto pode ser considerado bem elaborado quando tem metodologia bem definida e clara. É a metodologia que vai dar aos avaliadores/pareceristas, a certeza de que os objetivos/metas do projeto realmente tem condições de serem alcançados.',
                        verbose_name='Metodologia da execução do projeto',
                    ),
                ),
                ('acompanhamento_e_avaliacao', ckeditor.fields.RichTextField(verbose_name='Acompanhamento e avaliação do projeto durante a execução')),
                (
                    'resultados_esperados',
                    ckeditor.fields.RichTextField(
                        help_text='Descrever os resultados esperados. Deve existir uma sintonia muito forte entre os resultados esperados e as metas. \nA divulgação das experiências  bem sucedidas é de fundamental importância, tanto para a continuidade do projeto, quanto para o impacto positivo que o projeto pretende deixar na comunidade. As ações de disseminação dos resultados também  precisam ser pensadas dentro de cada projeto. As propostas de divulgação poderão ser planejadas em nível local ou regional, incluindo os seguintes itens:\nDefinição do que será  objeto de divulgação (metodologias, técnicas, experiências);\nDefinição dos produtos por meio dos quais será feita a divulgação (livros, artigos para revistas/jornais, vídeos, seminários, propriedades piloto);\nDefinição das atividades de divulgação (palestras, reuniões);\nDefinição da abrangência da divulgação (local ou regional);\nDefinição do público que se pretende atingir (outras populações com características semelhantes às dos  beneficiários do projeto, órgãos públicos, setores acadêmicos, organizações não governamentais, etc. ',
                        verbose_name='Disseminação dos Resultados',
                    ),
                ),
                ('inicio_execucao', djtools.db.models.DateFieldPlus(verbose_name='Início da Execução')),
                ('fim_execucao', djtools.db.models.DateFieldPlus(verbose_name='Término da Execução')),
                (
                    'possui_cunho_social',
                    models.BooleanField(
                        default=False,
                        help_text='Projetos de ações inclusivas e de tecnologias sociais, preferencialmente, para populações e comunidades em situação de risco, incluindo serviços tecnológicos e projetos de extensão.',
                        verbose_name='Possui Cunho Social',
                    ),
                ),
                ('pre_aprovado', models.BooleanField(default=False, verbose_name='Pré-selecionado')),
                ('data_pre_avaliacao', models.DateField(blank=True, null=True, verbose_name='Data da Pré-seleção')),
                ('aprovado', models.BooleanField(default=False, verbose_name='Selecionado')),
                ('aprovado_na_distribuicao', models.BooleanField(default=False, verbose_name='Selecionado na distribuição de bolsas')),
                ('data_avaliacao', models.DateField(blank=True, null=True, verbose_name='Data da seleção')),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, default=Decimal('0'), max_digits=12, null=True, verbose_name='Pontuação')),
                ('data_conclusao_planejamento', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Conclusão do Projeto')),
                ('data_finalizacao_conclusao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Finalização do Projeto')),
                ('data_validacao_pontuacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Finalização do Projeto')),
                ('classificacao', models.IntegerField(null=True, verbose_name='Classificação')),
                ('nome_edital_externo', djtools.db.models.CharFieldPlus(blank=True, max_length=500, null=True, verbose_name='Nome do Edital Externo')),
                (
                    'valor_fomento_projeto_externo',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        default=Decimal('0.0'),
                        help_text='Caso não tenha fomento, informe o valor 0,00.',
                        max_digits=12,
                        verbose_name='Valor do Fomento do Projeto',
                    ),
                ),
                ('descricao_comprovante_gru', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Descrição')),
                (
                    'arquivo_comprovante_gru',
                    djtools.db.models.FileFieldPlus(
                        blank=True, max_length=1000, null=True, upload_to='upload/projetos/comprovantas_gru/', verbose_name='Comprovante de Pagamento da GRU'
                    ),
                ),
                ('inativado', models.BooleanField(default=False, verbose_name='Inativado')),
                ('motivo_inativacao', djtools.db.models.CharFieldPlus(blank=True, max_length=5000, null=True, verbose_name='Motivo da Inativação do Projeto')),
                ('inativado_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Inativado em')),
                ('fundamentacaoteorica', ckeditor.fields.RichTextField(blank=True)),
                ('referenciasbibliograficas', ckeditor.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
                'permissions': (
                    ('pode_gerenciar_edital', 'Pode gerenciar edital'),
                    ('pode_avaliar_projeto', 'Pode avaliar projeto'),
                    ('pode_pre_avaliar_projeto', 'Pode pre avaliar projeto'),
                    ('pode_visualizar_projeto', 'Pode visualizar projeto'),
                    ('pode_visualizar_relatorios_extensao', 'Pode visualizar relatórios de extensão'),
                    ('pode_visualizar_projetos_em_monitoramento', 'Pode visualizar projetos em monitoramento'),
                    ('pode_avaliar_cancelamento_projeto', 'Pode avaliar cancelamento projeto'),
                    ('pode_visualizar_avaliadores_externos', 'Pode visualizar avaliadores externos'),
                    ('pode_registrar_consideracao_aluno', 'Pode registrar consideração sobre avaliação'),
                    ('pode_interagir_com_projeto', 'Pode interagir com projeto'),
                ),
            },
        ),
        migrations.CreateModel(
            name='ProjetoAnexo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, null=True, verbose_name='Descrição')),
                ('cadastrado_em', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, null=True, verbose_name='Cadastrado em')),
                ('anexo_edital', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.EditalAnexo')),
                ('arquivo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Arquivo')),
                ('membro_equipe', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaFisica', verbose_name='Participante')),
                (
                    'participacao',
                    djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projetos.Participacao', verbose_name='Participação'),
                ),
            ],
            options={'ordering': ['membro_equipe__nome']},
        ),
        migrations.CreateModel(
            name='ProjetoCancelado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justificativa_cancelamento', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Justificativa do Cancelamento')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data da Solicitação do Cancelamento')),
                ('obs_avaliacao', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observação')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Avaliação da Solicitação')),
                ('cancelado', models.BooleanField(default=False, verbose_name='Cancelado')),
                ('avaliador', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Operador')),
            ],
            options={'verbose_name': 'Projeto Cancelado', 'verbose_name_plural': 'Projetos Cancelados', 'ordering': ['-data_solicitacao']},
        ),
        migrations.CreateModel(
            name='ProjetoHistoricoDeEnvio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parecer_devolucao', models.TextField(verbose_name='Parecer sobre a devolução do projeto')),
                ('data_operacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de realização da Operação')),
                (
                    'situacao',
                    models.CharField(
                        blank=True, choices=[('E', 'Enviado'), ('D', 'Devolvido'), ('R', 'Reaberto'), ('F', 'Finalizado')], max_length=1, null=True, verbose_name='Situação'
                    ),
                ),
                ('operador', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor', verbose_name='Operador')),
            ],
            options={'verbose_name': 'Histórico do Envio de Projetos', 'verbose_name_plural': 'Históricos dos Envios de Projetos'},
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origem', models.CharField(max_length=255, verbose_name='Origem do recurso')),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor disponível (R$)')),
                ('despesa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='financeiro.NaturezaDespesa', verbose_name='Despesa')),
                ('edital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')),
            ],
            options={'verbose_name': 'Investimento', 'verbose_name_plural': 'Investimentos', 'ordering': ['despesa__nome']},
        ),
        migrations.CreateModel(
            name='RecursoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justificativa', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Justificativa do Recurso')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data da Solicitação do Recurso')),
                ('parecer', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Parecer')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Avaliação da Solicitação')),
                ('aceito', models.BooleanField(default=False, verbose_name='Aceito')),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projeto_avaliador_recurso', to='rh.Servidor', verbose_name='Avaliador'
                    ),
                ),
            ],
            options={'verbose_name': 'Recurso', 'verbose_name_plural': 'Recursos', 'ordering': ['-data_solicitacao']},
        ),
        migrations.CreateModel(
            name='RegistroConclusaoProjeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'resultados_alcancados',
                    models.TextField(blank=True, help_text='Informações sobre os resultados obtidos pelo projeto.', null=True, verbose_name='Resultados Alcançados'),
                ),
                (
                    'disseminacao_resultados',
                    models.TextField(
                        blank=True,
                        help_text='Informações de como os resultados foram e/ou serão divulgados para a sociedade.',
                        null=True,
                        verbose_name='Disseminação dos Resultados',
                    ),
                ),
                (
                    'obs',
                    models.TextField(
                        blank=True, help_text='Informação adicional que você julgar relevante no que diz respeito à conclusão do projeto.', null=True, verbose_name='Observação'
                    ),
                ),
                ('dt_avaliacao', djtools.db.models.DateFieldPlus(null=True)),
                (
                    'obs_avaliador',
                    models.TextField(
                        blank=True,
                        help_text='Informação adicional que você julgar relevante no que diz respeito à validação do projeto.',
                        null=True,
                        verbose_name='Observação do Coordenador de Extensão',
                    ),
                ),
                ('aprovado', models.BooleanField(default=False)),
                ('avaliador', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='RegistroExecucaoEtapa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo_indicador_qualitativo',
                    models.CharField(choices=[('1', 'Atendido'), ('2', 'Atendido Parcialmente'), ('3', 'Não Atendido')], max_length=1, verbose_name='Indicadores Qualitativos'),
                ),
                (
                    'qtd',
                    models.IntegerField(help_text='Informe uma quantidade diferente da planejada caso a quantidade planejada não tenha sido alcançada', verbose_name='Quantidade'),
                ),
                (
                    'inicio_execucao',
                    djtools.db.models.DateFieldPlus(
                        help_text='Informe uma data diferente da planejada caso o início da execução tenha sido adiantado/atrasado', verbose_name='Início da Execução'
                    ),
                ),
                (
                    'fim_execucao',
                    djtools.db.models.DateFieldPlus(
                        help_text='Informe uma data diferente da planejada caso o término da execução tenha sido adiantado/atrasado', verbose_name='Fim da Execução'
                    ),
                ),
                (
                    'info_ind_qualitativo',
                    models.TextField(
                        help_text='Informações sobre os resultados obitidos acerca dos indicadores qualitativos definidos para a atividade: ?',
                        verbose_name='Indicadores Qualitativos',
                    ),
                ),
                (
                    'obs',
                    models.TextField(
                        blank=True,
                        help_text='Descreva e coloque as informações que julgar relevantes na execução da atividade',
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(5000)],
                        verbose_name='Descrição da Atividade Realizada',
                    ),
                ),
                (
                    'justificativa_reprovacao',
                    models.TextField(
                        blank=True,
                        help_text='Informação adicional que você julgar relevante no que diz respeito à reprovação da atividade.',
                        null=True,
                        verbose_name='Justificativa da Reprovação da Atividade',
                    ),
                ),
                ('dt_avaliacao', djtools.db.models.DateFieldPlus(null=True)),
                ('aprovado', models.BooleanField(default=False)),
                ('data_cadastro_execucao', djtools.db.models.DateFieldPlus(null=True)),
                ('arquivo', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/projetos/atividades/comprovantes/')),
                ('avaliador', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')),
                ('etapa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Etapa')),
            ],
            options={'verbose_name': 'Registro de Execução de Atividade', 'verbose_name_plural': 'Registros de Execução de Atividades'},
        ),
        migrations.CreateModel(
            name='RegistroGasto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'mes',
                    models.PositiveIntegerField(
                        choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5'], [6, '6'], [7, '7'], [8, '8'], [9, '9'], [10, '10'], [11, '11'], [12, '12']], verbose_name='Mês'
                    ),
                ),
                (
                    'descricao',
                    models.TextField(
                        help_text='Altere essa informação caso o produto/serviço/bolsa adiquirido(a)/pago(a) não tenha sido o definido na memória de cálculo',
                        max_length=2014,
                        verbose_name='Descrição',
                    ),
                ),
                ('qtd', models.PositiveIntegerField(help_text='Informe o número de ? adiquirido(a)/pago(a) no período (mês/ano) informado', verbose_name='Quantidade')),
                (
                    'valor_unitario',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        help_text='Altere essa informação caso o valor do produto/serviço/bolsa adiquirido(a)/pago(a) no período (mês/ano) informado não tenha sido igual ao definido na memória de cálculo',
                        max_digits=12,
                        verbose_name='Valor Unitário (R$)',
                    ),
                ),
                (
                    'observacao',
                    models.TextField(
                        blank=True,
                        help_text='Insira alguma informação adicional referente à aquisição/pagamento do produto/serviço/bolsa caso ache necessário.',
                        null=True,
                        verbose_name='Observação',
                    ),
                ),
                ('dt_avaliacao', djtools.db.models.DateFieldPlus(null=True)),
                ('aprovado', models.BooleanField(default=False)),
                (
                    'justificativa_reprovacao',
                    models.CharField(
                        blank=True,
                        help_text='Informação adicional que você julgar relevante no que diz respeito à reprovação do gasto.',
                        max_length=250,
                        null=True,
                        verbose_name='Justificativa da Reprovação do Gasto',
                    ),
                ),
                ('arquivo', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/projetos/registrogasto/comprovantes/')),
                ('data_cadastro', djtools.db.models.DateFieldPlus(null=True)),
                ('cotacao_precos', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/projetos/registrogasto/comprovantes/')),
                ('arquivo_termo_cessao', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/projetos/termo_cessao/')),
                ('obs_cessao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('ano', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Ano', verbose_name='Ano')),
                ('avaliador', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')),
                ('desembolso', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.Desembolso')),
                ('item', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.ItemMemoriaCalculo')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(max_length=255, verbose_name='Descrição')),
                (
                    'areatematica',
                    djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.AreaTematica', verbose_name='Área Temática'),
                ),
            ],
            options={'verbose_name': 'Tema', 'verbose_name_plural': 'Temas'},
        ),
        migrations.CreateModel(
            name='TipoBeneficiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Tipo de Beneficiário')),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={'verbose_name': 'Tipo de Beneficiário', 'verbose_name_plural': 'Tipos de Beneficiários'},
        ),
        migrations.CreateModel(
            name='VisitaTecnica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('instituicao_visitada', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Instituição Visitada')),
                ('encaminhamentos', djtools.db.models.CharFieldPlus(max_length=5000, verbose_name='Encaminhamentos')),
                ('nome_contato', djtools.db.models.CharFieldPlus(max_length=150, verbose_name='Nome do Contato')),
                ('telefone_contato', djtools.db.models.CharFieldPlus(max_length=20, verbose_name='Telefone do Contato')),
                ('email_contato', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Email do Contato')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional')),
                ('municipio', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Municipio', verbose_name='Município')),
                ('objetivos', djtools.db.models.ManyToManyFieldPlus(to='projetos.ObjetivoVisitaTecnica')),
                ('participantes', djtools.db.models.ManyToManyFieldPlus(to='rh.Servidor')),
            ],
            options={'verbose_name': 'Visita Técnica', 'verbose_name_plural': 'Visitas Técnicas'},
        ),
        migrations.CreateModel(
            name='ProjetoExtensao',
            fields=[
                (
                    'projeto_ptr',
                    models.OneToOneField(
                        auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projetos.Projeto'
                    ),
                ),
                ('fundamentacao_teorica', ckeditor.fields.RichTextField(blank=True)),
                ('referencias_bibliograficas', ckeditor.fields.RichTextField(blank=True)),
                (
                    'foco_tecnologico',
                    djtools.db.models.ForeignKeyPlus(
                        help_text='O foco tecnológico do projeto deve coincidir com um dos focos tecnológicos de seu respectivo campus. Em caso de dúvida, consultar o Edital',
                        on_delete=django.db.models.deletion.CASCADE,
                        to='projetos.FocoTecnologico',
                        verbose_name='Foco Tecnológico',
                    ),
                ),
            ],
            options={'verbose_name': 'Projeto de Extensão', 'verbose_name_plural': 'Projetos de Extensão'},
            bases=('projetos.projeto',),
        ),
        migrations.AddField(
            model_name='registroconclusaoprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(model_name='recursoprojeto', name='projeto', field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')),
        migrations.AddField(
            model_name='projetohistoricodeenvio', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='projetocancelado', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='projetocancelado',
            name='proximo_projeto',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proximo_projeto', to='projetos.Projeto'),
        ),
        migrations.AddField(model_name='projetoanexo', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')),
        migrations.AddField(
            model_name='projetoanexo',
            name='vinculo_membro_equipe',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Vinculo', verbose_name='Participante'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='area_conhecimento',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.AreaConhecimento', verbose_name='Área do Conhecimento'
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='area_tematica',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.AreaTematica', verbose_name='Área Temática'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='autor_avaliacao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aprovador', to='rh.PessoaFisica', verbose_name='Responsável pela Seleção'
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='autor_pre_avaliacao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pre_avaliador', to='rh.PessoaFisica', verbose_name='Responsável pela Pré-seleção'
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='coordenador',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='projeto_coordenador_set',
                to='rh.PessoaFisica',
                verbose_name='Coordenador do Projeto',
            ),
        ),
        migrations.AddField(
            model_name='projeto', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital', verbose_name='Edital')
        ),
        migrations.AddField(
            model_name='projeto',
            name='focotecnologico',
            field=djtools.db.models.ForeignKeyPlus(
                help_text='O foco tecnológico do projeto deve coincidir com um dos focos tecnológicos de seu respectivo campus. Em caso de dúvida, consultar o Edital',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='projetos.FocoTecnologico',
                verbose_name='Foco Tecnológico',
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='inativado_por',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projeto_inativado_por', to='rh.Servidor', verbose_name='Inativado por'
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='monitor',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitor', to='rh.PessoaFisica', verbose_name='Responsável pelo Monitoramento'
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='nucleo_extensao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.NucleoExtensao', verbose_name='Núcleo de Extensão e Prática Profissional'
            ),
        ),
        migrations.AddField(
            model_name='projeto', name='participantes', field=models.ManyToManyField(through='projetos.Participacao', to='rh.PessoaFisica', verbose_name='Participantes')
        ),
        migrations.AddField(
            model_name='projeto',
            name='tema',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.Tema', verbose_name='Tema'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='vinculo_autor_avaliacao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vinculo_aprovador', to='comum.Vinculo', verbose_name='Responsável pela Seleção'
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='vinculo_autor_pre_avaliacao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='pre_vinculo_avaliador',
                to='comum.Vinculo',
                verbose_name='Responsável pela Pré-seleção',
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='vinculo_coordenador',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='projeto_vinculo_coordenador_set',
                to='comum.Vinculo',
                verbose_name='Coordenador do Projeto',
            ),
        ),
        migrations.AddField(
            model_name='projeto',
            name='vinculo_monitor',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='vinculo_monitor',
                to='comum.Vinculo',
                verbose_name='Responsável pelo Monitoramento',
            ),
        ),
        migrations.AddField(
            model_name='participacao',
            name='projeto',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto', verbose_name='Projeto'),
        ),
        migrations.AddField(
            model_name='participacao',
            name='vinculo_pessoa',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projetos_vinculo_extensao', to='comum.Vinculo', verbose_name='Participante'
            ),
        ),
        migrations.AddField(
            model_name='parametroprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='ofertaprojetoportema',
            name='tema',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.Tema', verbose_name='Tema'),
        ),
        migrations.AddField(
            model_name='meta', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto', verbose_name='Projeto')
        ),
        migrations.AddField(
            model_name='licaoaprendida', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='itemmemoriacalculo', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='itemavaliacao',
            name='recurso',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.RecursoProjeto', verbose_name='Recurso que Motivou a Alteração'
            ),
        ),
        migrations.AddField(
            model_name='itemavaliacao',
            name='responsavel_alteracao',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='responsavel_alteracao_nota',
                to='rh.PessoaFisica',
                verbose_name='Responsável pela Alteração',
            ),
        ),
        migrations.AddField(
            model_name='itemavaliacao',
            name='vinculo_responsavel_alteracao',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='vinculo_responsavel_alteracao_nota',
                to='comum.Vinculo',
                verbose_name='Responsável pela Alteração',
            ),
        ),
        migrations.AddField(
            model_name='historicoorientacaoprojeto',
            name='orientado',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='orientado_projeto', to='projetos.Participacao'),
        ),
        migrations.AddField(
            model_name='historicoorientacaoprojeto',
            name='orientador',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='orientador_projeto', to='projetos.Participacao'),
        ),
        migrations.AddField(
            model_name='historicoorientacaoprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='historicoequipe', name='participante', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Participacao')
        ),
        migrations.AddField(
            model_name='historicoequipe', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='historicoalteracaoperiodoprojeto',
            name='projeto',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_historicodata', to='projetos.Projeto'),
        ),
        migrations.AddField(
            model_name='historicoalteracaoperiodoprojeto',
            name='registrado_por',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_registradopor_historicodata', to='rh.PessoaFisica'),
        ),
        migrations.AddField(
            model_name='historicoalteracaoperiodoprojeto',
            name='vinculo_registrado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projetos_vinculo_registradopor_historicodata', to='comum.Vinculo'),
        ),
        migrations.AddField(model_name='fotoprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')),
        migrations.AddField(
            model_name='extratomensalprojeto', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='etapa', name='integrantes', field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='integrantes_set', to='projetos.Participacao')
        ),
        migrations.AddField(
            model_name='etapa', name='meta', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Meta', verbose_name='Meta')
        ),
        migrations.AddField(
            model_name='etapa',
            name='responsavel',
            field=djtools.db.models.ForeignKeyPlus(
                on_delete=django.db.models.deletion.CASCADE, related_name='participacao_responsavel', to='projetos.Participacao', verbose_name='Responsável pela Atividade'
            ),
        ),
        migrations.AddField(model_name='edital', name='temas', field=djtools.db.models.ManyToManyFieldPlus(blank=True, to='projetos.Tema')),
        migrations.AddField(
            model_name='desembolso',
            name='item',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetos.ItemMemoriaCalculo', verbose_name='Mémoria de Cálculo'),
        ),
        migrations.AddField(
            model_name='desembolso',
            name='projeto',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto', verbose_name='Projeto'),
        ),
        migrations.AddField(
            model_name='criterioavaliacao', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')
        ),
        migrations.AddField(model_name='comissaoedital', name='edital', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Edital')),
        migrations.AddField(
            model_name='comissaoedital',
            name='membros',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='membros_comissao_edital', to='rh.PessoaFisica', verbose_name='Membros'),
        ),
        migrations.AddField(
            model_name='comissaoedital',
            name='vinculos_membros',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='vinculos_membros_comissao_edital', to='comum.Vinculo', verbose_name='Membros'),
        ),
        migrations.AddField(
            model_name='caracterizacaobeneficiario', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='caracterizacaobeneficiario',
            name='tipo_beneficiario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.TipoBeneficiario', verbose_name='Tipo de Beneficiário'),
        ),
        migrations.AddField(
            model_name='avaliadorindicado', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')
        ),
        migrations.AddField(
            model_name='avaliadorindicado',
            name='vinculo',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Vinculo', verbose_name='Avaliador'),
        ),
        migrations.AddField(
            model_name='avaliacaoaluno',
            name='participacao',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='projetos_avaliacaoaluno_participante', to='projetos.Participacao'),
        ),
        migrations.AddField(
            model_name='avaliacaoaluno',
            name='vinculo_avaliado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vinculo_avaliador_avaliacao_aluno', to='comum.Vinculo'),
        ),
        migrations.AddField(model_name='avaliacao', name='projeto', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')),
        migrations.AddField(
            model_name='avaliacao',
            name='vinculo',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Vinculo', verbose_name='Avaliador'),
        ),
        migrations.AlterIndexTogether(name='ofertaprojeto', index_together=set([('edital', 'uo')])),
        migrations.AlterUniqueTogether(name='caracterizacaobeneficiario', unique_together=set([('tipo_beneficiario', 'projeto')])),
        migrations.AlterUniqueTogether(name='avaliacao', unique_together=set([('projeto', 'vinculo')])),
    ]
