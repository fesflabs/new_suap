# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-05-17 09:35
from __future__ import unicode_literals

from django.db import migrations


def atualizar_modelos_com_vinculo(apps, schema):
    Vinculo = apps.get_model('comum.Vinculo')
    PrestadorServico = apps.get_model('comum.PrestadorServico')
    Aluno = apps.get_model('edu.Aluno')
    Servidor = apps.get_model('rh.Servidor')
    AtividadeGrupo = apps.get_model('saude.AtividadeGrupo')
    AnexoPsicologia = apps.get_model('saude.AnexoPsicologia')
    HorarioAtendimento = apps.get_model('saude.HorarioAtendimento')
    BloqueioAtendimentoSaude = apps.get_model('saude.BloqueioAtendimentoSaude')
    RegistroAdministrativo = apps.get_model('saude.RegistroAdministrativo')
    DocumentoProntuario = apps.get_model('saude.DocumentoProntuario')
    PessoaExterna = apps.get_model('rh.PessoaExterna')
    Odontograma = apps.get_model('saude.Odontograma')
    Prontuario = apps.get_model('saude.Prontuario')

    vinculos = Vinculo.objects.all()
    dic = {}
    for vinculo in vinculos:
        dic[vinculo.pessoa_id] = vinculo.pk

    for servidor in Servidor.objects.all():
        atividades = AtividadeGrupo.objects.filter(responsaveis__pk=servidor.pk)
        for atividade in atividades:
            atividade.vinculos_responsaveis.add(dic[servidor.id])

        AnexoPsicologia.objects.filter(cadastrado_por__pk=servidor.pk).update(cadastrado_por_vinculo=dic[servidor.id])
        HorarioAtendimento.objects.filter(cadastrado_por__pk=servidor.pk).update(cadastrado_por_vinculo=dic[servidor.id])
        HorarioAtendimento.objects.filter(paciente__pk=servidor.pk).update(vinculo_paciente=dic[servidor.id])
        BloqueioAtendimentoSaude.objects.filter(paciente__pk=servidor.pk).update(vinculo_paciente=dic[servidor.id])
        BloqueioAtendimentoSaude.objects.filter(profissional__pk=servidor.pk).update(vinculo_profissional=dic[servidor.id])
        RegistroAdministrativo.objects.filter(profissional__pk=servidor.pk).update(vinculo_profissional=dic[servidor.id])
        DocumentoProntuario.objects.filter(cadastrado_por__pk=servidor.pk).update(cadastrado_por_vinculo=dic[servidor.id])
        Odontograma.objects.filter(atendido_por__pk=servidor.pk).update(atendido_por_vinculo=dic[servidor.id])
        Prontuario.objects.filter(cadastrado_por__pk=servidor.pk).update(cadastrado_por_vinculo=dic[servidor.id])
        Prontuario.objects.filter(pessoa_fisica__pk=servidor.pk).update(vinculo=dic[servidor.id])

    for prestador in PrestadorServico.objects.all():
        atividades = AtividadeGrupo.objects.filter(responsaveis__pk=prestador.pk)
        for atividade in atividades:
            atividade.vinculos_responsaveis.add(dic[prestador.id])

        AnexoPsicologia.objects.filter(cadastrado_por__pk=prestador.pk).update(cadastrado_por_vinculo=dic[prestador.id])
        HorarioAtendimento.objects.filter(cadastrado_por__pk=prestador.pk).update(cadastrado_por_vinculo=dic[prestador.id])
        HorarioAtendimento.objects.filter(paciente__pk=prestador.pk).update(vinculo_paciente=dic[prestador.id])
        BloqueioAtendimentoSaude.objects.filter(paciente__pk=prestador.pk).update(vinculo_paciente=dic[prestador.id])
        BloqueioAtendimentoSaude.objects.filter(profissional__pk=prestador.pk).update(vinculo_profissional=dic[prestador.id])
        RegistroAdministrativo.objects.filter(profissional__pk=prestador.pk).update(vinculo_profissional=dic[prestador.id])
        DocumentoProntuario.objects.filter(cadastrado_por__pk=prestador.pk).update(cadastrado_por_vinculo=dic[prestador.id])
        Odontograma.objects.filter(atendido_por__pk=prestador.pk).update(atendido_por_vinculo=dic[prestador.id])
        Prontuario.objects.filter(cadastrado_por__pk=prestador.pk).update(cadastrado_por_vinculo=dic[prestador.id])
        Prontuario.objects.filter(pessoa_fisica__pk=prestador.pk).update(vinculo=dic[prestador.id])

    ids = set()
    ids.update(AtividadeGrupo.objects.all().values_list('responsaveis__id', flat=True))
    ids.update(HorarioAtendimento.objects.all().values_list('paciente_id', flat=True))
    ids.update(BloqueioAtendimentoSaude.objects.all().values_list('paciente_id', flat=True))
    ids.update(Prontuario.objects.all().values_list('pessoa_fisica_id', flat=True))

    for aluno in Aluno.objects.filter(pessoa_fisica__in=ids):

        atividades = AtividadeGrupo.objects.filter(responsaveis__pk=aluno.pessoa_fisica.pk)
        for atividade in atividades:
            atividade.vinculos_responsaveis.add(dic[aluno.pessoa_fisica.id])

        HorarioAtendimento.objects.filter(paciente__pk=aluno.pessoa_fisica.pk).update(vinculo_paciente=dic[aluno.pessoa_fisica.id])
        BloqueioAtendimentoSaude.objects.filter(paciente__pk=aluno.pessoa_fisica.pk).update(vinculo_paciente=dic[aluno.pessoa_fisica.id])
        Prontuario.objects.filter(pessoa_fisica__pk=aluno.pessoa_fisica.pk).update(vinculo=dic[aluno.pessoa_fisica.id])

    for externa in PessoaExterna.objects.filter(pessoa_fisica__in=ids):
        atividades = AtividadeGrupo.objects.filter(responsaveis__pk=externa.pessoa_fisica.pk)
        for atividade in atividades:
            atividade.vinculos_responsaveis.add(dic[externa.pessoa_fisica.id])
        Odontograma.objects.filter(atendido_por__pk=externa.pessoa_fisica.pk).update(atendido_por_vinculo=dic[externa.pessoa_fisica.id])
        Prontuario.objects.filter(cadastrado_por__pk=externa.pessoa_fisica.pk).update(cadastrado_por_vinculo=dic[externa.pessoa_fisica.id])
        Prontuario.objects.filter(pessoa_fisica__pk=externa.pessoa_fisica.pk).update(vinculo=dic[externa.pessoa_fisica.id])


class Migration(migrations.Migration):

    dependencies = [('saude', '0005_cria_vinculos_pessoa_externa')]

    operations = [migrations.RunPython(atualizar_modelos_com_vinculo)]
