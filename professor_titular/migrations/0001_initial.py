# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 15:05


from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [('comum', '0002_auto_20190814_1443'), ('processo_eletronico', '0001_initial'), ('rh', '0001_initial'), ('protocolo', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='Arquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('diretorio', djtools.db.models.CharFieldPlus(max_length=255, unique=True)),
                ('nota_pretendida', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12, null=True)),
                ('qtd_itens', models.IntegerField(null=True)),
                ('data_referencia', models.DateField(help_text='da', null=True, verbose_name='Data de referência')),
                ('tamanho', models.BigIntegerField()),
                ('descricao', models.TextField(blank=True)),
            ],
            options={'ordering': ('criterio__artigo', 'criterio__nome', 'data_referencia')},
        ),
        migrations.CreateModel(
            name='ArquivosExigidos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('diretorio', djtools.db.models.CharFieldPlus(max_length=255, unique=True)),
                ('tamanho', models.BigIntegerField()),
                (
                    'tipo',
                    models.IntegerField(
                        choices=[
                            [1, 'Título de Doutor'],
                            [2, 'Termo de Avaliação de Desempenho'],
                            [3, 'Declaração DIGPE'],
                            [4, 'Diploma de Graduação para Ingresso em Professor de EBTT'],
                        ]
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[[0, 'Em Avaliação'], [1, 'Finalizada'], [3, 'Interrompida'], [4, 'Desistência']], verbose_name='Situação da Avaliação')),
                ('motivo_indeferimento', models.CharField(max_length=2000, verbose_name='Motivo do Indeferimento')),
                (
                    'tipo_desistencia',
                    models.IntegerField(
                        blank=True, choices=[[1, 'Relacionado ao Processo em Análise'], [2, 'De Ordem Pessoal'], [3, 'De Ordem Profissional'], [4, 'Outros']], null=True
                    ),
                ),
                ('motivo_desistencia', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Motivo da Desistência')),
                (
                    'pontuacao_final_individual',
                    djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Pontuação Final Individual do Avaliador'),
                ),
                ('data_finalizacao', djtools.db.models.DateTimeFieldPlus(blank=True, default=None, null=True, verbose_name='Data da Finalização da Avaliação')),
                ('avaliacao_paga', models.BooleanField(default=False)),
                ('data_pagamento', djtools.db.models.DateTimeFieldPlus(blank=True, default=None, null=True, verbose_name='Data do Pagamento')),
                (
                    'tipo_avaliador',
                    djtools.db.models.CharFieldPlus(choices=[['avaliador_interno', 'Avaliador Interno'], ['avaliador_externo', 'Avaliador Externo']], max_length=255, null=True),
                ),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='avaliacao_avaliador_titular', to='rh.Avaliador', verbose_name='Avaliador'
                    ),
                ),
            ],
            options={'verbose_name': 'Avaliação', 'verbose_name_plural': 'Avaliações'},
        ),
        migrations.CreateModel(
            name='AvaliacaoItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_referencia', models.DateField(blank=True, null=True, verbose_name='Data de Referência Validada')),
                ('qtd_itens_validado', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de Itens Validados')),
                ('justificativa', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Justificativa da Avaliação')),
                ('arquivo', djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Arquivo', verbose_name='Arquivo')),
                (
                    'avaliacao',
                    djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Avaliacao', verbose_name='Avaliação'),
                ),
            ],
            options={'verbose_name': 'Avaliação do Item', 'verbose_name_plural': 'Avaliações dos Itens'},
        ),
        migrations.CreateModel(
            name='CategoriaMemorialDescritivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('indice', djtools.db.models.CharFieldPlus(max_length=10)),
            ],
            options={'verbose_name': 'Categoria Memorial descritivo', 'verbose_name_plural': 'Categorias Memoriais Descritivos', 'ordering': ('nome',)},
        ),
        migrations.CreateModel(
            name='Criterio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artigo', models.TextField()),
                ('nome', models.TextField()),
                ('descricao', models.TextField(null=True, verbose_name='Descrição')),
                ('status', models.IntegerField(choices=[[0, 'Ativo'], [1, 'Inativo']])),
                ('pontos', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12)),
                ('num_artigo', models.IntegerField()),
                ('inciso', djtools.db.models.CharFieldPlus(max_length=255)),
                ('alinea', djtools.db.models.CharFieldPlus(max_length=255)),
                (
                    'categoria_memorial_descritivo',
                    djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='professor_titular.CategoriaMemorialDescritivo'),
                ),
            ],
            options={'verbose_name': 'Critério', 'verbose_name_plural': 'Critérios', 'ordering': ('num_artigo', 'inciso', 'alinea')},
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('percentual', djtools.db.models.DecimalFieldPlus(decimal_places=2, help_text='Percentual do grupo que compõe a pontuação mínima', max_digits=12)),
            ],
            options={'verbose_name': 'Grupo de indicadores', 'verbose_name_plural': 'Grupos de indicadores', 'ordering': ('nome',)},
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('descricao', models.TextField()),
                ('grupo', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Grupo')),
            ],
            options={'verbose_name': 'Indicador', 'verbose_name_plural': 'Indicadores', 'ordering': ('pk',)},
        ),
        migrations.CreateModel(
            name='PontuacaoMinima',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_minima_grupos', models.PositiveIntegerField(null=True)),
                ('ano', models.IntegerField(null=True)),
                (
                    'pontuacao_exigida',
                    djtools.db.models.DecimalFieldPlus(
                        blank=True, decimal_places=2, help_text='Pontuação mínima necessária para aprovação no ano em questão', max_digits=12, null=True
                    ),
                ),
                (
                    'grupo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Grupo', verbose_name='grupo associado à pontuação mínima'
                    ),
                ),
            ],
            options={'verbose_name': 'Pontuação mínima', 'verbose_name_plural': 'Pontuações mínimas', 'ordering': ('ano',)},
        ),
        migrations.CreateModel(
            name='ProcessoAvaliador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', djtools.db.models.DateTimeFieldPlus(auto_now_add=True)),
                ('data_convite', djtools.db.models.DateTimeFieldPlus(blank=True, default=None, null=True, verbose_name='Data do Convite')),
                ('data_aceite', djtools.db.models.DateTimeFieldPlus(blank=True, default=None, null=True, verbose_name='Data do Aceite')),
                (
                    'status',
                    models.IntegerField(
                        choices=[
                            [0, 'Em espera'],
                            [1, 'Aguardando aceite'],
                            [2, 'Aguardando avaliação'],
                            [3, 'Avaliação finalizada'],
                            [4, 'Excedeu tempo de aceite'],
                            [5, 'Excedeu tempo de avaliação'],
                            [6, 'Rejeitado pelo avaliador'],
                        ],
                        verbose_name='Situação do Avaliador no Processo',
                    ),
                ),
                (
                    'tipo_avaliador',
                    djtools.db.models.CharFieldPlus(choices=[['avaliador_interno', 'Avaliador Interno'], ['avaliador_externo', 'Avaliador Externo']], max_length=255),
                ),
                (
                    'tipo_recusa',
                    models.IntegerField(
                        blank=True, choices=[[1, 'Relacionado ao Processo em Análise'], [2, 'De Ordem Pessoal'], [3, 'De Ordem Profissional'], [4, 'Outros']], null=True
                    ),
                ),
                ('motivo_recusa', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Motivo da Recusa')),
                (
                    'avaliador',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processo_avaliador_titular', to='rh.Avaliador', verbose_name='Avaliador'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Avaliador do Processo',
                'verbose_name_plural': 'Avaliadores do Processo',
                'permissions': (('pode_avaliar_processotitular', 'Pode avaliar Processo Titular'), ('pode_atualizar_dados_cadastrais', 'Pode atualizar dados cadastrais')),
            },
        ),
        migrations.CreateModel(
            name='ProcessoTitular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(blank=True, null=True, verbose_name='Número do Processo')),
                ('pontuacao', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Pontuação Validada')),
                ('pontuacao_pretendida', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Pontuação Requerida')),
                ('pontuacao_pretendida_grupo_A', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_B', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_C', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_D', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_E', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_F', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_G', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('pontuacao_pretendida_grupo_H', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    'status',
                    models.IntegerField(
                        choices=[
                            [0, 'Deferido'],
                            [1, 'Indeferido'],
                            [2, 'Aguardando validação CPPD'],
                            [3, 'Aguardando envio para CPPD'],
                            [4, 'Aguardando avaliadores'],
                            [5, 'Aguardando ajustes do usuário'],
                            [6, 'Processo rejeitado'],
                            [7, 'Aguardando nova validação'],
                            [8, 'Aguardando aceite dos avaliadores'],
                            [9, 'Em avaliação'],
                            [10, 'Ciente do resultado'],
                            [11, 'Aguardando ciência'],
                        ],
                        verbose_name='Situação',
                    ),
                ),
                ('introducao_relatorio_descritivo', models.TextField(blank=True)),
                ('conclusao_relatorio_descritivo', models.TextField(blank=True)),
                ('itinerario_formacao', models.TextField(blank=True)),
                ('itinerario_formacao_aperfeicoamento_titulacao', models.TextField(blank=True)),
                ('atividade_ensino_orientacao', models.TextField(blank=True)),
                ('atividade_pesquisa_dev_tec_inovacao', models.TextField(blank=True)),
                ('atividade_extensao', models.TextField(blank=True)),
                ('participacao_processo_avaliacao', models.TextField(blank=True)),
                ('revista_cientifica', models.TextField(blank=True)),
                ('membro_comissao_carater_pedagogico', models.TextField(blank=True)),
                ('membro_comissao_elaboracao_ou_revisao_projeto_pedagogico', models.TextField(blank=True)),
                ('organizacao_eventos', models.TextField(blank=True)),
                ('membro_comissao_carater_nao_pedagogico', models.TextField(blank=True)),
                ('exercicio_cargo_direcao_coordenacao', models.TextField(blank=True)),
                ('atividade_aperfeicoamento', models.TextField(blank=True)),
                ('atividade_representacao', models.TextField(blank=True)),
                ('atuacao_docente', models.TextField(blank=True)),
                ('producao_cademica', models.TextField(blank=True)),
                ('prestacao_servicos', models.TextField(blank=True)),
                ('atividade_adm', models.TextField(blank=True)),
                ('titulos_homenagens', models.TextField(blank=True)),
                ('ano', models.IntegerField()),
                ('ano_envio_cppd', models.IntegerField(null=True)),
                ('data_concessao_titulacao_doutor', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Concessão')),
                ('data_progressaoD404', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Progressão/Enquadramento para D404')),
                ('data_avaliacao_desempenho', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Avaliação de Desempenho')),
                ('data_graduacao_EBTT', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Graduação para Ingresso no Cargo de Professor de EBTT')),
                ('data_ciencia', djtools.db.models.DateTimeFieldPlus(blank=True, default=None, null=True, verbose_name='Data da Ciência')),
                (
                    'concorda_deferimento',
                    models.IntegerField(
                        blank=True,
                        choices=[[1, 'Concorda com o resultado da avaliação(deferimento/indeferimento)'], [2, 'Discorda do resultado da avaliação(deferimento/indeferimento)']],
                        null=True,
                        verbose_name='Concorda com o deferimento',
                    ),
                ),
                (
                    'concorda_data_retroatividade',
                    models.IntegerField(
                        blank=True,
                        choices=[[1, 'Concorda com a data de retroatividade concedida'], [2, 'Discorda da data de retroatividade concedida']],
                        null=True,
                        verbose_name='Concorda com a data de retroatividade',
                    ),
                ),
                ('data_finalizacao_processo', djtools.db.models.DateTimeFieldPlus(blank=True, default=None, null=True, verbose_name='Data de Finalização do Processo')),
                ('assinatura_requerimento', models.TextField(blank=True, default='', null=True, verbose_name='Assinatura do requerimento')),
                (
                    'processo_eletronico',
                    djtools.db.models.ForeignKeyPlus(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='processo_eletronico.Processo'),
                ),
                ('protocolo', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='protocolo.Processo')),
                ('servidor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')),
            ],
            options={
                'verbose_name': 'Processo Titular',
                'verbose_name_plural': 'Processos Titular',
                'permissions': (('pode_validar_processotitular', 'Pode validar Processo Titular'),),
            },
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, unique=True)),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=50)),
            ],
            options={'verbose_name': 'Unidade', 'verbose_name_plural': 'Unidades'},
        ),
        migrations.CreateModel(
            name='ValidacaoCPPD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_conclusao_titulacao_validada', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Conclusão Validada')),
                ('data_graduacao_ebtt_validada', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Graduação para Ingresso no Cargo de Professor de EBTT Validada')),
                ('data_progressao_validada', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Progressão Validada')),
                ('data_avaliacao_desempenho_validada', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Avaliação de Desempenho Validada')),
                ('acao', models.IntegerField(choices=[[0, 'Aceitar'], [1, 'Devolver'], [2, 'Rejeitar']])),
                ('motivo_rejeicao', models.CharField(max_length=2000, verbose_name='Motivo da Rejeição')),
                ('data', djtools.db.models.DateTimeFieldPlus(auto_now_add=True)),
                ('ajustado', models.BooleanField(default=False)),
                (
                    'processo',
                    djtools.db.models.ForeignKeyPlus(
                        blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.ProcessoTitular', verbose_name='Processo Titular'
                    ),
                ),
                ('validador', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='validador', to='rh.Servidor')),
            ],
            options={'verbose_name': 'Validação CPPD', 'verbose_name_plural': 'Validações CPPD'},
        ),
        migrations.AddField(
            model_name='processoavaliador',
            name='processo',
            field=djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.ProcessoTitular', verbose_name='ProcessoTitular'),
        ),
        migrations.AddField(
            model_name='processoavaliador',
            name='vinculo_responsavel_cadastro',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Vinculo'),
        ),
        migrations.AddField(
            model_name='criterio', name='indicador', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Indicador')
        ),
        migrations.AddField(
            model_name='criterio',
            name='unidade',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Unidade', verbose_name='Unidade do critério'),
        ),
        migrations.AddField(
            model_name='avaliacao',
            name='processo',
            field=djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.ProcessoTitular', verbose_name='ProcessoTitular'),
        ),
        migrations.AddField(
            model_name='arquivosexigidos',
            name='processo',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.ProcessoTitular', verbose_name='Processo Associado ao Arquivo'
            ),
        ),
        migrations.AddField(
            model_name='arquivo',
            name='criterio',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.Criterio', verbose_name='critério associado ao arquivo'
            ),
        ),
        migrations.AddField(
            model_name='arquivo',
            name='processo',
            field=djtools.db.models.ForeignKeyPlus(
                blank=True, on_delete=django.db.models.deletion.CASCADE, to='professor_titular.ProcessoTitular', verbose_name='processo associado ao arquivo'
            ),
        ),
        migrations.AlterUniqueTogether(name='processoavaliador', unique_together=set([('processo', 'avaliador')])),
        migrations.AlterUniqueTogether(name='pontuacaominima', unique_together=set([('ano', 'grupo')])),
    ]
