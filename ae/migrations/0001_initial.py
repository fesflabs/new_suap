# Generated by Django 1.11.23 on 2019-08-14 14:54


from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models
import djtools.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [('rh', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='AcaoEducativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('data_inicio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início')),
                ('data_termino', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Término')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Cancelada')),
                ('cancelada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Cancelada em')),
            ],
            options={'verbose_name': 'Ação Educativa', 'verbose_name_plural': 'Ações Educativas'},
        ),
        migrations.CreateModel(
            name='AgendamentoRefeicao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateTimeFieldPlus()),
                ('tipo_refeicao', models.CharField(choices=[('CAF', 'Café da manhã'), ('ALM', 'Almoço'), ('JAN', 'Jantar')], max_length=3, verbose_name='Tipo de Refeição')),
            ],
            options={'verbose_name': 'Agendamento de Refeições', 'verbose_name_plural': 'Agendamentos de Refeições'},
        ),
        migrations.CreateModel(
            name='AtendimentoSetor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data de Início')),
                ('data_termino', models.DateTimeField(blank=True, null=True, verbose_name='Data de Fim')),
                ('valor', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Total Utilizado')),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('numero_processo', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Número do Processo')),
            ],
            options={'verbose_name': 'Auxílio', 'verbose_name_plural': 'Auxílios', 'permissions': (('pode_visualizar_auxilios', 'Pode visualizar auxílios'),)},
        ),
        migrations.CreateModel(
            name='AtividadeDiversa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início')),
                ('data_termino', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Término')),
                ('observacao', models.TextField(verbose_name='Observação')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Cancelada')),
                ('cancelada_em', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Cancelada em')),
            ],
            options={'verbose_name': 'Atividade Diversa', 'verbose_name_plural': 'Atividades Diversas'},
        ),
        migrations.CreateModel(
            name='BeneficioGovernoFederal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Benefício do Governo Federal', 'verbose_name_plural': 'Benefícios de Governo Federal'},
        ),
        migrations.CreateModel(
            name='Caracterizacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possui_necessidade_especial', models.BooleanField(default=False, verbose_name='Você é uma pessoa com deficiência/necessidade educacional especial?')),
                ('qtd_filhos', models.PositiveIntegerField(default=0, null=True, verbose_name='Quantidade de Filhos')),
                (
                    'aluno_exclusivo_rede_publica',
                    models.BooleanField(
                        default=False,
                        help_text='Marque caso possua histórico escolar integral a partir do 6° ano do Ensino Fundamental até o 3° ano do Ensino Médio exclusivamente em escola da rede pública do país.',
                        verbose_name='Aluno da Rede Pública',
                    ),
                ),
                (
                    'ensino_fundamental_conclusao',
                    models.PositiveIntegerField(help_text='Ano em que terminou o Ensino Fundamental.', verbose_name='Ano de conclusão do Ensino Fundamental'),
                ),
                (
                    'ensino_medio_conclusao',
                    models.PositiveIntegerField(
                        blank=True, help_text='Ano em que terminou o Ensino Médio, caso já o tenha terminado.', null=True, verbose_name='Ano de conclusão do Ensino Médio'
                    ),
                ),
                ('ficou_tempo_sem_estudar', models.NullBooleanField(help_text='Marque caso tenha permanecido algum tempo sem estudar.', verbose_name='Ausência Escolar')),
                (
                    'tempo_sem_estudar',
                    models.PositiveIntegerField(
                        help_text='Informe quantos anos ficou sem estudar caso tenha marcado a opção anterior.', null=True, verbose_name='Período de Ausência'
                    ),
                ),
                ('possui_conhecimento_idiomas', models.NullBooleanField(help_text='Marque caso possua conhecimento em outros idiomas.', verbose_name='Conhecimento em Idiomas')),
                (
                    'possui_conhecimento_informatica',
                    models.NullBooleanField(help_text='Marque caso possua conhecimento em informática.', verbose_name='Conhecimento em Informática'),
                ),
                ('nome_escola_ensino_fundamental', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nome da escola que fez o Ensino Fundamental')),
                ('nome_escola_ensino_medio', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nome da escola que fez o Ensino Médio')),
                (
                    'renda_bruta_familiar',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        help_text='Considerar a soma de todos os rendimentos mensais da família sem os descontos.',
                        max_digits=12,
                        verbose_name='Renda Bruta Familiar R$',
                    ),
                ),
                (
                    'qtd_pessoas_domicilio',
                    models.PositiveIntegerField(help_text='Número de pessoas que moram na sua residência (incluindo você).', verbose_name='Número de pessoas no domicílio'),
                ),
                ('local_acesso_internet', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Local de Acesso à Internet')),
                ('quantidade_computadores', models.PositiveIntegerField(null=True, verbose_name='Quantidade de Computadores Desktop que possui')),
                ('quantidade_notebooks', models.PositiveIntegerField(null=True, verbose_name='Quantidade de Notebooks que possui')),
                ('quantidade_netbooks', models.PositiveIntegerField(null=True, verbose_name='Quantidade de Netbooks que possui')),
                ('quantidade_smartphones', models.PositiveIntegerField(null=True, verbose_name='Quantidade de Smartphones que possui')),
                ('renda_per_capita', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Renda per Capita')),
            ],
            options={
                'permissions': (
                    ('pode_ver_relatorio_caracterizacao_todos', 'Pode ver relatório caraterização social todos'),
                    ('pode_ver_relatorio_caracterizacao_do_campus', 'Pode ver relatório caraterização social do campus'),
                    ('ver_relatorio_alunos_ativos_sem_caracterizacao_todos', 'Ver relatório alunos sem caracterização todos'),
                    ('ver_relatorio_alunos_ativos_sem_caracterizacao_do_campus', 'Ver relatório alunos sem caracterização campus'),
                    ('pode_importar_caracterizacao', 'Pode importar caracterização'),
                    ('save_caracterizacao_todos', 'Ver relatório alunos sem caracterização todos'),
                    ('save_caracterizacao_do_campus', 'Ver relatório alunos sem caracterização campus'),
                    ('ver_menu_alunos', 'Pode ver os menus de listagem de alunos'),
                )
            },
        ),
        migrations.CreateModel(
            name='CategoriaAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Categoria de Alunos para Alimentação', 'verbose_name_plural': 'Categorias de Alunos para Alimentação', 'ordering': ['nome']},
        ),
        migrations.CreateModel(
            name='CategoriaBolsa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Nome')),
                ('descricao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Descrição')),
                (
                    'tipo_bolsa',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('extensão', 'Extensão'), ('iniciação científica', 'Iniciação Científica')],
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name='Tipo de Bolsa',
                    ),
                ),
                ('vinculo_programa', models.BooleanField(default=False, verbose_name='Vínculo a Programa')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={'verbose_name': 'Categoria de Bolsa', 'verbose_name_plural': 'Categorias de Bolsas', 'ordering': ('nome',)},
        ),
        migrations.CreateModel(
            name='CompanhiaDomiciliar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Companhia Domiciliar', 'verbose_name_plural': 'Companhias Domiciliares'},
        ),
        migrations.CreateModel(
            name='ContribuinteRendaFamiliar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Contribuinte de Renda Familiar', 'verbose_name_plural': 'Contribuintes de Renda Familiar'},
        ),
        migrations.CreateModel(
            name='DadosBancarios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'banco',
                    models.CharField(
                        choices=[
                            ('BANCO DO BRASIL', '001 - Banco do Brasil'),
                            ('CAIXA ECONÔMICA', '104 - Caixa Econômica'),
                            ('BRADESCO', '237 - Bradesco'),
                            ('ITAU', '341- Itaú'),
                            ('SANTANDER', '033 - Santander'),
                            ('BANCO DO NORDESTE', '004 - Banco do Nordeste'),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name='Banco',
                    ),
                ),
                ('numero_agencia', models.CharField(help_text='Ex: 3293-X', max_length=50, null=True, verbose_name='Número da Agência')),
                (
                    'tipo_conta',
                    models.CharField(choices=[('Conta Corrente', 'Conta Corrente'), ('Conta Poupança', 'Conta Poupança')], max_length=50, null=True, verbose_name='Tipo da Conta'),
                ),
                ('numero_conta', models.CharField(help_text='Ex: 23384-6', max_length=50, null=True, verbose_name='Número da Conta')),
                ('operacao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Operação')),
                ('prioritario_servico_social', models.BooleanField(default=False, verbose_name='Prioritário para Serviço Social')),
            ],
            options={'verbose_name': 'Dados Bancários', 'verbose_name_plural': 'Dados Bancários'},
        ),
        migrations.CreateModel(
            name='DadosFincanceiros',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('despesa_agua', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('despesa_energia', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('despesa_telefone', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('despesa_aluguel', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('despesa_condominio', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('despesa_financiamento_casa', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('despesa_outras', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_aluno', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_pai', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_mae', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_tios', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_avos', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_parentes', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('remuneracao_outros', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12)),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
            ],
            options={'verbose_name': 'Dados Financeiros', 'verbose_name_plural': 'Dados Financeiros'},
        ),
        migrations.CreateModel(
            name='DadosRelatorioGrafico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', djtools.db.models.CharFieldPlus(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('categoria', djtools.db.models.CharFieldPlus(blank=True, max_length=255)),
            ],
            options={'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='DatasLiberadasFaltasAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('recorrente', models.BooleanField(default=False, help_text='Selecione para as datas que serão abonadas todos os anos, como feriados nacionais.')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data de Cadastro')),
            ],
            options={'verbose_name': 'Liberação de Registros de Faltas', 'verbose_name_plural': 'Liberações de Registros de Faltas'},
        ),
        migrations.CreateModel(
            name='DatasRecessoFerias',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('data', models.DateField())],
            options={'verbose_name': 'Data de Recesso/Férias', 'verbose_name_plural': 'Datas de Recesso/Férias'},
        ),
        migrations.CreateModel(
            name='DemandaAluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                ('descricao', models.TextField(verbose_name='Descrição')),
                (
                    'custeio',
                    models.CharField(
                        blank=True,
                        choices=[('Institucional', 'Institucional'), ('Parcerias', 'Parcerias'), ('Sem custeio', 'Sem custeio')],
                        max_length=50,
                        null=True,
                        verbose_name='Custeio',
                    ),
                ),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={'verbose_name': 'Tipo de Atendimento', 'verbose_name_plural': 'Tipos de Atendimentos', 'ordering': ('nome',)},
        ),
        migrations.CreateModel(
            name='DemandaAlunoAtendida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(null=True, verbose_name='Atendimento')),
                ('quantidade', models.FloatField(default=1, verbose_name='Quantidade')),
                (
                    'valor',
                    djtools.db.models.DecimalFieldPlus(
                        blank=True,
                        decimal_places=2,
                        help_text='Não é necessário ser preenchido para atendimentos vinculados às refeições',
                        max_digits=12,
                        null=True,
                        verbose_name='Valor',
                    ),
                ),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('data_registro', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data de Registro')),
                (
                    'arquivo',
                    djtools.db.models.PrivateFileField(
                        blank=True, max_length=255, null=True, storage=djtools.storages.get_private_storage(), upload_to='ae/demandaalunoatendida', verbose_name='Arquivo'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Atendimento Individual',
                'verbose_name_plural': 'Atendimentos Individuais',
                'permissions': (
                    ('pode_ver_relatorio_atendimento_todos', 'Pode ver relatório de atendimentos todos'),
                    ('pode_ver_relatorio_atendimento_do_campus', 'Pode ver relatório de atendimentos do campus'),
                ),
            },
        ),
        migrations.CreateModel(
            name='DocumentoInscricaoAluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo_arquivo',
                    models.CharField(
                        choices=[
                            ('RG', 'RG'),
                            ('CPF', 'CPF'),
                            ('Comprovante de Renda', 'Comprovante de Renda'),
                            ('Comprovante de Residência', 'Comprovante de Residência'),
                            ('Documento Complementar', 'Documento Complementar'),
                        ],
                        max_length=50,
                        verbose_name='Tipo do Arquivo',
                    ),
                ),
                (
                    'arquivo',
                    djtools.db.models.PrivateFileField(
                        max_length=255, storage=djtools.storages.get_private_storage(), upload_to='ae/inscricao/documentos', verbose_name='Arquivo'
                    ),
                ),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data')),
            ],
            options={'verbose_name': 'Documentos da Inscrição do Aluno', 'verbose_name_plural': 'Documentos das Inscrições dos Alunos'},
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=5000, verbose_name='Descrição')),
                ('link_edital', djtools.db.models.CharFieldPlus(blank=True, max_length=1000, null=True, verbose_name='Link para o Edital')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Edital da Assistência Estudantil', 'verbose_name_plural': 'Editais da Assistência Estudantil'},
        ),
        migrations.CreateModel(
            name='EstadoCivil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Estado Civil', 'verbose_name_plural': 'Estados Civis'},
        ),
        migrations.CreateModel(
            name='HistoricoCaracterizacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raca', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Etnia/Raça/Cor')),
                (
                    'possui_necessidade_especial',
                    djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Possui alguma deficiência/necessidade educacional especial?'),
                ),
                ('necessidade_especial', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Deficiências/necessidades educacionais especiais')),
                ('estado_civil', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Estado Civil')),
                ('qtd_filhos', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Quantidade de filhos')),
                ('aluno_exclusivo_rede_publica', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Aluno da Rede Pública')),
                ('ensino_fundamental_conclusao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Ano de Conclusão do Ensino Fundamental')),
                ('ensino_medio_conclusao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Ano de Conclusão do Ensino Médio')),
                ('ficou_tempo_sem_estudar', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Ausência Escolar')),
                ('tempo_sem_estudar', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Período de Ausência')),
                ('razao_ausencia_educacional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Motivo da Ausência Escolar')),
                ('possui_conhecimento_idiomas', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Conhecimento em Idiomas')),
                ('idiomas_conhecidos', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Idiomas')),
                ('possui_conhecimento_informatica', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Conhecimento em Informática')),
                ('trabalho_situacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Situacao de Trabalho')),
                ('meio_transporte_utilizado', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Meio de Transporte')),
                ('contribuintes_renda_familiar', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Contribuintes da Renda Familiar')),
                ('responsavel_financeiro', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Principal responsável pela renda familiar')),
                (
                    'responsavel_financeir_trabalho_situacao',
                    djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Situação de Trabalho do Principal Responsável Financeiro'),
                ),
                (
                    'responsavel_financeiro_nivel_escolaridade',
                    djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Nível de Escolaridade do Principal Responsável Financeiro'),
                ),
                ('pai_nivel_escolaridade', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Nível de Escolaridade do Pai')),
                ('mae_nivel_escolaridade', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Nível de Escolaridade da Mãe')),
                ('renda_bruta_familiar', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Renda Bruta Familiar R$')),
                ('companhia_domiciliar', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Com quem mora?')),
                ('qtd_pessoas_domicilio', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Número de pessoas no domicílio')),
                ('tipo_imovel_residencial', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Tipo de Imóvel')),
                ('tipo_area_residencial', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Tipo de Área Residencial')),
                ('beneficiario_programa_social', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Programas Social do Governo Federal')),
                ('tipo_servico_saude', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Serviço de Saúde que você mais utiliza')),
                ('escola_ensino_fundamental', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Escola do Ensino Fundamental')),
                ('nome_escola_ensino_fundamental', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Nome da Escola que fez o Ensino Fundamental')),
                ('escola_ensino_medio', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Escola do Ensino Médio')),
                ('nome_escola_ensino_medio', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Nome da escola que fez o Ensino Médio')),
                ('frequencia_acesso_internet', djtools.db.models.CharFieldPlus(blank=True, max_length=255)),
                ('local_acesso_internet', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Local de Acesso à Internet')),
                ('quantidade_computadores', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Quantidade de Computadores Desktop que possui')),
                ('quantidade_notebooks', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Quantidade de Notebooks que possui')),
                ('quantidade_netbooks', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Quantidade de Netbooks que possui')),
                ('quantidade_smartphones', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Quantidade de Smartphones que possui')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='HistoricoFaltasAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_refeicao', models.CharField(choices=[('2', 'Almoço'), ('3', 'Jantar'), ('1', 'Café da manhã')], max_length=1, verbose_name='Tipo de Refeição')),
                ('data', models.DateField(verbose_name='Data da Refeição')),
                ('justificativa', models.CharField(blank=True, max_length=500, null=True, verbose_name='Justificativa')),
                ('justificada_em', models.DateTimeField(blank=True, null=True, verbose_name='Data da Justificativa')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Cancelada')),
            ],
            options={'verbose_name': 'Histórico de Faltas', 'verbose_name_plural': 'Históricos de Faltas'},
        ),
        migrations.CreateModel(
            name='HistoricoRendaFamiliar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now=True)),
                ('numero_salarios', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12)),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='HistoricoSuspensoesAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início da Suspensão')),
                ('data_termino', models.DateTimeField(verbose_name='Data de Término da Suspensão')),
            ],
            options={'verbose_name': 'Histórico de Suspensões', 'verbose_name_plural': 'Históricos de Suspensões'},
        ),
        migrations.CreateModel(
            name='HorarioJustificativaFalta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_refeicao', models.CharField(choices=[('2', 'Almoço'), ('3', 'Jantar'), ('1', 'Café da manhã')], max_length=1, verbose_name='Tipo de Refeição')),
                ('hora_inicio', djtools.db.models.TimeFieldPlus(help_text='Utilize o formato hh:mm:ss', verbose_name='Hora do Início')),
                ('dia_inicio', models.CharField(choices=[('1', 'Dia anterior'), ('2', 'Mesmo dia')], max_length=1, verbose_name='Dia de Início')),
                ('hora_fim', djtools.db.models.TimeFieldPlus(help_text='Utilize o formato hh:mm:ss', verbose_name='Hora do Término')),
                ('dia_fim', models.CharField(choices=[('1', 'Dia anterior'), ('2', 'Mesmo dia')], max_length=1, verbose_name='Dia de Término')),
            ],
            options={'verbose_name': 'Horário de Justificativas de Falta', 'verbose_name_plural': 'Horários de Justificativas de Falta', 'ordering': ['tipo_refeicao']},
        ),
        migrations.CreateModel(
            name='HorarioSolicitacaoRefeicao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_refeicao', models.CharField(choices=[('2', 'Almoço'), ('3', 'Jantar'), ('1', 'Café da manhã')], max_length=1, verbose_name='Tipo de Refeição')),
                ('hora_inicio', djtools.db.models.TimeFieldPlus(help_text='Utilize o formato hh:mm:ss', verbose_name='Hora do Início')),
                ('dia_inicio', models.CharField(choices=[('1', 'Dia anterior'), ('2', 'Mesmo dia')], max_length=1, verbose_name='Dia de Início')),
                ('hora_fim', djtools.db.models.TimeFieldPlus(help_text='Utilize o formato hh:mm:ss', verbose_name='Hora do Término')),
                ('dia_fim', models.CharField(choices=[('1', 'Dia anterior'), ('2', 'Mesmo dia')], max_length=1, verbose_name='Dia de Término')),
            ],
            options={'verbose_name': 'Horário de Solicitações de Refeição', 'verbose_name_plural': 'Horários de Solicitações de Refeição', 'ordering': ['tipo_refeicao']},
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Idioma')),
                ('uso_caracterizacao', models.BooleanField(default=True, verbose_name='Usar na caracterização')),
            ],
            options={'verbose_name': 'Idioma', 'verbose_name_plural': 'Idiomas', 'ordering': ['descricao']},
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data')),
                ('motivo', models.TextField(verbose_name='Motivo da Solicitação')),
                ('ativa', models.BooleanField(default=False, verbose_name='Situação')),
                ('documentada', models.BooleanField(default=False, verbose_name='Doc. Entregue')),
                ('data_documentacao', models.DateTimeField(null=True, verbose_name='Data de Entrega da Documentação')),
                ('prioritaria', models.BooleanField(default=False, verbose_name='Prioritária')),
                ('parecer', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Parecer da Inscrição')),
                ('parecer_data', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data do Parecer')),
                ('selecionada', models.BooleanField(default=False, verbose_name='Selecionada')),
            ],
            options={
                'verbose_name': 'Inscrição',
                'verbose_name_plural': 'Inscrições',
                'ordering': ['-data_cadastro'],
                'permissions': (
                    ('pode_ver_comprovante_inscricao', 'Pode ver comprovante de inscrição'),
                    ('pode_ver_motivo_solicitacao', 'Pode ver o motivo da solicitação'),
                    ('pode_ver_relatorio_inscricao_todos', 'Pode ver o relatório de todas as inscrições'),
                ),
            },
        ),
        migrations.CreateModel(
            name='InscricaoCaracterizacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'moradia_especificacao',
                    djtools.db.models.CharFieldPlus(
                        help_text='Somente preencha este campo caso, na opção anterior, tenha marcado "Outro".', max_length=255, null=True, verbose_name='Situação de moradia'
                    ),
                ),
                (
                    'familiar_doente_cronico',
                    models.BooleanField(default=False, verbose_name='Algum membro da sua família tem doença crônica e/ou faz uso contínuo de medicamentos?'),
                ),
                (
                    'familiar_doente_cronico_nome',
                    djtools.db.models.CharFieldPlus(
                        help_text='Especifique o nome do(s) familiar(es) e respectiva(s) doença(s) crônica(s)',
                        max_length=255,
                        null=True,
                        verbose_name='Familiar(es) com doença(s) crônica(s)',
                    ),
                ),
                (
                    'valor_transporte',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        help_text='Se utiliza meio de transporte (ônibus, mototáxi, transporte locado), especifique o valor gasto.',
                        max_digits=12,
                        verbose_name='Valor gasto com transporte',
                    ),
                ),
                (
                    'remuneracao_trabalho',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2, help_text='Especifique o valor da sua remuneração de trabalho.', max_digits=12, verbose_name='Remuneração de trabalho'
                    ),
                ),
                (
                    'rendimento_mesada',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2, help_text='Especifique o valor que recebe de mesada.', max_digits=12, null=True, verbose_name='Redimento de Mesada'
                    ),
                ),
                (
                    'rendimento_aux_parentes',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        help_text='Especifique o valor que recebe de auxílio de parentes.',
                        max_digits=12,
                        null=True,
                        verbose_name='Rendimento de auxílio de parentes',
                    ),
                ),
                (
                    'rendimento_aluguel',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2,
                        help_text='Especifique o valor que recebe de rendimentos de aluguel(is).',
                        max_digits=12,
                        null=True,
                        verbose_name='Rendimento de aluguel(is)',
                    ),
                ),
                (
                    'rendimento_outro',
                    djtools.db.models.DecimalFieldPlus(
                        decimal_places=2, help_text='Caso tenha outro redimento, especifique-o.', max_digits=12, null=True, verbose_name='Outros rendimentos'
                    ),
                ),
                (
                    'informacoes_complementares',
                    djtools.db.models.CharFieldPlus(
                        help_text='Se achar necessário, relate alguma situação familiar especial, não contemplada no questionário,     a qual você julga importante para fundamentar a análise de sua situação econômica.',
                        max_length=255,
                        null=True,
                        verbose_name='Informações complementares',
                    ),
                ),
                ('data', models.DateTimeField(auto_now=True, verbose_name='Data')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='IntegranteFamiliarCaracterizacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('idade', models.IntegerField(null=True, verbose_name='Idade')),
                ('parentesco', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Parentesco')),
                ('remuneracao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, null=True, verbose_name='Remuneração')),
                ('ultima_remuneracao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, null=True, verbose_name='Última Remuneração')),
                ('data', models.DateTimeField(auto_now=True, null=True, verbose_name='Data')),
                ('data_nascimento', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Nascimento')),
                ('id_inscricao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Id da Inscrição')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='MeioTransporte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Meio de Transporte')),
            ],
            options={'verbose_name': 'Meio de Transporte', 'verbose_name_plural': 'Meios de Transporte'},
        ),
        migrations.CreateModel(
            name='MotivoSolicitacaoRefeicao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=2000, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Motivo de Solicitação de Refeição', 'verbose_name_plural': 'Motivos de Solicitação de Refeição'},
        ),
        migrations.CreateModel(
            name='NecessidadeEspecial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Necessidade Especial', 'verbose_name_plural': 'Necessidades Especiais'},
        ),
        migrations.CreateModel(
            name='NivelEscolaridade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Nível de Escolaridade', 'verbose_name_plural': 'Níveis de Escolaridade'},
        ),
        migrations.CreateModel(
            name='OfertaAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_inicio', djtools.db.models.DateFieldPlus(null=True, verbose_name='Segunda-feira do Início da Oferta')),
                ('dia_termino', djtools.db.models.DateFieldPlus(null=True, verbose_name='Sexta-feira do Término da Oferta')),
                ('cafe_seg', models.PositiveIntegerField(default=0, verbose_name='Café da manhã/Segunda')),
                ('cafe_ter', models.PositiveIntegerField(default=0, verbose_name='Café da manhã/Terça')),
                ('cafe_qua', models.PositiveIntegerField(default=0, verbose_name='Café da manhã/Quarta')),
                ('cafe_qui', models.PositiveIntegerField(default=0, verbose_name='Café da manhã/Quinta')),
                ('cafe_sex', models.PositiveIntegerField(default=0, verbose_name='Café da manhã/Sexta')),
                ('almoco_seg', models.PositiveIntegerField(default=0, verbose_name='Almoço/Segunda')),
                ('almoco_ter', models.PositiveIntegerField(default=0, verbose_name='Almoço/Terça')),
                ('almoco_qua', models.PositiveIntegerField(default=0, verbose_name='Almoço/Quarta')),
                ('almoco_qui', models.PositiveIntegerField(default=0, verbose_name='Almoço/Quinta')),
                ('almoco_sex', models.PositiveIntegerField(default=0, verbose_name='Almoço/Sexta')),
                ('janta_seg', models.PositiveIntegerField(default=0, verbose_name='Jantar/Segunda')),
                ('janta_ter', models.PositiveIntegerField(default=0, verbose_name='Jantar/Terça')),
                ('janta_qua', models.PositiveIntegerField(default=0, verbose_name='Jantar/Quarta')),
                ('janta_qui', models.PositiveIntegerField(default=0, verbose_name='Jantar/Quinta')),
                ('janta_sex', models.PositiveIntegerField(default=0, verbose_name='Jantar/Sexta')),
            ],
            options={
                'verbose_name': 'Oferta de Refeições',
                'verbose_name_plural': 'Ofertas de Refeições',
                'permissions': (
                    ('pode_gerenciar_ofertaalimentacao_todos', 'Pode gerenciar oferta alimentacao todos'),
                    ('pode_gerenciar_ofertaalimentacao_do_campus', 'Pode gerenciar oferta alimentacao do campus'),
                ),
            },
        ),
        migrations.CreateModel(
            name='OfertaBolsa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'turno',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('manha', 'Manhã'),
                            ('tarde', 'Tarde'),
                            ('noite', 'Noite'),
                            ('manha_tarde', 'Manhã e tarde'),
                            ('manha_noite', 'Manhã e noite'),
                            ('tarde_noite', 'Tarde e noite'),
                            ('manha_tarde_noite', 'Manhã, tarde e noite'),
                        ],
                        max_length=255,
                    ),
                ),
                ('descricao_funcao', models.CharField(max_length=500, verbose_name='Descrição da Função')),
                ('disponivel', models.BooleanField(default=True, verbose_name='Disponível')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={'verbose_name': 'Oferta de Bolsa de Inic. Profissional', 'verbose_name_plural': 'Ofertas de Bolsa de Inic. Profissional'},
        ),
        migrations.CreateModel(
            name='OfertaPasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_passe', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Recurso Planejado (R$)')),
                ('data_inicio', models.DateField(verbose_name='Data Inicial')),
                ('data_termino', models.DateField(verbose_name='Data Final')),
            ],
            options={'verbose_name': 'Recurso Planejado: Auxílio-Transporte', 'verbose_name_plural': 'Recursos Planejados: Auxílio-Transporte'},
        ),
        migrations.CreateModel(
            name='OfertaTurma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turma', models.CharField(help_text='Ex: 03', max_length=50, verbose_name='Turma')),
                ('ano', models.PositiveIntegerField(verbose_name='Ano')),
                ('semestre', models.PositiveIntegerField(choices=[(1, 1), (2, 2)], verbose_name='Semestre')),
                (
                    'dia1',
                    models.PositiveIntegerField(
                        choices=[(0, 'Segunda'), (1, 'Terça'), (2, 'Quarta'), (3, 'Quinta'), (4, 'Sexta'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='1º Dia'
                    ),
                ),
                (
                    'dia2',
                    models.PositiveIntegerField(
                        choices=[(0, 'Segunda'), (1, 'Terça'), (2, 'Quarta'), (3, 'Quinta'), (4, 'Sexta'), (5, 'Sábado'), (6, 'Domingo')],
                        help_text='Selecione o mesmo dia informado acima caso as aulas aconteçam em um único dia',
                        verbose_name='2º Dia',
                    ),
                ),
                ('horario1', models.CharField(help_text='Ex: 07:00', max_length=50, verbose_name='Horário de Início')),
                ('horario2', models.CharField(help_text='Ex: 09:30', max_length=50, verbose_name='Horário de Término')),
                ('professor', models.CharField(max_length=100, verbose_name='Professor(a)')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('numero_vagas', models.PositiveIntegerField(help_text='Número de vagas informadas pela FUNCERN', verbose_name='Número de Vagas')),
            ],
            options={'verbose_name': 'Oferta de Turmas de Idioma', 'verbose_name_plural': 'Ofertas de Turmas de Idioma'},
        ),
        migrations.CreateModel(
            name='OfertaValorBolsa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Valor Mensal da Bolsa (R$)')),
                ('data_inicio', models.DateField(verbose_name='Data Inicial')),
                ('data_termino', models.DateField(verbose_name='Data Final')),
            ],
            options={'verbose_name': 'Valor da Bolsa', 'verbose_name_plural': 'Valores da Bolsa'},
        ),
        migrations.CreateModel(
            name='OfertaValorRefeicao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Valor Unitário (R$)')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_termino', models.DateField(verbose_name='Data de Saída')),
            ],
            options={'verbose_name': 'Valor da Refeição', 'verbose_name_plural': 'Valores da Refeições'},
        ),
        migrations.CreateModel(
            name='OpcaoRespostaInscricaoPrograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.CharFieldPlus(max_length=200, verbose_name='Opção de Resposta')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Opção de Resposta da Inscrição', 'verbose_name_plural': 'Opções de Resposta da Inscrição', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='OpcaoRespostaPerguntaParticipacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.CharFieldPlus(max_length=200, verbose_name='Opção de Resposta')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Opção de Resposta da Participação', 'verbose_name_plural': 'Opções de Resposta da Participação', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='Participacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_termino', models.DateField(blank=True, null=True, verbose_name='Data de Saída')),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('motivo_termino', models.TextField(blank=True, verbose_name='Motivo de Saída')),
                ('motivo_entrada', models.TextField(blank=True, verbose_name='Motivo de Entrada')),
            ],
            options={
                'verbose_name': 'Participação',
                'verbose_name_plural': 'Participações',
                'ordering': ['-data_inicio'],
                'permissions': (
                    ('pode_revogar_participacao', 'Pode fechar participação de qualquer tipo programa'),
                    ('pode_ver_motivo_termino', 'Pode ver o motivo de saída'),
                    ('pode_editar_participacao', 'Pode editar participação'),
                    ('pode_ver_relatorio_participacao_todos', 'Pode ver os relatórios de participação de todos'),
                    ('pode_ver_relatorio_participacao_do_campus', 'Pode ver os relatórios de participação do campus'),
                ),
            },
        ),
        migrations.CreateModel(
            name='ParticipacaoAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspensa', models.BooleanField(default=False, verbose_name='Suspensa')),
                ('suspensa_em', models.DateField(blank=True, null=True, verbose_name='Data da Suspensão')),
                ('liberar_em', models.DateField(blank=True, null=True, verbose_name='Data da Liberação')),
            ],
            options={'permissions': (('pode_revogar_participacaoalimentacao', 'Pode fechar participação'),)},
        ),
        migrations.CreateModel(
            name='ParticipacaoBolsa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_termino', models.DateField(null=True, verbose_name='Data de Saída')),
            ],
            options={
                'verbose_name': 'Participação de Bolsa',
                'verbose_name_plural': 'Participações de Bolsas',
                'permissions': (('pode_ver_lista_bolsas_todos', 'Pode ver todos os bolsistas'),),
            },
        ),
        migrations.CreateModel(
            name='ParticipacaoIdioma', fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'))], options={'abstract': False}
        ),
        migrations.CreateModel(
            name='ParticipacaoPasseEstudantil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_concedido', djtools.db.models.DecimalFieldPlus(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Concedido (R$)')),
                (
                    'tipo_passe_concedido',
                    models.CharField(blank=True, choices=[('INT', 'Intermunicipal'), ('MUN', 'Municipal')], max_length=3, null=True, verbose_name='Tipo de Passe Concedido'),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='ParticipacaoTrabalho', fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'))], options={'abstract': False}
        ),
        migrations.CreateModel(
            name='PerguntaInscricaoPrograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pergunta', djtools.db.models.CharFieldPlus(max_length=2000, verbose_name='Pergunta')),
                (
                    'tipo_resposta',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('Texto', 'Texto'),
                            ('Parágrafo', 'Parágrafo'),
                            ('Número', 'Número'),
                            ('Sim/Não', 'Sim/Não'),
                            ('Única Escolha', 'Única Escolha'),
                            ('Múltipla Escolha', 'Múltipla Escolha'),
                        ],
                        max_length=100,
                        verbose_name='Tipo de Resposta',
                    ),
                ),
                ('obrigatoria', models.BooleanField(default=True, verbose_name='Resposta Obrigatória')),
                ('ordem', models.IntegerField(null=True, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Pergunta da Inscrição', 'verbose_name_plural': 'Perguntas da Inscrição', 'ordering': ['ordem']},
        ),
        migrations.CreateModel(
            name='PerguntaParticipacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pergunta', djtools.db.models.CharFieldPlus(max_length=2000, verbose_name='Pergunta')),
                (
                    'tipo_resposta',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('Texto', 'Texto'),
                            ('Parágrafo', 'Parágrafo'),
                            ('Número', 'Número'),
                            ('Sim/Não', 'Sim/Não'),
                            ('Única Escolha', 'Única Escolha'),
                            ('Múltipla Escolha', 'Múltipla Escolha'),
                        ],
                        max_length=100,
                        verbose_name='Tipo de Resposta',
                    ),
                ),
                ('eh_info_financeira', models.BooleanField(default=False, verbose_name='É Informação Financeira?')),
                ('obrigatoria', models.BooleanField(default=True, verbose_name='Resposta Obrigatória')),
                ('ordem', models.IntegerField(null=True, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Pergunta da Participação', 'verbose_name_plural': 'Perguntas da Participação', 'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='PeriodoInscricao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início das Inscrições')),
                ('data_termino', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término das Inscrições')),
            ],
            options={'verbose_name': 'Período de Inscrição', 'verbose_name_plural': 'Períodos de Inscrição'},
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'tipo',
                    djtools.db.models.CharFieldPlus(
                        blank=True,
                        choices=[('ALM', 'Alimentação Estudantil'), ('PAS', 'Auxílio Transporte'), ('TRB', 'Apoio à Formação Estudantil'), ('IDM', 'Curso de Idiomas')],
                        max_length=255,
                        null=True,
                        verbose_name='Tipo',
                    ),
                ),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('titulo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Título')),
                ('impedir_solicitacao_beneficio', models.BooleanField(default=False, verbose_name='Impedir que aluno solicite benefício?')),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
                'ordering': ('tipo_programa__titulo', 'instituicao'),
                'permissions': (
                    ('pode_ver_relatorio_programas_todos', 'Pode ver todos os relatórios de programas'),
                    ('pode_abrir_inscricao_todos', 'Pode abrir periodo inscrição todos'),
                    ('pode_abrir_inscricao_do_campus', 'Pode abrir periodo inscrição do campus'),
                    ('pode_detalhar_programa_todos', 'Pode ver detalhamento programa todos'),
                    ('pode_detalhar_programa_do_campus', 'Pode ver detalhamento programa do campus'),
                    ('pode_ver_menu_agendamentos', 'Pode ver menu de agendamentos'),
                    ('pode_ver_relatorios_todos', 'Ver relatórios de todos os campi'),
                    ('pode_ver_relatorios_campus', 'Ver relatórios do próprio campus'),
                    ('pode_ver_listas_todos', 'Pode ver listas de todos os campi'),
                    ('pode_ver_listas_campus', 'Pode ver listas do próprio campus'),
                    ('pode_ver_periodo_inscricao', 'Pode ver período de inscrição'),
                    ('pode_ver_lista_dos_alunos', 'Pode ver lista dos alunos'),
                    ('pode_ver_relatorio_semanal', 'Pode ver relatório semanal de alimentação'),
                ),
            },
        ),
        migrations.CreateModel(
            name='RazaoAfastamentoEducacional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Razão de Afastamento Educacional', 'verbose_name_plural': 'Razões de Afastamentos Educacionais'},
        ),
        migrations.CreateModel(
            name='RelatorioGestao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_processamento', models.DateTimeField(auto_now=True, verbose_name='Data de processamento')),
                ('ano', models.PositiveIntegerField(verbose_name='Ano')),
                ('somente_alunos_ead', models.BooleanField(verbose_name='Exibir somente Alunos EAD')),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
            ],
        ),
        migrations.CreateModel(
            name='RelatorioGestaoAtendimentos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_janeiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_fevereiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_marco', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_abril', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_maio', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_junho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_julho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_agosto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_setembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_outubro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_novembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_dezembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_1_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_2_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_anual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
                (
                    'agrupador',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Total de Atendimentos', 'Total de Atendimentos'), ('Alunos Assistidos', 'Alunos Assistidos'), ('Valores Gastos', 'Valores Gastos')],
                        max_length=255,
                    ),
                ),
                ('tipo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Tipo de Atendimento')),
                ('custeio', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Custeio')),
            ],
            options={'ordering': ['id'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='RelatorioGestaoAuxilios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_janeiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_fevereiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_marco', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_abril', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_maio', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_junho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_julho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_agosto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_setembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_outubro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_novembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_dezembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_1_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_2_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_anual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
                (
                    'agrupador',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Total de Auxílios', 'Total de Auxílios'), ('Alunos Assistidos', 'Alunos Assistidos'), ('Valores Gastos', 'Valores Gastos')], max_length=255
                    ),
                ),
                ('tipo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Tipo de Auxílio')),
            ],
            options={'ordering': ['id'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='RelatorioGestaoBolsas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_janeiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_fevereiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_marco', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_abril', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_maio', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_junho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_julho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_agosto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_setembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_outubro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_novembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_dezembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_1_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_2_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_anual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
                (
                    'agrupador',
                    djtools.db.models.CharFieldPlus(
                        choices=[('Total de Bolsas', 'Total de Bolsas'), ('Alunos Assistidos', 'Alunos Assistidos'), ('Valores Gastos', 'Valores Gastos')], max_length=255
                    ),
                ),
                ('categoria', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Categoria de Bolsa')),
            ],
            options={'ordering': ['id'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='RelatorioGestaoProgramas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_janeiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_fevereiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_marco', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_abril', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_maio', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_junho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_julho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_agosto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_setembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_outubro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_novembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_dezembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_1_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_2_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_anual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
                (
                    'agrupador',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('Total de Participações em Programas', 'Total de Participações em Programas'),
                            ('Alunos Assistidos', 'Alunos Assistidos'),
                            ('Valores Gastos', 'Valores Gastos'),
                        ],
                        max_length=255,
                    ),
                ),
                ('programa', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Programa')),
            ],
            options={'ordering': ['id'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='RelatorioGestaoResumo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_janeiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_fevereiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_marco', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_abril', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_maio', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_junho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_julho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_agosto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_setembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_outubro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_novembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_dezembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_1_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_2_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_anual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
                ('agrupador', djtools.db.models.CharFieldPlus(choices=[('Alunos Assistidos', 'Alunos Assistidos')], max_length=255)),
                (
                    'tipo',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('Atendimentos', 'Atendimentos'),
                            ('Auxílios', 'Auxílios'),
                            ('Bolsas', 'Bolsas'),
                            ('Participantes em Programas', 'Participantes em Programas'),
                            ('Atendimentos de Saúde', 'Atendimentos de Saúde'),
                            ('Total', 'Total'),
                        ],
                        max_length=255,
                    ),
                ),
            ],
            options={'ordering': ['id'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='RelatorioGestaoSaude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_janeiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_fevereiro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_marco', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_abril', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_maio', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_junho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_julho', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_agosto', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_setembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_outubro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_novembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('qtd_dezembro', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_1_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_2_semestre', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_anual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('renda_per_capita', djtools.db.models.CharFieldPlus(default='Todas', max_length=255, verbose_name='Renda Per Capita')),
                (
                    'agrupador',
                    djtools.db.models.CharFieldPlus(choices=[('Total de Atendimentos', 'Total de Atendimentos'), ('Alunos Assistidos', 'Alunos Assistidos')], max_length=255),
                ),
                ('tipo_atendimento', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Tipo de Atendimento')),
            ],
            options={'ordering': ['id'], 'abstract': False},
        ),
        migrations.CreateModel(
            name='RelatorioGrafico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255)),
                (
                    'tipo',
                    djtools.db.models.CharFieldPlus(choices=[('PieChart', 'PieChart'), ('GroupedColumnChart', 'GroupedColumnChart'), ('BarChart', 'BarChart')], max_length=255),
                ),
                (
                    'tipo_relatorio',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('Atendimentos', 'Atendimentos'),
                            ('Auxílios', 'Auxílios'),
                            ('Bolsas', 'Bolsas'),
                            ('Programas', 'Programas'),
                            ('Saúde', 'Saúde'),
                            ('Resumo', 'Resumo'),
                        ],
                        max_length=255,
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='RespostaInscricaoPrograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_informado', models.TextField(blank=True, null=True, verbose_name='Resposta')),
            ],
            options={'verbose_name': 'Resposta da Inscrição', 'verbose_name_plural': 'Respostas da Inscrição'},
        ),
        migrations.CreateModel(
            name='RespostaParticipacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_informado', models.TextField(blank=True, null=True, verbose_name='Resposta')),
            ],
            options={'verbose_name': 'Resposta da Participação', 'verbose_name_plural': 'Respostas da Participação'},
        ),
        migrations.CreateModel(
            name='SituacaoTrabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Situação de Trabalho', 'verbose_name_plural': 'Situações de Trabalho'},
        ),
        migrations.CreateModel(
            name='SolicitacaoAlimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seg', models.BooleanField(default=False, verbose_name='Segunda')),
                ('ter', models.BooleanField(default=False, verbose_name='Terça')),
                ('qua', models.BooleanField(default=False, verbose_name='Quarta')),
                ('qui', models.BooleanField(default=False, verbose_name='Quinta')),
                ('sex', models.BooleanField(default=False, verbose_name='Sexta')),
                ('sab', models.BooleanField(default=False, verbose_name='Sábado')),
                ('dom', models.BooleanField(default=False, verbose_name='Domingo')),
            ],
            options={'verbose_name': 'Solicitação Alimentação', 'verbose_name_plural': 'Solicitações Alimentação'},
        ),
        migrations.CreateModel(
            name='SolicitacaoRefeicaoAluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus()),
                ('data_auxilio', djtools.db.models.DateTimeFieldPlus()),
                ('tipo_refeicao', models.CharField(choices=[('2', 'Almoço'), ('3', 'Jantar'), ('1', 'Café da manhã')], max_length=1, verbose_name='Tipo de Refeição')),
                ('motivo_solicitacao', djtools.db.models.CharFieldPlus(max_length=500, verbose_name='Motivo da Solicitação')),
                ('deferida', models.NullBooleanField(verbose_name='Deferida')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('agendamento', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ae.AgendamentoRefeicao', verbose_name='Agendamento')),
            ],
            options={
                'verbose_name': 'Solicitação de Refeições',
                'verbose_name_plural': 'Solicitações de Refeições',
                'permissions': (('pode_ver_solicitacao_refeicao', 'Pode ver solicitacao de refeicao'),),
            },
        ),
        migrations.CreateModel(
            name='TipoAcessoInternet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='TipoAreaResidencial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Tipo de Área Residencial', 'verbose_name_plural': 'Tipos de Áreas Residenciais'},
        ),
        migrations.CreateModel(
            name='TipoAtendimentoSetor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Nome')),
                ('descricao', models.TextField(verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Tipo de Auxílio', 'verbose_name_plural': 'Tipos de Auxílios'},
        ),
        migrations.CreateModel(
            name='TipoAtividadeDiversa',
            fields=[('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('nome', models.CharField(max_length=255, unique=True))],
            options={'verbose_name': 'Tipo de Atividade Diversa', 'verbose_name_plural': 'Tipos de Atividades Diversas', 'ordering': ('nome',)},
        ),
        migrations.CreateModel(
            name='TipoEmprego',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Tipo de Emprego', 'verbose_name_plural': 'Tipos de Emprego'},
        ),
        migrations.CreateModel(
            name='TipoEscola',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='TipoImovelResidencial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'verbose_name': 'Tipo de Imóvel Residencial', 'verbose_name_plural': 'Tipos de Imóveis Residenciais'},
        ),
        migrations.CreateModel(
            name='TipoPrograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Título')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=2000, verbose_name='Descrição')),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=10, verbose_name='Sigla')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={'verbose_name': 'Tipo de Programa', 'verbose_name_plural': 'Tipos de Programa'},
        ),
        migrations.CreateModel(
            name='TipoServicoSaude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=50, verbose_name='Descrição')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='ValorTotalAuxilios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Recurso Planejado (R$)')),
                ('data_inicio', models.DateField(verbose_name='Data Inicial')),
                ('data_termino', models.DateField(verbose_name='Data Final')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
                (
                    'tipoatendimentosetor',
                    djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='ae.TipoAtendimentoSetor', verbose_name='Tipo de Auxílio'),
                ),
            ],
            options={
                'verbose_name': 'Recurso Planejado: Auxílios',
                'verbose_name_plural': 'Recursos Planejados: Auxílios',
                'permissions': (
                    ('pode_ver_relatorio_financeiro', 'Pode ver relatório financeiro'),
                    ('pode_ver_relatorio_financeiro_todos', 'Pode ver relatório financeiro de todos'),
                    ('pode_ver_lista_auxilio_atendidos', 'Pode ver a lista de auxílios atendidos'),
                ),
            },
        ),
        migrations.CreateModel(
            name='ValorTotalBolsas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Recurso Planejado (R$)')),
                ('data_inicio', models.DateField(verbose_name='Data Inicial')),
                ('data_termino', models.DateField(verbose_name='Data Final')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
                ('categoriabolsa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='ae.CategoriaBolsa', verbose_name='Categoria de Bolsa')),
            ],
            options={
                'verbose_name': 'Recurso Planejado: Bolsas',
                'verbose_name_plural': 'Recursos Planejados: Bolsas',
                'permissions': (('pode_ver_relatorio_financeiro', 'Pode ver relatório financeiro'),),
            },
        ),
        migrations.CreateModel(
            name='InscricaoAlimentacao',
            fields=[
                (
                    'inscricao_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ae.Inscricao'),
                )
            ],
            options={'verbose_name': 'Inscrição em Alimentação Estudantil', 'verbose_name_plural': 'Inscrições em Alimentação Estudantil'},
            bases=('ae.inscricao',),
        ),
        migrations.CreateModel(
            name='InscricaoIdioma',
            fields=[
                (
                    'inscricao_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ae.Inscricao'),
                )
            ],
            options={'verbose_name': 'Inscrição em Curso de Idiomas', 'verbose_name_plural': 'Inscrições em Curso de Idiomas'},
            bases=('ae.inscricao',),
        ),
        migrations.CreateModel(
            name='InscricaoPasseEstudantil',
            fields=[
                (
                    'inscricao_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ae.Inscricao'),
                ),
                ('tipo_passe', models.CharField(choices=[('INT', 'Intermunicipal'), ('MUN', 'Municipal')], max_length=3, verbose_name='Tipo de Passe')),
            ],
            options={'verbose_name': 'Inscrição em Auxílio Transporte', 'verbose_name_plural': 'Inscrições em Auxílio Transporte'},
            bases=('ae.inscricao',),
        ),
        migrations.CreateModel(
            name='InscricaoTrabalho',
            fields=[
                (
                    'inscricao_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ae.Inscricao'),
                ),
                (
                    'turno',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('manha', 'Manhã'),
                            ('tarde', 'Tarde'),
                            ('noite', 'Noite'),
                            ('manha_tarde', 'Manhã e tarde'),
                            ('manha_noite', 'Manhã e noite'),
                            ('tarde_noite', 'Tarde e noite'),
                            ('manha_tarde_noite', 'Manhã, tarde e noite'),
                        ],
                        max_length=255,
                    ),
                ),
                ('habilidades', models.TextField(verbose_name='Habilidades')),
            ],
            options={
                'verbose_name': 'Inscrição em Apoio à Formação Estudantil',
                'verbose_name_plural': 'Inscrições em Apoio à Formação Estudantil'
            },
            bases=('ae.inscricao',),
        ),
    ]
