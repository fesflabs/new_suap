# Generated by Django 3.2.5 on 2022-07-31 19:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models
import djtools.middleware.threadlocals
import djtools.storages.storage
import djtools.thumbs
import djtools.unaccent_field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rh', '0040_merge_20220722_1505'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('convenios', '0004_auto_20220727_1137'),
        ('comum', '0045_merge_0044_contatoemergencia_0044_merge_20220705_1111'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbonoFaltas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de Início')),
                ('data_fim', djtools.db.models.DateFieldPlus(verbose_name='Data de Fim')),
                ('justificativa', models.TextField(verbose_name='Justificativa')),
                ('anexo', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/abono_faltas/', verbose_name='Anexo')),
            ],
            options={
                'verbose_name': 'Justificativa de Falta',
                'verbose_name_plural': 'Justificativas de Faltas',
            },
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_academico', models.IntegerField(db_index=True, null=True)),
                ('codigo_academico_pf', models.IntegerField(null=True, verbose_name='Cód. Acadêmico Pessoa Física')),
                ('matricula', djtools.db.models.CharFieldPlus(db_index=True, max_length=255, verbose_name='Matrícula')),
                ('foto', djtools.thumbs.ImageWithThumbsField(blank=True, null=True, storage=djtools.storages.storage.FileSystemStoragePlus(), upload_to='alunos')),
                ('estado_civil', djtools.db.models.CharFieldPlus(choices=[['Solteiro', 'Solteiro'], ['Casado', 'Casado'], ['União Estável', 'União Estável'], ['Divorciado', 'Divorciado'], ['Viúvo', 'Viúvo']], max_length=255, null=True)),
                ('numero_dependentes', djtools.db.models.PositiveIntegerFieldPlus(null=True, verbose_name='Número de Dependentes')),
                ('logradouro', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Logradouro')),
                ('numero', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Número')),
                ('complemento', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('bairro', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Bairro')),
                ('cep', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('tipo_zona_residencial', djtools.db.models.CharFieldPlus(choices=[['1', 'Urbana'], ['2', 'Rural']], max_length=255, null=True, verbose_name='Zona Residencial')),
                ('logradouro_profissional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Logradouro Profissional')),
                ('numero_profissional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número Profissional')),
                ('complemento_profissional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Complemento Profissional')),
                ('bairro_profissional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Bairro Profissional')),
                ('cep_profissional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='CEP Profissional')),
                ('tipo_zona_residencial_profissional', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Urbana'], ['2', 'Rural']], max_length=255, null=True, verbose_name='Zona Residencial Profissional')),
                ('telefone_profissional', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone Profissional')),
                ('nome_pai', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Nome do Pai')),
                ('estado_civil_pai', djtools.db.models.CharFieldPlus(blank=True, choices=[['Solteiro', 'Solteiro'], ['Casado', 'Casado'], ['União Estável', 'União Estável'], ['Divorciado', 'Divorciado'], ['Viúvo', 'Viúvo']], max_length=255, null=True)),
                ('pai_falecido', models.BooleanField(default=False, verbose_name='Pai é falecido?')),
                ('nome_mae', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nome da Mãe')),
                ('estado_civil_mae', djtools.db.models.CharFieldPlus(blank=True, choices=[['Solteiro', 'Solteiro'], ['Casado', 'Casado'], ['União Estável', 'União Estável'], ['Divorciado', 'Divorciado'], ['Viúvo', 'Viúvo']], max_length=255, null=True)),
                ('mae_falecida', models.BooleanField(default=False, verbose_name='Mãe é falecida?')),
                ('responsavel', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Nome do Responsável')),
                ('email_responsavel', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Email do Responsável')),
                ('parentesco_responsavel', djtools.db.models.CharFieldPlus(blank=True, choices=[['Pai/Mãe', 'Pai/Mãe'], ['Avô/Avó', 'Avô/Avó'], ['Tio/Tia', 'Tio/Tia'], ['Sobrinho/Sobrinha', 'Sobrinho/Sobrinha'], ['Outro', 'Outro']], max_length=255, null=True, verbose_name='Parentesco do Responsável')),
                ('cpf_responsavel', djtools.db.models.BrCpfField(blank=True, max_length=14, null=True, verbose_name='CPF do Responsável')),
                ('autorizacao_carteira_estudantil', models.BooleanField(default=False, help_text='O aluno autoriza o envio de seus dados pessoais para o Sistema Brasileiro de Educação (SEB) para fins de emissão da carteira de estudante digital de acordo com a Medida Provisória Nº 895, de 6 de setembro de 2019', verbose_name='Autorização para Emissão da Carteira Estudantil')),
                ('telefone_principal', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone Principal')),
                ('telefone_secundario', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone Secundário')),
                ('telefone_adicional_1', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone do Responsável')),
                ('telefone_adicional_2', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone do Responsável')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='Linkedin')),
                ('skype', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Skype')),
                ('tipo_sanguineo', djtools.db.models.CharFieldPlus(blank=True, choices=[['O-', 'O-'], ['O+', 'O+'], ['A-', 'A-'], ['A+', 'A+'], ['B-', 'B-'], ['B+', 'B+'], ['AB-', 'AB-'], ['AB+', 'AB+']], max_length=255, null=True, verbose_name='Tipo Sanguíneo')),
                ('nacionalidade', djtools.db.models.CharFieldPlus(choices=[['Brasileira', 'Brasileira'], ['Brasileira - Nascido no exterior ou naturalizado', 'Brasileira - Nascido no exterior ou naturalizado'], ['Estrangeira', 'Estrangeira']], max_length=255, null=True, verbose_name='Nacionalidade')),
                ('passaporte', djtools.db.models.CharFieldPlus(default='', max_length=50, verbose_name='Nº do Passaporte')),
                ('tipo_necessidade_especial', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Baixa Visão'], ['11', 'Cegueira'], ['2', 'Deficiência Auditiva'], ['3', 'Deficiência Física'], ['4', 'Deficiência Intelectual'], ['5', 'Deficiência Múltipla'], ['22', 'Surdez'], ['222', 'Surdocegueira']], max_length=255, null=True, verbose_name='Tipo de Necessidade Especial')),
                ('tipo_transtorno', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Autismo'], ['2', 'Síndrome de Asperger'], ['3', 'Síndrome de Rett'], ['4', 'Transtorno Desintegrativo da Infância']], max_length=255, null=True, verbose_name='Tipo de Transtorno')),
                ('superdotacao', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Altas habilidades/Superdotação']], max_length=255, null=True, verbose_name='Superdotação')),
                ('tipo_instituicao_origem', djtools.db.models.CharFieldPlus(blank=True, choices=[['Pública', 'Pública'], ['Privada', 'Privada']], max_length=255, null=True, verbose_name='Tipo de Instituição')),
                ('nome_instituicao_anterior', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Nome da Instituição')),
                ('habilitacao_pedagogica', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Habilitação para Curso de Formação Pedagógica')),
                ('numero_rg', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número do RG')),
                ('data_emissao_rg', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Emissão')),
                ('numero_titulo_eleitor', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Título de Eleitor')),
                ('zona_titulo_eleitor', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Zona')),
                ('secao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Seção')),
                ('data_emissao_titulo_eleitor', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Emissão')),
                ('numero_carteira_reservista', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número da Carteira de Reservista')),
                ('regiao_carteira_reservista', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Região')),
                ('serie_carteira_reservista', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Série')),
                ('ano_carteira_reservista', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ano')),
                ('tipo_certidao', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Nascimento'], ['2', 'Casamento']], max_length=255, null=True, verbose_name='Tipo de Certidão')),
                ('numero_certidao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número de Termo')),
                ('folha_certidao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Folha')),
                ('livro_certidao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Livro')),
                ('data_emissao_certidao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Emissão')),
                ('matricula_certidao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Matrícula')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período de Ingresso')),
                ('data_matricula', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, verbose_name='Data da Matrícula')),
                ('cota_sistec', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Escola Pública'], ['2', 'Cor/Raça'], ['3', 'Olimpíada'], ['4', 'Indígena'], ['5', 'Necessidades Especiais'], ['6', 'Zona Rural'], ['7', 'Quilombola'], ['8', 'Assentamento'], ['9', 'Não se aplica']], max_length=255, null=True, verbose_name='Cota SISTEC')),
                ('cota_mec', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Seleção Geral'], ['2', 'Oriundo de escola pública, com renda superior a 1,5 S.M. e declarado preto, pardo ou indígena (PPI)'], ['3', 'Oriundo de escola pública, com renda superior a 1,5 S.M., não declarado PPI'], ['4', 'Oriundo de escola pública, com renda inferior a 1,5 S.M., declarado PPI'], ['5', 'Oriundo de escola pública, com renda inferior a 1,5 S.M., não declarado PPI'], ['0', 'Não se aplica']], max_length=255, null=True, verbose_name='Cota MEC')),
                ('possui_convenio', models.BooleanField(null=True, verbose_name='Possui Convênio')),
                ('data_conclusao_intercambio', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Conclusão do Intercâmbio')),
                ('numero_pasta', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número da Pasta')),
                ('aluno_especial', models.BooleanField(default=False, verbose_name='Aluno Especial?')),
                ('ira', djtools.db.models.DecimalFieldPlus(decimal_places=2, default=0, max_digits=12, null=True, verbose_name='I.R.A')),
                ('dt_conclusao_curso', models.DateField(blank=True, null=True, verbose_name='Data de Conclusão do Curso')),
                ('data_expedicao_diploma', models.DateField(blank=True, null=True, verbose_name='Data de Expedição do Diploma')),
                ('data_colacao_grau', models.DateField(blank=True, null=True, verbose_name='Data da Colação de Grau')),
                ('ano_let_prev_conclusao', models.IntegerField(blank=True, null=True, verbose_name='Ano Prev. Conclusão')),
                ('ano_conclusao', models.IntegerField(blank=True, null=True, verbose_name='Ano Conclusão')),
                ('renda_per_capita', models.DecimalField(decimal_places=2, help_text='Número de salários mínimos ganhos pelos integrantes da família dividido pelo número de integrantes', max_digits=15, null=True, verbose_name='Renda Per Capita')),
                ('periodo_atual', models.IntegerField(blank=True, null=True, verbose_name='Período Atual')),
                ('observacao_historico', models.TextField(blank=True, null=True, verbose_name='Observação para o Histórico')),
                ('observacao_matricula', models.TextField(blank=True, null=True, verbose_name='Observação da Matrícula')),
                ('comp_obrigatorios_pendentes', models.BooleanField(default=False)),
                ('comp_optativos_pendentes', models.BooleanField(default=False)),
                ('comp_eletivos_pendentes', models.BooleanField(default=False)),
                ('pratica_profissional_pendente', models.BooleanField(default=False)),
                ('seminarios_pendentes', models.BooleanField(default=False)),
                ('atividades_complementares_pendentes', models.BooleanField(default=False)),
                ('tcc_pendente', models.BooleanField(default=False)),
                ('enade_pendente', models.BooleanField(default=False)),
                ('colacao_grau_pendente', models.BooleanField(default=False)),
                ('data_integralizacao', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Integralização')),
                ('periodo_letivo_integralizacao', models.PositiveIntegerField(blank=True, choices=[[1, '1'], [2, '2']], null=True, verbose_name='Periodo Letivo da Integralização')),
                ('email_academico', models.EmailField(blank=True, max_length=254, verbose_name='Email Acadêmico')),
                ('email_qacademico', models.EmailField(blank=True, max_length=254, verbose_name='Email Q-Acadêmico')),
                ('email_google_classroom', models.EmailField(blank=True, max_length=254, verbose_name='Email do Google Classroom')),
                ('alterado_em', djtools.db.models.DateTimeFieldPlus(auto_now=True, null=True, verbose_name='Data de Alteração')),
                ('csf', models.BooleanField(default=False, verbose_name='Ciência sem Fronteiras')),
                ('documentada', models.BooleanField(default=False, verbose_name='Doc. Entregue')),
                ('data_documentacao', models.DateTimeField(null=True, verbose_name='Data de Entrega da Documentação')),
                ('pendencia_tcc', models.BooleanField(null=True, verbose_name='Registro de TCC')),
                ('pendencia_enade', models.BooleanField(null=True, verbose_name='Registro do ENADE')),
                ('pendencia_pratica_profissional', models.BooleanField(null=True, verbose_name='Registro de Prática Profissional')),
                ('pendencia_colacao_grau', models.BooleanField(null=True, verbose_name='Colação de Grau')),
                ('pendencia_ch_atividade_complementar', models.BooleanField(null=True, verbose_name='Atividades Complementares')),
                ('pendencia_ch_tcc', models.BooleanField(null=True, verbose_name='Caga-Horária de TCC')),
                ('pendencia_ch_pratica_profissional', models.BooleanField(null=True, verbose_name='Caga-Horária de Prática Profissional')),
                ('pendencia_ch_atividades_aprofundamento', models.BooleanField(null=True, verbose_name='Caga-Horária de Aprofundamento')),
                ('pendencia_ch_atividades_extensao', models.BooleanField(null=True, verbose_name='Caga-Horária de Extensão')),
                ('pendencia_ch_seminario', models.BooleanField(null=True, verbose_name='Caga-Horária de Seminário')),
                ('pendencia_ch_eletiva', models.BooleanField(null=True, verbose_name='Caga-Horária Eletiva')),
                ('pendencia_ch_optativa', models.BooleanField(null=True, verbose_name='Caga-Horária Optativa')),
                ('pendencia_ch_obrigatoria', models.BooleanField(null=True, verbose_name='Caga-Horária Obrigatória')),
                ('pendencia_ch_pratica_como_componente', models.BooleanField(null=True, verbose_name='Carga-Horária Prática como Componente Curricular')),
                ('pendencia_ch_visita_tecnica', models.BooleanField(null=True, verbose_name='Carga-Horária Visita Técnica/Aula de Campo')),
                ('ch_aulas_pcc', models.IntegerField(default=0, help_text='Prática como componente curricular', verbose_name='CH de Aulas de PCC')),
                ('ch_aulas_visita_tecnica', models.IntegerField(default=0, help_text='Visita técnica / aula de campo', verbose_name='CH de Aulas de VT/AC')),
                ('cartao_sus', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Cartão SUS')),
                ('codigo_educacenso', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Código EDUCACENSO')),
                ('nis', djtools.db.models.CharFieldPlus(blank=True, help_text='Número de Identificação Social', max_length=255, null=True, verbose_name='NIS')),
                ('poder_publico_responsavel_transporte', djtools.db.models.CharFieldPlus(blank=True, choices=[['1', 'Municipal'], ['2', 'Estadual']], max_length=255, null=True, verbose_name='Poder Público Responsável pelo Transporte Escolar')),
                ('tipo_veiculo', djtools.db.models.CharFieldPlus(blank=True, choices=[['Rodoviário', [['1', 'Vans/WV'], ['2', 'Kombi Micro-Ônibus'], ['3', 'Ônibus'], ['4', 'Bicicleta'], ['5', 'Tração Animal'], ['6', 'Outro tipo de veículo rodoviário']]], ['Aquaviário', [['7', 'Capacidade de até 5 alunos'], ['8', 'Capacidade entre 5 a 15 alunos'], ['9', 'Capacidade entre 15 e 35 alunos'], ['10', 'Capacidade acima de 35 alunos']]], ['Ferroviário', [['11', 'Trem/Metrô']]]], max_length=255, null=True, verbose_name='Tipo de Veículo Utilizado no Transporte Escolar')),
                ('percentual_ch_cumprida', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, null=True, verbose_name='C.H. Cumprida (%)')),
                ('ano_conclusao_estudo_anterior', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aluno_ano_conclusao_set', to='comum.ano', verbose_name='Ano de Conclusão')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano de Ingresso')),
                ('ano_letivo_integralizacao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aluno_ano_letivo_integralizacao', to='comum.ano', verbose_name='Ano Letivo da Integralização')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
                'ordering': ('pessoa_fisica__nome',),
                'permissions': (('emitir_diploma', 'Pode emitir diploma de Aluno'), ('emitir_boletim', 'Pode emitir boletim de Aluno'), ('emitir_historico', 'Pode emitir histórico de Aluno'), ('efetuar_matricula', 'Pode efetuar matricula de Aluno'), ('pode_editar_caracterizacao', 'Pode editar caracterização'), ('pode_sincronizar_dados', 'Pode sincronizar dados'), ('gerar_relatorio', 'Pode gerar relatórios'), ('pode_ver_chave_acesso_pais', 'Pode ver chave de acesso dos pais'), ('report_dependentes_reprovados', 'Pode gerar relatório de dependentes/reprovados'), ('importar_aluno', 'Pode importar aluno de sistemas legados'), ('change_foto_aluno', 'Pode editar foto do aluno'), ('view_dados_academicos', 'Pode visualizar dados acadêmicos do aluno'), ('view_dados_pessoais', 'Pode visualizar dados pessoais do aluno')),
            },
        ),
        migrations.CreateModel(
            name='AlunoAulaCampo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
            ],
            options={
                'verbose_name': 'Vínculo de Aluno em Aula de Campo',
                'verbose_name_plural': 'Vínculos de Aluno em Aula de Campo',
            },
        ),
        migrations.CreateModel(
            name='AreaCapes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Área Capes',
                'verbose_name_plural': 'Áreas Capes',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='AreaConcentracao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Área de Concentração',
                'verbose_name_plural': 'Áreas de Concentração',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='AreaCurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Área de Curso',
                'verbose_name_plural': 'Áreas de Cursos',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='AssinaturaDigital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reitor_protempore', models.BooleanField(default=False, null=True, verbose_name='Reitor Pro tempore?')),
                ('diretor_geral_protempore', models.BooleanField(blank=True, default=False, verbose_name='Diretor Geral Pro tempore?')),
                ('diploma', djtools.db.models.FileFieldPlus(upload_to='diplomas_eletronicos', verbose_name='Diploma')),
                ('concluida', models.BooleanField(default=False, verbose_name='Concluída')),
                ('data_revogacao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Revogação')),
                ('motivo_revogacao', models.TextField(null=True, verbose_name='Motivo da Revogação')),
                ('id_documentacao_academica_digital', models.IntegerField(default=0, verbose_name='Identificador da Documentação Acadêmica Digital')),
                ('status_documentacao_academica_digital', models.IntegerField(choices=[[0, 'Esperando geração'], [1, 'Geração iniciada'], [2, 'Arquivo Gerado'], [3, 'Assinatura em construção'], [4, 'Assinatura iniciada'], [5, 'Assinatura iniciada'], [6, 'Assinatura finalizada'], [7, 'Registro iniciado'], [8, 'Registrando'], [9, 'Registrando'], [10, 'Documento Concluído'], [11, 'Documento Suspenso'], [12, 'Revogação Solicitada'], [13, 'Revogando'], [14, 'Revogado'], [500, 'Erro preparando geração do documento'], [501, 'Erro gerando documento;'], [502, 'Erro inicializando processamento de assinaturas'], [503, 'Erro finalizando processamento de assinaturas'], [504, 'Erro Iniciando processo de registro'], [505, 'Erro finalizando processo de registro'], [506, 'Erro revogando documento']], null=True, verbose_name='Situação da Documentação Acadêmica Digital')),
                ('id_dados_diploma_digital', models.IntegerField(default=0, verbose_name='Identificador dos Dados do Diploma Digital')),
                ('status_historico_escolar', models.IntegerField(choices=[[0, 'Esperando geração'], [1, 'Geração iniciada'], [2, 'Arquivo Gerado'], [3, 'Assinatura em construção'], [4, 'Assinatura iniciada'], [5, 'Assinatura iniciada'], [6, 'Assinatura finalizada'], [7, 'Registro iniciado'], [8, 'Registrando'], [9, 'Registrando'], [10, 'Documento Concluído'], [11, 'Documento Suspenso'], [12, 'Revogação Solicitada'], [13, 'Revogando'], [14, 'Revogado'], [500, 'Erro preparando geração do documento'], [501, 'Erro gerando documento;'], [502, 'Erro inicializando processamento de assinaturas'], [503, 'Erro finalizando processamento de assinaturas'], [504, 'Erro Iniciando processo de registro'], [505, 'Erro finalizando processo de registro'], [506, 'Erro revogando documento']], null=True, verbose_name='Situação do Histórico Escolar')),
                ('id_historico_escolar', models.IntegerField(default=0, verbose_name='Identificador do Histórico Escolar')),
                ('status_dados_diploma_digital', models.IntegerField(choices=[[0, 'Esperando geração'], [1, 'Geração iniciada'], [2, 'Arquivo Gerado'], [3, 'Assinatura em construção'], [4, 'Assinatura iniciada'], [5, 'Assinatura iniciada'], [6, 'Assinatura finalizada'], [7, 'Registro iniciado'], [8, 'Registrando'], [9, 'Registrando'], [10, 'Documento Concluído'], [11, 'Documento Suspenso'], [12, 'Revogação Solicitada'], [13, 'Revogando'], [14, 'Revogado'], [500, 'Erro preparando geração do documento'], [501, 'Erro gerando documento;'], [502, 'Erro inicializando processamento de assinaturas'], [503, 'Erro finalizando processamento de assinaturas'], [504, 'Erro Iniciando processo de registro'], [505, 'Erro finalizando processo de registro'], [506, 'Erro revogando documento']], null=True, verbose_name='Situação dos Dados do Documentação Digital')),
                ('id_representacao_diploma_digital', models.IntegerField(default=0, verbose_name='Identificador da Representação do Diploma Digital')),
                ('status_representacao_diploma_digital', models.IntegerField(choices=[[0, 'Esperando geração'], [1, 'Geração iniciada'], [2, 'Arquivo Gerado'], [3, 'Assinatura em construção'], [4, 'Assinatura iniciada'], [5, 'Assinatura iniciada'], [6, 'Assinatura finalizada'], [7, 'Registro iniciado'], [8, 'Registrando'], [9, 'Registrando'], [10, 'Documento Concluído'], [11, 'Documento Suspenso'], [12, 'Revogação Solicitada'], [13, 'Revogando'], [14, 'Revogado'], [500, 'Erro preparando geração do documento'], [501, 'Erro gerando documento;'], [502, 'Erro inicializando processamento de assinaturas'], [503, 'Erro finalizando processamento de assinaturas'], [504, 'Erro Iniciando processo de registro'], [505, 'Erro finalizando processo de registro'], [506, 'Erro revogando documento']], null=True, verbose_name='Situação da Representação do Documentação Digital')),
            ],
            options={
                'verbose_name': 'Assinatura Eletrônica',
                'verbose_name_plural': 'Assinaturas Eletrônicas',
            },
        ),
        migrations.CreateModel(
            name='AssinaturaEletronica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reitor_protempore', models.BooleanField(default=False, null=True, verbose_name='Reitor Pro tempore?')),
                ('diretor_geral_protempore', models.BooleanField(blank=True, default=False, verbose_name='Diretor Geral Pro tempore?')),
                ('diploma', djtools.db.models.FileFieldPlus(upload_to='diplomas_eletronicos', verbose_name='Diploma')),
                ('data_assinatura', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Finalização das Assinaturas')),
                ('data_revogacao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Revogação')),
                ('motivo_revogacao', models.TextField(null=True, verbose_name='Motivo da Revogação')),
            ],
            options={
                'verbose_name': 'Assinatura Eletrônica',
                'verbose_name_plural': 'Assinaturas Eletrônicas',
            },
        ),
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.PositiveIntegerField(choices=[[1, 'Primeira'], [2, 'Segunda'], [3, 'Terceira'], [4, 'Quarta'], [5, 'Final']], default=1, verbose_name='Etapa')),
                ('quantidade', models.PositiveIntegerField(default=1, help_text='Quantidade de aulas ministradas')),
                ('url', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='URL da Aula')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('conteudo', models.TextField(verbose_name='Conteúdo')),
                ('tipo', djtools.db.models.PositiveIntegerFieldPlus(choices=[[1, 'Teórica'], [2, 'Prática'], [3, 'Extensão'], [4, 'Prática como Componente Curricular'], [5, 'Visita Técnica/Aula de Campo']], default=1, null=True, verbose_name='Tipo')),
                ('ead', models.BooleanField(blank=True, default=False, verbose_name='EAD')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
                'ordering': ('etapa', 'data'),
            },
        ),
        migrations.CreateModel(
            name='CalendarioAcademico',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('tipo', models.PositiveIntegerField(choices=[[1, 'Anual'], [2, 'Semestral'], [3, 'Livre']], verbose_name='Tipo')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período letivo')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Início das Aulas')),
                ('data_fim', djtools.db.models.DateFieldPlus(verbose_name='Término das Aulas')),
                ('data_fechamento_periodo', djtools.db.models.DateFieldPlus(help_text='Data limite para lançamento de notas/faltas pelos professores', verbose_name='Data de Fechamento do Período')),
                ('eh_calendario_referencia', models.BooleanField(default=False, verbose_name='Calendário de Referência?')),
                ('qtd_etapas', models.PositiveIntegerField(choices=[[1, 'Etapa Única'], [2, 'Duas Etapas'], [4, 'Quatro Etapas']], verbose_name='Quantidade de Etapas')),
                ('data_inicio_etapa_1', djtools.db.models.DateFieldPlus(help_text='Data de início da primeira etapa', verbose_name='Início')),
                ('data_fim_etapa_1', djtools.db.models.DateFieldPlus(help_text='Data de encerramento da primeira etapa', verbose_name='Fim')),
                ('data_inicio_etapa_2', djtools.db.models.DateFieldPlus(blank=True, help_text='Data de início da segunda etapa', null=True, verbose_name='Início')),
                ('data_fim_etapa_2', djtools.db.models.DateFieldPlus(blank=True, help_text='Data de encerramento da segunda etapa', null=True, verbose_name='Fim')),
                ('data_inicio_etapa_3', djtools.db.models.DateFieldPlus(blank=True, help_text='Data de início da terceira etapa', null=True, verbose_name='Início')),
                ('data_fim_etapa_3', djtools.db.models.DateFieldPlus(blank=True, help_text='Data de encerramento da terceira etapa', null=True, verbose_name='Fim')),
                ('data_inicio_etapa_4', djtools.db.models.DateFieldPlus(blank=True, help_text='Data de início da quarta etapa', null=True, verbose_name='Início')),
                ('data_fim_etapa_4', djtools.db.models.DateFieldPlus(blank=True, help_text='Data de encerramento da quarta etapa', null=True, verbose_name='Fim')),
                ('data_inicio_trancamento', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Início do Trancamento')),
                ('data_fim_trancamento', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Encerramento do Trancamento')),
                ('data_inicio_certificacao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Início da Cert. e Aproveitamento')),
                ('data_fim_certificacao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Encerramento da Cert. e Aproveitamento')),
                ('data_inicio_prova_final', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Início da Prova Final')),
                ('data_fim_prova_final', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Encerramento da Prova Final')),
                ('data_inicio_espaco_pedagogico', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Início')),
                ('data_fim_espaco_pedagogico', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Fim')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='calendarios_por_ano_letivo_set', to='comum.ano', verbose_name='Ano letivo')),
            ],
            options={
                'verbose_name': 'Calendário Acadêmico',
                'verbose_name_plural': 'Calendários Acadêmicos',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.unaccent_field.UnaccentField(max_length=255, verbose_name='Nome')),
                ('cep_inicial', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='CEP Inicial')),
                ('cep_final', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='CEP Final')),
                ('codigo', models.CharField(blank=True, help_text='Código IBGE', max_length=10, null=True, verbose_name='Código')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='ClassificacaoComplementarComponenteCurricular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Classificação Complementar de Componente Curricular',
                'verbose_name_plural': 'Classificações Complementares de Componente Curricular',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='CodigoAutenticadorSistec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', djtools.db.models.BrCpfField(max_length=14, verbose_name='CPF')),
                ('codigo_unidade', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código da Unidade')),
                ('codigo_curso', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código do Curso')),
                ('codigo_autenticacao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código de Autenticação')),
            ],
            options={
                'verbose_name': 'Código Autenticador Sistec',
                'verbose_name_plural': 'Códigos Autenticadores Sistec',
            },
        ),
        migrations.CreateModel(
            name='ColacaoGrau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('data_colacao', djtools.db.models.DateFieldPlus(verbose_name='Data de Colação')),
                ('deferida', models.BooleanField(default=False, verbose_name='Deferida')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
            ],
            options={
                'verbose_name': 'Colação de Grau',
                'verbose_name_plural': 'Colações de Grau',
            },
        ),
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('descricao_historico', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição no Diploma e Histórico')),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=255, unique=True)),
                ('ativo', models.BooleanField(default=True, verbose_name='Está ativo')),
                ('ch_hora_relogio', models.PositiveIntegerField(verbose_name='Hora/relógio')),
                ('ch_hora_aula', models.PositiveIntegerField(verbose_name='Hora/aula')),
                ('ch_qtd_creditos', models.PositiveIntegerField(verbose_name='Qtd. de créditos')),
                ('observacao', models.TextField(blank=True, default='', verbose_name='Observação')),
                ('sigla_qacademico', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Sigla do Q-Acadêmico')),
                ('abreviatura', djtools.db.models.CharFieldPlus(max_length=10, null=True, verbose_name='Abreviatura')),
            ],
            options={
                'verbose_name': 'Componente',
                'verbose_name_plural': 'Componentes',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='ComponenteCurricular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_letivo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Período')),
                ('tipo', models.PositiveIntegerField(choices=[[1, 'Regular'], [2, 'Seminário'], [3, 'Prática Profissional'], [4, 'Trabalho de Conclusão de Curso'], [5, 'Atividade de Extensão'], [6, 'Prática como Componente Curricular']])),
                ('optativo', models.BooleanField(default=False)),
                ('is_seminario_estagio_docente', models.BooleanField(default=False, help_text='Marcar caso este componente curricular seja um seminário de estágio docente.', verbose_name='É um Seminário de Estágio Docente? (Ou Estágio Docente de Matriz Anterior)')),
                ('tipo_estagio_docente', models.PositiveIntegerField(blank=True, choices=[[1, 'Estágio Docente I'], [2, 'Estágio Docente II'], [3, 'Estágio Docente III'], [4, 'Estágio Docente IV'], [5, 'Estágio Docente de Matriz Anterior']], null=True, verbose_name='Tipo de Estágio Docente')),
                ('tipo_modulo', models.PositiveIntegerField(blank=True, choices=[[1, 'Módulo I'], [2, 'Módulo II'], [3, 'Módulo III'], [4, 'Módulo IV'], [5, 'Módulo V'], [6, 'Módulo VI'], [7, 'Módulo VII']], null=True, verbose_name='Tipo de Módulo')),
                ('qtd_avaliacoes', models.PositiveIntegerField(choices=[[0, 'Zero'], [1, 'Uma'], [2, 'Duas'], [4, 'Quatro']], verbose_name='Qtd. Avaliações')),
                ('ch_presencial', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Teórica')),
                ('ch_pratica', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Prática')),
                ('ch_extensao', models.PositiveIntegerField(default=0, help_text='Hora-Relógio', verbose_name='Extensão')),
                ('ch_pcc', models.PositiveIntegerField(default=0, help_text='Hora-Relógio', verbose_name='Prática como Componente Curricular')),
                ('ch_visita_tecnica', models.PositiveIntegerField(default=0, help_text='Hora-Relógio', verbose_name='Visita Técnica/Aula de Campo')),
                ('percentual_maximo_ead', models.PositiveIntegerField(default=0, help_text='Percentual máximo de aulas que o professor pode registrar à distância, ou seja, na modalidade EAD.', verbose_name='% Máximo EAD')),
                ('avaliacao_por_conceito', models.BooleanField(default=False, help_text='Marque essa opção caso a representação conceitual da nota deve ser apresentada ao invés do valor numérico.', verbose_name='Avaliação por Conceito')),
                ('is_dinamico', models.BooleanField(default=False, help_text='Marque essa opção caso deseje que a descrição do componente possa ser complementada no diário.', verbose_name='Descrição Dinâmica')),
                ('segundo_semestre', models.BooleanField(default=False, help_text='Marque essa opção caso a disciplina seja ofertada no segundo semestre.', verbose_name='Segundo Semestre')),
                ('pode_fechar_pendencia', models.BooleanField(default=False, verbose_name='Pode Fechar com Pendência')),
                ('ementa', models.TextField(blank=True, default='', null=True, verbose_name='Ementa')),
                ('classificacao_complementar', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.classificacaocomplementarcomponentecurricular', verbose_name='Classificação Complementar')),
                ('co_requisitos', djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='corequisitos_set', to='edu.ComponenteCurricular')),
                ('componente', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componente')),
                ('componente_curricular_associado', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='associados_set', to='edu.componentecurricular')),
            ],
            options={
                'verbose_name': 'Componente Curricular',
                'verbose_name_plural': 'Componentes Curriculares',
                'ordering': ('matriz', 'periodo_letivo', 'componente__descricao', 'tipo', 'nucleo'),
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoAtividadeAprofundamento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Configuração de ATPA',
                'verbose_name_plural': 'Configurações de ATPA',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoAtividadeComplementar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Configuração de AACCs',
                'verbose_name_plural': 'Configurações de AACCs',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.IntegerField(null=True, verbose_name='Etapa')),
                ('forma_calculo', models.IntegerField(choices=[[4, 'Maior Nota'], [2, 'Média Aritmética'], [3, 'Média Ponderada'], [5, 'Soma com Divisor Informado'], [1, 'Soma Simples'], [6, 'Média Atitudinal']], default=2, verbose_name='Forma de Cálculo')),
                ('divisor', models.PositiveIntegerField(blank=True, null=True, verbose_name='Divisor')),
                ('maior_nota', models.BooleanField(default=False, verbose_name='Ignorar Maior Nota')),
                ('menor_nota', models.BooleanField(default=False, verbose_name='Ignorar Menor Nota')),
                ('autopublicar', models.BooleanField(default=True, help_text='As notas das avaliacões serão exibidas aos alunos a medida que forem lançadas.', verbose_name='Autopublicar Notas')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
            ],
            options={
                'verbose_name': 'Configuração de Avaliação',
                'verbose_name_plural': 'Configurações de Avaliação',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoCertificadoENEM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_primeira_prova', djtools.db.models.DateFieldPlus(verbose_name='Data de realização da 1ª Prova')),
                ('pontuacao_necessaria_areas_conhecimento', models.PositiveIntegerField(verbose_name='Pontuação mínima necessária em cada uma das áreas de conhecimento')),
                ('pontuacao_necessaria_redacao', models.PositiveIntegerField(verbose_name='Pontuação mínima necessária na redação')),
                ('numero_portaria', models.TextField(help_text='Exemplo: Portaria Normativa nº 16, de 27 de Julho de 2011', verbose_name='Portaria')),
                ('manual', models.BooleanField(default=False, help_text='Marque apenas se o certificado só puder ser solicitado através do secretário.', verbose_name='Manual')),
                ('ano', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano')),
                ('responsaveis', djtools.db.models.ManyToManyFieldPlus(to='rh.Funcionario', verbose_name='Responsáveis pela Certificação')),
            ],
            options={
                'verbose_name': 'Configuração para Certificação ENEM',
                'verbose_name_plural': 'Configurações para Certificação ENEM',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoCreditosEspeciais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('quantidade_maxima_creditos_especiais', models.PositiveIntegerField(verbose_name='Quantidade Máxima de Créditos Especiais')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Configuração de Créditos Especiais',
                'verbose_name_plural': 'Configurações de Créditos Especiais',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoLivro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('numero_livro', models.PositiveIntegerField(verbose_name='Nº do Livro Atual')),
                ('folhas_por_livro', models.PositiveIntegerField(verbose_name='Folhas por Livro')),
                ('numero_folha', models.PositiveIntegerField(verbose_name='Nº da Folha Atual')),
                ('numero_registro', models.PositiveIntegerField(verbose_name='Nº do Registro Atual')),
                ('codigo_qacademico', models.IntegerField(blank=True, null=True, verbose_name='Código Q-Acadêmico')),
            ],
            options={
                'verbose_name': 'Configuração de Livro de Registros',
                'verbose_name_plural': 'Configurações de Livro de Registros',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoPedidoMatricula',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de Início')),
                ('data_fim', djtools.db.models.DateFieldPlus(verbose_name='Data de Fim')),
                ('impedir_troca_turma', models.BooleanField(default=False, help_text='Marque essa opção caso deseje impedir que alunos do regime seriado possam trocar de turma dentro do seu respectivo turno.', verbose_name='Impedir troca de turma')),
                ('restringir_por_curso', models.BooleanField(default=False, help_text='Marque essa opção caso deseje impedir que os alunos se matriculem em disciplinas de outros cursos.', verbose_name='Restringir por curso')),
                ('requer_atualizacao_dados', models.BooleanField(default=False, help_text='Marque essa opção caso deseje que o aluno atualize seus dados cadastrais no ato do pedido de matrícula.', verbose_name='Requer atualização do cadastro')),
                ('requer_atualizacao_caracterizacao', models.BooleanField(default=False, help_text='Marque essa opção caso deseje que o aluno atualize seus dados da caracterização social no ato do pedido de matrícula.', verbose_name='Requer atualização da caracterização social')),
                ('requer_autorizacao_carteira_estudantil', models.BooleanField(default=False, help_text='Marque essa opção caso deseje que o aluno autorize a utilização dos seus dados pessoais para emissão da carteira de estudante digital', verbose_name='Requer autorização para Emissão da Carteira de Estudante')),
                ('permite_cancelamento_matricula_diario', models.BooleanField(default=False, help_text='Marque essa opção caso o aluno possa solicitar o cancelamento de matrículas em diários nos quais ele já se encontra matriculado.', verbose_name='Permite o cancelamento de matrículas em diário já deferidas')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
            ],
            options={
                'verbose_name': 'Renovação de Matrícula',
                'verbose_name_plural': 'Renovações de Matrícula',
            },
        ),
        migrations.CreateModel(
            name='ConteudoMinicurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('ch', models.PositiveIntegerField(verbose_name='Carga Horária')),
            ],
            options={
                'verbose_name': 'Conteúdo',
                'verbose_name_plural': 'Conteúdos',
            },
        ),
        migrations.CreateModel(
            name='Convenio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Convênio',
                'verbose_name_plural': 'Convênios',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='ConvocacaoENADE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_prova', djtools.db.models.DateFieldPlus(blank=True, help_text='Após inserir esta data, a lista de alunos convocados não poderá ser mais atualizada.', null=True, verbose_name='Data de Realização da Prova')),
                ('encerrado', models.BooleanField(default=False, verbose_name='Encerrado?')),
                ('descricao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Descrição')),
                ('edital', djtools.db.models.FileFieldPlus(blank=True, help_text='Arquivo em PDF referente ao edital de convocação do ENADE.', null=True, upload_to='edu/convocacao_enade_edital/', verbose_name='Edital')),
                ('portaria', djtools.db.models.FileFieldPlus(blank=True, help_text='Arquivo em PDF referente à portaria de convocação do ENADE.', null=True, upload_to='edu/convocacao_enade_edital/', verbose_name='Portaria')),
                ('percentual_minimo_ingressantes', models.PositiveIntegerField(verbose_name='Percentual Mínimo (%) para Ingressantes')),
                ('percentual_maximo_ingressantes', models.PositiveIntegerField(verbose_name='Percentual Máximo (%) para Ingressantes')),
                ('percentual_minimo_concluintes', models.PositiveIntegerField(verbose_name='Percentual Mínimo (%) para Concluintes')),
                ('percentual_maximo_concluintes', models.PositiveIntegerField(verbose_name='Percentual Máximo (%) para Concluintes')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano letivo')),
            ],
            options={
                'verbose_name': 'Convocação do ENADE',
                'verbose_name_plural': 'Convocações do ENADE',
            },
        ),
        migrations.CreateModel(
            name='CoordenadorPolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titular', models.BooleanField(default=False, verbose_name='Titular')),
                ('funcionario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.funcionario', verbose_name='Funcionário')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Credenciamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.PositiveIntegerFieldPlus(choices=[[1, 'Credenciamento'], [2, 'Recredenciamento'], [3, 'Renovação de Recredenciamento']], verbose_name='Tipo')),
                ('tipo_ato', djtools.db.models.CharFieldPlus(choices=[['Parecer', 'Parecer'], ['Resolução', 'Resolução'], ['Decreto', 'Decreto'], ['Portaria', 'Portaria'], ['Lei Federal', 'Lei Federal'], ['Lei Estadual', 'Lei Estadual'], ['Lei Municipal', 'Lei Municipal'], ['Ato Próprio', 'Ato Próprio']], max_length=255, verbose_name='Tipo')),
                ('numero_ato', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número')),
                ('data_ato', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('numero_publicacao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número da Publicação')),
                ('data_publicacao', djtools.db.models.DateFieldPlus(verbose_name='Data da Publicação')),
                ('veiculo_publicacao', djtools.db.models.CharFieldPlus(choices=[['DOU', 'DOU']], max_length=255, verbose_name='Veículo da Publicação')),
                ('secao_publicacao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Seção da Publicação')),
                ('pagina_publicacao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Página da Publicação')),
            ],
            options={
                'verbose_name': 'Credenciamento',
                'verbose_name_plural': 'Credenciamentos',
            },
        ),
        migrations.CreateModel(
            name='CursoCampus',
            fields=[
                ('codigo_academico', models.IntegerField(null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('descricao_historico', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição no Diploma e Histórico')),
                ('codigo_censup', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, verbose_name='Código CENSUP')),
                ('codigo_emec', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, verbose_name='Código EMEC')),
                ('codigo_sistec', djtools.db.models.CharFieldPlus(blank=True, default='', help_text='Separar por ";" sem espaço caso exista mais de um código cadastrado no SISTEC para esse curso. Ex: 00001;00002', max_length=255, verbose_name='Código SISTEC')),
                ('codigo_educacenso', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Código EDUCACENSO')),
                ('ciencia_sem_fronteira', models.BooleanField(default=False, help_text='Prioritário para o programa Ciência sem Fronteiras?', verbose_name='Ciência sem Fronteiras')),
                ('formacao_de_professores', models.BooleanField(default=False, help_text='Marque essa opção caso se trate de um curso de formação de professores', verbose_name='Formação de Professores')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], null=True, verbose_name='Período letivo')),
                ('data_inicio', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data início')),
                ('data_fim', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data fim')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('codigo', djtools.db.models.CharFieldPlus(help_text='Código para composição de turmas e matrículas', max_length=255, unique=True, verbose_name='Código')),
                ('plano_ensino', models.BooleanField(default=False, help_text='Marque essa opção caso os professores necessitem informar o plano de ensino das disciplas nos diários', verbose_name='Exige Plano de Ensino')),
                ('periodicidade', models.PositiveIntegerField(choices=[[1, 'Anual'], [2, 'Semestral'], [3, 'Livre']], null=True, verbose_name='Periodicidade')),
                ('exige_enade', models.BooleanField(default=False)),
                ('exige_colacao_grau', models.BooleanField(default=False, verbose_name='Exige colação de grau')),
                ('assinatura_digital', models.BooleanField(default=False, verbose_name='Certificado/Diploma Assinado via Certificado ICP-Brasil')),
                ('emite_diploma', models.BooleanField(default=False, verbose_name='Certificado/Diploma Emitido pelo Campus')),
                ('assinatura_eletronica', models.BooleanField(default=False, verbose_name='Certificado/Diploma Assinado via Certificado ICP-EDU')),
                ('programa', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, verbose_name='Programa')),
                ('extensao', models.BooleanField(default=False, verbose_name='Curso de Extensão?')),
                ('numero_portaria_coordenador', djtools.db.models.CharFieldPlus(blank=True, help_text='Número da portaria que nomeou o servidor como coordenador do curso.', max_length=255, null=True, verbose_name='Nº Portaria')),
                ('numero_portaria_coordenador_2', djtools.db.models.CharFieldPlus(blank=True, help_text='Número da portaria que nomeou o servidor como vice-coordenador do curso.', max_length=255, null=True, verbose_name='Nº Portaria (vice-coordenador)')),
                ('resolucao_criacao', models.TextField(blank=True, null=True, verbose_name='Documento de Criação')),
                ('titulo_certificado_masculino', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Masculino')),
                ('titulo_certificado_feminino', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Feminino')),
                ('ppc', djtools.db.models.FileFieldPlus(blank=True, default=None, null=True, upload_to='edu/ppc/', verbose_name='PPC')),
                ('ch_total', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='Carga Horária Total h/r')),
                ('ch_aula', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='Carga Horária Total h/a')),
                ('tipo_hora_aula', models.PositiveIntegerField(blank=True, choices=[[45, '45 min'], [60, '60 min']], null=True, verbose_name='Tipo Hora Aula')),
                ('fator_esforco_curso', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=4, null=True, verbose_name='Fator de Esforço de Curso (FEC)')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cursos_por_ano_letivo_set', to='comum.ano', verbose_name='Ano letivo')),
                ('area', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.areacurso', verbose_name='Área')),
                ('area_capes', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.areacapes', verbose_name='Área Capes')),
                ('area_concentracao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.areaconcentracao', verbose_name='Área de Concentração')),
                ('coordenador', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.funcionario')),
                ('coordenador_2', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cursocampus_vicecoordenador_set', to='rh.funcionario', verbose_name='Vice-Coordenador')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ('-ativo',),
            },
        ),
        migrations.CreateModel(
            name='CursoFormacaoSuperior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', djtools.db.models.CharFieldPlus(choices=[['Outros', 'Outros'], ['Humanidades e Artes', 'Humanidades e Artes'], ['Ciências, Matemática e Computação', 'Ciências, Matemática e Computação'], ['Educação', 'Educação'], ['Ciências Sociais, Negócios e Direitos', 'Ciências Sociais, Negócios e Direitos'], ['Engenharia, Produção e Construção', 'Engenharia, Produção e Construção'], ['Saúde e Bem-estar Social', 'Saúde e Bem-estar Social'], ['Agricultura e Veterinária', 'Agricultura e Veterinária'], ['Serviços', 'Serviços']], max_length=255, verbose_name='Área')),
                ('codigo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('grau', djtools.db.models.CharFieldPlus(choices=[['Licenciatura', 'Licenciatura'], ['Tecnológico', 'Tecnológico'], ['Bacharelado', 'Bacharelado']], max_length=255, verbose_name='Grau')),
            ],
            options={
                'verbose_name': 'Curso de Formação Superior',
                'verbose_name_plural': 'Cursos de Formação Superior',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='Diario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('percentual_minimo_ch', models.PositiveIntegerField(verbose_name='Percentual Mínimo (Carga Horária)')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('quantidade_vagas', models.PositiveIntegerField(default=0, verbose_name='Quantidade de Vagas')),
                ('situacao', models.PositiveIntegerField(choices=[[1, 'Aberto'], [2, 'Fechado']], default=1, verbose_name='Situação')),
                ('descricao_dinamica', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Descrição Dinâmica')),
                ('segundo_semestre', models.BooleanField(default=False, verbose_name='Segundo Semestre')),
                ('integracao_com_moodle', models.BooleanField(default=False, verbose_name='Integração com o Moodle')),
                ('url_moodle', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='URL do Moodle')),
                ('url_ambiente_virtual', djtools.db.models.CharFieldPlus(blank=True, help_text='Endereço da plataforma através da qual o professor poderá interagir com seus alunos durante a realização das aulas ou em atividades programadas', max_length=255, null=True, verbose_name='URL do Ambiente Virtual')),
                ('ignorar_choque_horario_renovacao_matricula', models.BooleanField(default=False, verbose_name='Ignorar Choque de Horário na Renovação de Matrícula')),
                ('posse_etapa_1', models.PositiveIntegerField(choices=[[1, 'Professor'], [0, 'Registro Escolar']], default=1)),
                ('posse_etapa_2', models.PositiveIntegerField(choices=[[1, 'Professor'], [0, 'Registro Escolar']], default=1)),
                ('posse_etapa_3', models.PositiveIntegerField(choices=[[1, 'Professor'], [0, 'Registro Escolar']], default=1)),
                ('posse_etapa_4', models.PositiveIntegerField(choices=[[1, 'Professor'], [0, 'Registro Escolar']], default=1)),
                ('posse_etapa_5', models.PositiveIntegerField(choices=[[1, 'Professor'], [0, 'Registro Escolar']], default=1)),
                ('entregue_fisicamente', models.BooleanField(null=True, verbose_name='Entregue Fisicamente')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='diarios_por_ano_letivo_set', to='comum.ano', verbose_name='Ano Letivo')),
                ('calendario_academico', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.calendarioacademico', verbose_name='Calendário Acadêmico')),
                ('componente_curricular', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.componentecurricular', verbose_name='Componente')),
            ],
            options={
                'verbose_name': 'Diário',
                'verbose_name_plural': 'Diários',
                'permissions': (('reabrir_diario', 'Pode reabrir Diário'), ('lancar_nota_diario', 'Pode lançar nota em Diário'), ('mudar_posse_diario', 'Pode mudar posse de Diário'), ('emitir_boletins', 'Pode emitir boletins de Diário')),
            },
        ),
        migrations.CreateModel(
            name='DiarioEspecial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('is_centro_aprendizagem', models.BooleanField(default=False, verbose_name='Centro de Aprendizagem?')),
                ('descricao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Descrição')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
                ('componente', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componente')),
            ],
            options={
                'verbose_name': 'Atividade Específica',
                'verbose_name_plural': 'Atividades Específicas',
                'permissions': (('cadastrar_encontro_diarioespecial', 'Pode cadastrar Encontro na Atividade Específica'),),
            },
        ),
        migrations.CreateModel(
            name='Diretoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_academico', models.IntegerField(null=True)),
                ('ead', models.BooleanField(default=False, verbose_name='Ensino a Distância?')),
                ('tipo', models.PositiveIntegerField(choices=[[1, 'Diretoria Acadêmica'], [2, 'Diretoria de Ensino'], [3, 'Sistêmica']], default=1, verbose_name='Tipo')),
                ('titulo_autoridade_maxima_masculino', djtools.db.models.CharFieldPlus(default='Reitor', help_text='Título masculino da autoridade máxima', max_length=255, verbose_name='Autoridade Máxima (M)')),
                ('titulo_autoridade_maxima_feminino', djtools.db.models.CharFieldPlus(default='Reitora', help_text='Título feminino da autoridade máxima', max_length=255, verbose_name='Autoridade Máxima (F)')),
                ('titulo_autoridade_uo_masculino', djtools.db.models.CharFieldPlus(default='Diretor Geral', help_text='Título masculino do responsável pela unidade', max_length=255, verbose_name='Responsável pela Unidade (M)')),
                ('titulo_autoridade_uo_feminino', djtools.db.models.CharFieldPlus(default='Diretora Geral', help_text='Título feminino da responsável pela unidade', max_length=255, verbose_name='Responsável pela Unidade (F)')),
                ('titulo_autoridade_diretoria_masculino', djtools.db.models.CharFieldPlus(default='Diretor Acadêmico', help_text='Título masculino do responsável pela diretoria', max_length=255, verbose_name='Responsável pela Diretoria (M)')),
                ('titulo_autoridade_diretoria_feminino', djtools.db.models.CharFieldPlus(default='Diretora Acadêmica', help_text='Título feminino da responsável pela diretoria', max_length=255, verbose_name='Responsável pela Diretoria (F)')),
                ('diretor_academico', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diretoracademico_set', to='rh.funcionario')),
                ('diretor_academico_exercicio', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diretoracademicoexercicio_set', to='rh.funcionario')),
                ('diretor_geral', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diretorgeral_set', to='rh.funcionario')),
                ('diretor_geral_exercicio', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='diretorgeralexercicio_set', to='rh.funcionario')),
                ('setor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.setor')),
            ],
            options={
                'verbose_name': 'Diretoria Acadêmica',
                'verbose_name_plural': 'Diretorias Acadêmicas',
                'ordering': ('setor__uo__sigla',),
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Disciplina de Ingresso',
                'verbose_name_plural': 'Disciplinas de Ingresso',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='EixoTecnologico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Eixo Tecnológico',
                'verbose_name_plural': 'Eixos Tecnológicos',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='EquivalenciaComponenteQAcademico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q_academico', models.PositiveIntegerField(verbose_name='Código Q-Acadêmico')),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Sigla')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('carga_horaria', models.PositiveIntegerField(verbose_name='Carga horária')),
                ('componente', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.componente')),
            ],
            options={
                'verbose_name': 'Equivalência Q-Academico',
                'verbose_name_plural': 'Equivalências Q-Academico',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='EstagioDocente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escola', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Escola')),
                ('nivel', models.IntegerField(choices=[[1, 'Fundamental'], [2, 'Médio'], [3, 'Fundamental e Médio']], null=True, verbose_name='Nível de Ensino')),
                ('data_inicio', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Início')),
                ('data_fim', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Encerramento')),
                ('data_final_envio_portfolio', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Final para Envio do Portfólio')),
                ('plano_estagio', djtools.db.models.FileFieldPlus(blank=True, help_text='Plano de atividades do Estágio Docente ou do Programa Residência Pedagógica', max_length=255, null=True, upload_to='edu/planos_de_estagio', verbose_name='Plano de Atividades')),
                ('termo_compromisso', djtools.db.models.FileFieldPlus(blank=True, help_text='Termo de Compromisso do Estágio Docente ou do Programa Residência Pedagógica', max_length=255, null=True, upload_to='edu/termos_compromissos', verbose_name='Termo de Compromisso')),
                ('documentacao_comprobatoria', djtools.db.models.FileFieldPlus(blank=True, help_text='Comprovantes de prática anterior substituem o Plano de Atividades e o Termo de Compromisso.', max_length=255, null=True, upload_to='edu/documentacao_comprobatoria_pratica_anterior', verbose_name='Documentação Comprobatória de Prática Efetiva')),
                ('nome_seguradora', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nome da Seguradora')),
                ('numero_seguro', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Número da Apólice do Seguro')),
                ('nome_professor_colaborador', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nome')),
                ('cpf_professor_colaborador', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='CPF')),
                ('telefone_professor_colaborador', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('cargo_professor_colaborador', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Cargo')),
                ('formacao_professor_colaborador', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Formação')),
                ('email_professor_colaborador', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='E-mail')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('portfolio', djtools.db.models.FileFieldPlus(blank=True, max_length=255, null=True, upload_to='edu/portfolio', verbose_name='Portfólio')),
                ('avaliacao_do_professor_colaborador', djtools.db.models.FileFieldPlus(blank=True, max_length=255, null=True, upload_to='edu/avaliacao_do_professor_colaborador', verbose_name='Avaliação do Professor Colaborador')),
                ('avaliacao_do_orientador', djtools.db.models.FileFieldPlus(blank=True, max_length=255, null=True, upload_to='edu/avaliacao_do_orientador', verbose_name='Avaliação do Orientador')),
                ('ch_final', models.IntegerField(blank=True, null=True, verbose_name='C.H. Final')),
                ('justificativa', models.TextField(blank=True, null=True, verbose_name='Justificativa')),
                ('situacao', models.IntegerField(blank=True, choices=[[1, 'Aguardando Informações Cadastrais'], [2, 'Em Andamento'], [3, 'Aguardando Encerramento'], [4, 'Encerrado por Conclusão'], [5, 'Mudança de Escola'], [6, 'Não Concluído']], default=1, null=True, verbose_name='Situação')),
                ('convenio', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='convenios.convenio', verbose_name='Convênio')),
            ],
            options={
                'verbose_name': 'Estágio Docente',
                'verbose_name_plural': 'Estágios Docentes',
            },
        ),
        migrations.CreateModel(
            name='EstruturaCurso',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Está Ativa')),
                ('percentual_max_aproveitamento', models.PositiveIntegerField(blank=True, default=0, help_text='Percentual (%) máximo de carga horária aproveitada/certificada em relação a carga horária das disciplinas na matriz. Informe 0 (zero) caso esse valor seja indeterminado.', null=True, verbose_name='Percentual Máximo de Aproveitamento')),
                ('numero_max_certificacoes', models.PositiveIntegerField(default=0, help_text='Número máximo de certificação de conhecimento em disciplinas no mesmo período da matriz. Informe 0 (zero) caso esse valor seja indeterminado.', null=True, verbose_name='Número Máximo de Certificações por Período')),
                ('media_certificacao_conhecimento', djtools.db.models.NotaField(default=0, help_text='Média para certificação de conhecimento. Informe 0 (zero) caso esse valor seja indeterminado.', null=True, verbose_name='Média para Certificação')),
                ('quantidade_max_creditos_aproveitamento', models.PositiveIntegerField(blank=True, default=8, help_text='Quantidade máxima de créditos aproveitados/certificados. Informe 0 (zero) caso esse valor seja indeterminado.', null=True, verbose_name='Quantidade Máxima de Créditos para Aproveitamento')),
                ('proitec', models.BooleanField(default=False, help_text='Marque esta opção caso esta estrutura se destine a cursos Proitec.', verbose_name='Proitec')),
                ('tipo_avaliacao', models.PositiveIntegerField(choices=[[1, 'Crédito'], [2, 'Seriado'], [3, 'FIC'], [4, 'Modular']], verbose_name='Tipo de Avaliação')),
                ('limite_reprovacao', models.PositiveIntegerField(blank=True, help_text='Quantidade máxima de reprovações em disciplinas no período que permite os alunos cursarem a próxima série.', null=True, verbose_name='Número Máximo de Reprovações para Aprovação por Dependência')),
                ('qtd_minima_disciplinas', models.PositiveIntegerField(blank=True, help_text='Quantidade mínima de matrículas em disciplinas por período letivo.', null=True, verbose_name='Número Mínimo de Disciplinas por Período')),
                ('numero_disciplinas_superior_periodo', models.PositiveIntegerField(blank=True, help_text='Número máximo de matrículas em disciplinas a mais no período em relação ao número de disciplinas daquele período definido na matriz.', null=True, verbose_name='Número Máximo de Disciplinas extras por Período')),
                ('qtd_max_periodos_subsequentes', models.PositiveIntegerField(blank=True, help_text='Quantidade máxima de períodos subsequentes ao período de referência na qual os alunos podem se matricular em disciplinas.', null=True, verbose_name='Número Máximo de Períodos Subsequentes para Matrícula em Disciplina')),
                ('numero_max_cancelamento_disciplina', models.PositiveIntegerField(blank=True, help_text='Número máximo de cancelamento de disciplinas ao longo do curso.', null=True, verbose_name='Número Máximo de Cancelamentos de Disciplinas')),
                ('criterio_avaliacao', models.PositiveIntegerField(choices=[[1, 'Nota'], [2, 'Frequência']], verbose_name='Critério de Avaliação')),
                ('media_aprovacao_sem_prova_final', djtools.db.models.NotaField(blank=True, null=True, verbose_name='Média para passar sem prova final')),
                ('media_evitar_reprovacao_direta', djtools.db.models.NotaField(blank=True, null=True, verbose_name='Média para não reprovar direto')),
                ('media_aprovacao_avaliacao_final', djtools.db.models.NotaField(blank=True, null=True, verbose_name='Média para aprovação após avaliação final')),
                ('percentual_frequencia', models.PositiveIntegerField(default=90, help_text='Percentual (%) mínimo de frequência para que os alunos não reprovem no período ou na disciplina.', verbose_name='Percentual Mínimo de Frequência')),
                ('reprovacao_por_falta_disciplina', models.BooleanField(default=False, help_text='Marque essa opção caso o controle da frequência seja feita por disciplina e não por módulo/série.', verbose_name='Reprovação por Disciplina')),
                ('limitar_ch_por_tipo_aula', models.BooleanField(default=False, help_text='Marque essa opção caso a carga-horária de aulas definida na vinculação dos componentes às matrizes deva ser utilizada como limite na contabilização das cargas-horárias das aulas registradas no diário pelo professor.', verbose_name='Limitar Carga-Horária por Tipo de Aula')),
                ('ira', models.PositiveIntegerField(choices=[[1, 'Média aritmética das Notas Finais'], [2, 'Média dos componentes pela carga horária dos componentes']], default=1, verbose_name='Forma de Cálculo (I.R.A)')),
                ('permite_fechamento_com_pendencia', models.BooleanField(default=False, help_text='Habilita a possibilidade de fechar o período letivo do aluno mesmo havendo pendências em algum diário.', verbose_name='Permitir fechamento com pendência')),
                ('qtd_periodos_conclusao', models.PositiveIntegerField(default=0, help_text='Quantidade máxima de matrículas em períodos letivos que os alunos podem se matricular até concluir o curso. Informe 0 (zero) caso esse valor seja indeterminado.', verbose_name='Número Máximo de Matrículas em Períodos')),
                ('qtd_max_reprovacoes_periodo', models.PositiveIntegerField(default=0, help_text='Quantidade máxima de reprovações que os alunos podem ter no mesmo período da matriz. Informe 0 (zero) caso esse valor seja indeterminado.', null=True, verbose_name='Número Máximo de Reprovações no Mesmo Período')),
                ('qtd_max_reprovacoes_disciplina', models.PositiveIntegerField(default=0, help_text='Qtd. máxima de reprovações que os alunos podem ter na mesma disciplina. Informe 0 (zero) caso esse valor seja indeterminado.', null=True, verbose_name='Número Máximo de Reprovações na Mesma Disciplina')),
                ('qtd_trancamento_voluntario', models.PositiveIntegerField(blank=True, default=2, help_text='Quantidade máxima de trancamentos de forma voluntária que os alunos podem realizar durante todo o curso.', null=True, verbose_name='Número Máximo de Trancamentos')),
                ('pode_entregar_etapa_sem_aula', models.BooleanField(default=False, help_text='Marque essa opção caso seja permitido a entrega de etapa de diário sem registro de aula lançado para a etapa.', verbose_name='Entregar Etapa Sem Aula')),
                ('pode_lancar_nota_fora_do_prazo', models.BooleanField(default=False, help_text='Marque essa opção caso seja permitido que o professor de diário compartilhado lance nota em data diferente do período de posse da etapa pelo professor.', verbose_name='Lançar Nota Fora do Prazo')),
                ('plano_estudo', models.BooleanField(default=False, help_text='Marque essa opção caso os alunos necessitem solicitar dispensa/planejamento de plano de estudo durante a renovação da matrícula caso tenham ultrapassado o tempo de conclusão mínimo do curso.', verbose_name='Permite Plano de Estudo')),
                ('numero_min_alunos_diario', models.IntegerField(blank=True, help_text='Preencha essa opção caso haja um limite mínimo do número de alunos que devem estar matriculados nos diários.', null=True, verbose_name='Número Mínimo de Alunos em Diários')),
                ('numero_max_alunos_especiais', models.IntegerField(blank=True, help_text='Preencha essa opção apenas caso seja necessário limitar o número de alunos especiais em cursos de pós-graduação.', null=True, verbose_name='Número Máximo de Alunos Especiais')),
                ('requer_declaracao_para_cancelamento_matricula', models.BooleanField(default=False, help_text='Marque essa opção caso seja necessário a apresentação de uma declaração reconhecida em cartório para a realização do cancelamento voluntário no curso.', verbose_name='Requer Declaração para Cancelamento de Matrícula')),
            ],
            options={
                'verbose_name': 'Estrutura de Curso',
                'verbose_name_plural': 'Estruturas de Curso',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', djtools.db.models.CharFieldPlus(default='', max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.PositiveIntegerField(choices=[(1, 'Evento'), (2, 'Palestra')], verbose_name='Tipo do Evento')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data de Realização')),
                ('modelo_certificado_participacao', djtools.db.models.FileFieldPlus(blank=True, help_text='O arquivo de modelo deve ser uma arquivo .docx contendo as marcações #PARTICIPANTE#, #CPF#, #CAMPUS#, #CIDADE#, #UF#, #DATA#, #CODIGOVERIFICADOR#.', null=True, upload_to='edu/modelo_certificado_participacao_evento/', verbose_name='Modelo do Certificado de Participação')),
                ('modelo_certificado_palestrante', djtools.db.models.FileFieldPlus(blank=True, help_text='O arquivo de modelo deve ser uma arquivo .docx contendo as marcações #PARTICIPANTE#, #CPF#, #CAMPUS#, #CIDADE#, #UF#, #DATA#, #CODIGOVERIFICADOR#.', null=True, upload_to='edu/modelo_certificado_palestrante_evento/', verbose_name='Modelo do Certificado de Palestrante')),
                ('modelo_certificado_convidado', djtools.db.models.FileFieldPlus(blank=True, help_text='O arquivo de modelo deve ser uma arquivo .docx contendo as marcações #PARTICIPANTE#, #CPF#, #CAMPUS#, #CIDADE#, #UF#, #DATA#, #CODIGOVERIFICADOR#.', null=True, upload_to='edu/modelo_certificado_convidado_evento/', verbose_name='Modelo do Certificado de Convidado')),
            ],
            options={
                'verbose_name': 'Palestra/Evento',
                'verbose_name_plural': 'Palestras/Eventos',
            },
        ),
        migrations.CreateModel(
            name='Habilitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Habilitação',
                'verbose_name_plural': 'Habilitações',
            },
        ),
        migrations.CreateModel(
            name='HistoricoImportacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateTimeFieldPlus(verbose_name='Data da Importação')),
                ('total_alunos_criados', models.IntegerField(verbose_name='Total de Alunos Criados')),
                ('total_alunos_atualizados', models.IntegerField(verbose_name='Total de Alunos Atualizados')),
                ('total_matriculas_periodo_criadas', models.IntegerField(verbose_name='Total de Matrículas Período Criadas')),
                ('total_matriculas_periodo_atualizadas', models.IntegerField(verbose_name='Total de Matrículas Período Atualizadas')),
            ],
            options={
                'verbose_name': 'Importação Q-Acadêmico',
                'verbose_name_plural': 'Importações Q-Acadêmico',
            },
        ),
        migrations.CreateModel(
            name='HorarioAula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5'], [6, '6'], [7, '7']], verbose_name='Número')),
                ('inicio', djtools.db.models.CharFieldPlus(max_length=5, verbose_name='Início')),
                ('termino', djtools.db.models.CharFieldPlus(max_length=5, verbose_name='Término')),
            ],
            options={
                'verbose_name': 'Horário de Aula',
                'verbose_name_plural': 'Horários das Aulas',
                'ordering': ('turno', 'numero'),
            },
        ),
        migrations.CreateModel(
            name='HorarioFuncionamentoPolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5'], [6, '6']])),
                ('inicio', djtools.db.models.CharFieldPlus(max_length=5, verbose_name='Início')),
                ('termino', djtools.db.models.CharFieldPlus(max_length=5, verbose_name='Término')),
            ],
            options={
                'verbose_name': 'Horário de Funcionamento',
                'verbose_name_plural': 'Horários de Funcionamento',
            },
        ),
        migrations.CreateModel(
            name='InstituicaoEnsinoSuperior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('codigo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[['Pública', 'Pública'], ['Privada', 'Privada']], max_length=255, verbose_name='Tipo')),
                ('dependencia_administrativa', models.IntegerField(choices=[[1, 'Federal'], [2, 'Estadual'], [3, 'Municipal'], [4, 'Privada']], verbose_name='Dependência Administrativa')),
                ('cidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.cidade', verbose_name='Cidade')),
            ],
            options={
                'verbose_name': 'Instituição de Ensino Superior',
                'verbose_name_plural': 'Instituições de Ensino Superior',
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='ItemConfiguracaoAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.IntegerField(choices=[[4, 'Prova'], [2, 'Seminário'], [1, 'Trabalho'], [3, 'Teste'], [5, 'Atividade'], [6, 'Exercício'], [7, 'Atitudinal']], default=4, verbose_name='Tipo da Avaliação')),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Sigla')),
                ('descricao', djtools.db.models.CharFieldPlus(default='', max_length=255, verbose_name='Descrição')),
                ('data', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data da Avaliação')),
                ('nota_maxima', models.PositiveIntegerField(default=100, verbose_name='Nota Máxima')),
                ('peso', models.IntegerField(blank=True, null=True, verbose_name='Peso')),
                ('configuracao_avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaoavaliacao', verbose_name='Configuração da Avaliação')),
            ],
            options={
                'verbose_name': 'Item de Configuração de Avaliação',
                'verbose_name_plural': 'Itens de Configuração de Avaliação',
            },
        ),
        migrations.CreateModel(
            name='JustificativaDispensaENADE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Justif. de Dispensa do ENADE',
                'verbose_name_plural': 'Justif. de Dispensa do ENADE',
            },
        ),
        migrations.CreateModel(
            name='LinhaPesquisa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Linha de Pesquisa',
                'verbose_name_plural': 'Linhas de Pesquisa',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', djtools.db.models.DateTimeFieldPlus(auto_now=True)),
                ('tipo', models.IntegerField(choices=[[1, 'Cadastro'], [2, 'Edição'], [3, 'Exclusão'], [4, 'Visualização']])),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255)),
                ('app', djtools.db.models.CharFieldPlus(max_length=255)),
                ('modelo', djtools.db.models.CharFieldPlus(max_length=255)),
                ('nome_modelo', djtools.db.models.CharFieldPlus(max_length=255)),
                ('ref', models.IntegerField(db_index=True)),
                ('ref_aluno', models.IntegerField(db_index=True, null=True)),
                ('ref_diario', models.IntegerField(db_index=True, null=True)),
                ('aluno', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu.aluno')),
                ('diario', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu.diario')),
                ('user', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='MaterialAula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('arquivo', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/material_aula/', verbose_name='Upload do arquivo')),
                ('url', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Url do arquivo')),
                ('publico', models.BooleanField(default=False, help_text='Permitir que outros professores visualizem o material', verbose_name='Público')),
            ],
            options={
                'verbose_name': 'Material de Aula',
                'verbose_name_plural': 'Materiais de Aula',
                'ordering': ('-data_cadastro',),
            },
        ),
        migrations.CreateModel(
            name='MatriculaDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota_1', djtools.db.models.NotaField(null=True, verbose_name='N1')),
                ('nota_2', djtools.db.models.NotaField(null=True, verbose_name='N2')),
                ('nota_3', djtools.db.models.NotaField(null=True, verbose_name='N3')),
                ('nota_4', djtools.db.models.NotaField(null=True, verbose_name='N4')),
                ('nota_final', djtools.db.models.NotaField(null=True, verbose_name='NAF')),
                ('situacao', models.PositiveIntegerField(choices=[[1, 'Cursando'], [2, 'Aprovado'], [3, 'Reprovado'], [4, 'Prova Final'], [5, 'Reprovado por falta'], [6, 'Trancado'], [7, 'Cancelado'], [8, 'Dispensado'], [9, 'Pendente'], [10, 'Aprovado/Reprovado no Módulo'], [13, 'Transferido']], default=1, verbose_name='Situação')),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario')),
            ],
            options={
                'verbose_name': 'Matrícula em Diário',
                'verbose_name_plural': 'Matrículas em Diário',
                'ordering': ('matricula_periodo__aluno__pessoa_fisica__nome',),
                'permissions': (('delete_matriculadiario_cancelada_trancada', 'Pode excluir do diário aluno com matrícula período cancelada ou trancada'),),
            },
        ),
        migrations.CreateModel(
            name='MatriculaPeriodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_letivo', models.PositiveIntegerField(db_index=True, verbose_name='Período Letivo')),
                ('periodo_matriz', models.PositiveIntegerField(null=True, verbose_name='Período Matriz')),
                ('excluida', models.BooleanField(default=False, verbose_name='Excluída do Q-Acadêmico')),
                ('codigo_turma_qacademico', models.CharField(max_length=255, null=True, verbose_name='Código da Turma do Q-Acadêmico')),
                ('cursou_acc_qacademico', models.BooleanField(default=False, verbose_name='Curso Atividade Complementar no Q-Acadêmico')),
                ('gerada_suap', models.BooleanField(default=False, verbose_name='Matrícula-Período Gerada pelo SUAP')),
                ('codigo_educacenso', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Código EDUCACENSO')),
                ('percentual_ch_cumprida', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, null=True, verbose_name='C.H. Cumprida (%)')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
            ],
            options={
                'verbose_name': 'Matrícula em Período',
                'verbose_name_plural': 'Matrículas em Período',
                'ordering': ('ano_letivo__ano', 'periodo_letivo'),
            },
        ),
        migrations.CreateModel(
            name='Matriz',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('periodo_criacao', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], default=1, verbose_name='Período Criação')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativa')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de início')),
                ('data_fim', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de fim')),
                ('ppp', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/ppp/', verbose_name='PPP')),
                ('qtd_periodos_letivos', models.PositiveIntegerField(choices=[[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], [10, 10], [11, 11], [12, 12]], verbose_name='Quantidade de Períodos Letivos')),
                ('ch_componentes_obrigatorios', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Componentes obrigatórios')),
                ('ch_componentes_optativos', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Componentes optativos')),
                ('ch_componentes_eletivos', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Componentes eletivos')),
                ('ch_seminarios', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Seminários')),
                ('ch_pratica_profissional', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Prática Profissional')),
                ('ch_atividades_complementares', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Atividades complementares')),
                ('ch_atividades_aprofundamento', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Atividades Teórico-Práticas de Aprofundamento')),
                ('ch_atividades_extensao', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Atividades de Extensão')),
                ('ch_componentes_tcc', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Trabalho de Conclusão de Curso')),
                ('ch_pratica_como_componente', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Prática como Componente Curricular')),
                ('ch_visita_tecnica', models.PositiveIntegerField(help_text='Hora-Relógio', verbose_name='Visita Técnica/Aula de Campo')),
                ('inconsistente', models.BooleanField(default=False)),
                ('exige_tcc', models.BooleanField(default=False, help_text='Marque essa opção caso a apresentação de um trabalho de conclusão de curso seja um pré-requisito para a finalização do curso', verbose_name='Exige TCC')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('exige_estagio', models.BooleanField(default=False, help_text='Marque essa opção caso a realização de estágio seja um pré-requisito para a finalização do curso', verbose_name='Exige Estágio e Afins')),
                ('ch_minima_estagio', models.PositiveIntegerField(blank=True, help_text='Hora', null=True, verbose_name='Carga Horária Mínima de Estágio e Afins')),
                ('periodo_minimo_estagio_obrigatorio', models.IntegerField(blank=True, choices=[['', '------'], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9]], help_text='Período mínimo para realização do Estágio Obrigatório', null=True, verbose_name='Período Mínimo para Estágio Obrigatório')),
                ('periodo_minimo_estagio_nao_obrigatorio', models.IntegerField(blank=True, choices=[['', '------'], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9]], help_text='Período mínimo para realização do Estágio Não Obrigatório', null=True, verbose_name='Período Mínimo para Estágio Não Obrigatório')),
                ('ano_criacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Criação')),
                ('componentes', models.ManyToManyField(through='edu.ComponenteCurricular', to='edu.Componente')),
                ('configuracao_atividade_academica', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaoatividadecomplementar', verbose_name='Configuração de AACC')),
                ('configuracao_atividade_aprofundamento', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaoatividadeaprofundamento', verbose_name='Configuração de ATPA')),
                ('configuracao_creditos_especiais', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaocreditosespeciais', verbose_name='Configuração de Créditos Especiais')),
                ('estrutura', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.estruturacurso')),
            ],
            options={
                'verbose_name': 'Matriz Curricular',
                'verbose_name_plural': 'Matrizes Curriculares',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='MatrizCurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolucao_criacao', models.TextField(blank=True, null=True, verbose_name='Documento de Criação')),
                ('resolucao_data', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Criação')),
                ('reconhecimento_texto', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('reconhecimento_data', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data')),
                ('search', djtools.db.models.SearchField(blank=True, default='', editable=False)),
                ('curso_campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.cursocampus', verbose_name='Curso')),
                ('matriz', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriz', verbose_name='Matriz')),
            ],
            options={
                'verbose_name': 'Vínculo de Matriz em Curso',
                'verbose_name_plural': 'Vínculos de Matriz em Curso',
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Assunto')),
                ('conteudo', models.TextField(verbose_name='Conteúdo')),
                ('anexo', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/mensagem/', verbose_name='Anexo')),
                ('data_envio', models.DateTimeField(auto_now=True)),
                ('via_suap', models.BooleanField(default=True, verbose_name='Via SUAP')),
                ('via_email', models.BooleanField(default=False, verbose_name='Via E-mail')),
                ('destinatarios', djtools.db.models.ManyToManyFieldPlus(related_name='destinatarios_set', to=settings.AUTH_USER_MODEL, verbose_name='Destinatários')),
                ('remetente', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='remetente_set', to=settings.AUTH_USER_MODEL, verbose_name='Remetente')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
                'ordering': ('-data_envio',),
            },
        ),
        migrations.CreateModel(
            name='Modalidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Modalidade/Forma de Ensino',
                'verbose_name_plural': 'Modalidades/Formas de Ensino',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='NaturezaParticipacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Natureza de Participação',
                'verbose_name_plural': 'Naturezas de Participação',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='NivelEnsino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Nível de Ensino',
                'verbose_name_plural': 'Níveis de Ensino',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='Nucleo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Núcleo',
                'verbose_name_plural': 'Núcleos',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='NucleoCentralEstruturante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Núcleo Central Estruturante',
                'verbose_name_plural': 'Núcleos Centrais Estruturantes',
            },
        ),
        migrations.CreateModel(
            name='OrgaoEmissorRg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Orgão Emissor de Identidade',
                'verbose_name_plural': 'Orgãos Emissores de Identidade',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
            },
        ),
        migrations.CreateModel(
            name='PedidoMatricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autorizacao_carteira_estudantil', models.BooleanField(default=False, help_text='Autorizo o envio dos meus dados pessoais para o Sistema Brasileiro de Educação (SEB) para fins de emissão da carteira de estudante digital', verbose_name='Autorização para Emissão da Carteira de Estudante')),
                ('configuracao_pedido_matricula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaopedidomatricula')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
                ('matriculas_diario_canceladas', djtools.db.models.ManyToManyFieldPlus(to='edu.MatriculaDiario', verbose_name='Matrículas em Diário Canceladas')),
            ],
            options={
                'verbose_name': 'Pedido de Matrícula',
                'verbose_name_plural': 'Pedidos de Matrícula',
                'permissions': (('pode_quebrar_quantidade_minima', 'Pode quebrar quantidade mínima de disciplinas exigidas para matrícula'),),
            },
        ),
        migrations.CreateModel(
            name='PeriodoLetivoAtual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField()),
                ('periodo', models.IntegerField()),
                ('user', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanoEnsino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ementa', models.TextField(blank=True, default='', verbose_name='Ementa')),
                ('justificativa', models.TextField(blank=True, default='', verbose_name='Justificativa')),
                ('objetivo_geral', models.TextField(blank=True, default='', verbose_name='Objetivo Geral')),
                ('objetivos_especificos', models.TextField(blank=True, default='', verbose_name='Objetivos Específicos')),
                ('conteudo_programatico', models.TextField(blank=True, default='', verbose_name='Conteúdo Programático')),
                ('metodologia', models.TextField(blank=True, default='', verbose_name='Metodologia')),
                ('informacoes_adicionais', models.TextField(blank=True, default='', verbose_name='Informações Adicionais')),
                ('data_submissao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Submissão')),
                ('data_aprovacao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Aprovação')),
                ('data_homologacao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data da Homologação')),
                ('coordenador_curso', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.funcionario', verbose_name='Coordenador do Curso')),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario')),
            ],
            options={
                'verbose_name': 'Plano de Ensino',
                'verbose_name_plural': 'Planos de Ensino',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Polo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição do Polo')),
                ('sigla', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Sigla')),
                ('codigo_academico', models.IntegerField(null=True, verbose_name='Código Acadêmico')),
                ('codigo_censup', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, verbose_name='Código CENSUP')),
                ('estrutura_disponivel', models.TextField(blank=True, null=True, verbose_name='Estrutura Disponível')),
                ('logradouro', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Logradouro')),
                ('numero', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('complemento', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('bairro', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('cep', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('do_municipio', models.BooleanField(default=False, verbose_name='Polo do Município')),
                ('telefone_principal', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone Principal')),
                ('telefone_secundario', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone Secundário')),
                ('campus_atendimento', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus de Atendimento')),
                ('cidade', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.cidade', verbose_name='Cidade')),
                ('diretoria', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria', verbose_name='Diretoria Acadêmica')),
            ],
            options={
                'verbose_name': 'Polo EAD',
                'verbose_name_plural': 'Polos EAD',
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulacao', djtools.db.models.CharFieldPlus(blank=True, choices=[['Graduado', 'Graduado'], ['Graduada', 'Graduada'], ['Especialista', 'Especialista'], ['Mestre', 'Mestre'], ['Mestra', 'Mestra'], ['Doutor', 'Doutor'], ['Doutora', 'Doutora'], ['Pós-Doutor', 'Pós-Doutor'], ['Pós-Doutora', 'Pós-Doutora']], max_length=255, null=True, verbose_name='Titulação')),
                ('ultima_instituicao_de_titulacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Instituição onde recebeu a última titulação')),
                ('area_ultima_titulacao', djtools.db.models.CharFieldPlus(blank=True, choices=[['99', 'Programas básicos'], ['01', 'Educação'], ['02', 'Artes e humanidades'], ['03', 'Ciências sociais, comunicação e informação'], ['04', 'Negócios, administração e direito'], ['05', 'Ciências naturais, matemática e estatística'], ['06', 'Computação e Tecnologias da Informação e Comunicação (TIC)'], ['07', 'Engenharia, produção e construção'], ['08', 'Agricultura, silvicultura, pesca e veterinária'], ['09', 'Saúde e bem-estar'], ['10', 'Serviços']], max_length=255, null=True, verbose_name='Área da Última Titulação')),
                ('ano_inicio_curso_superior', models.IntegerField(blank=True, null=True, verbose_name='Ano de Início do Curso Superior')),
                ('ano_conclusao_curso_superior', models.IntegerField(blank=True, null=True, verbose_name='Ano de Conclusão do Curso Superior')),
                ('possui_formacao_complementar', models.BooleanField(default=False, verbose_name='Possui formação/complementação pedagógica')),
                ('codigo_curso_superior', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Código do Curso Superior')),
                ('foto', djtools.thumbs.ImageWithThumbsField(blank=True, null=True, storage=djtools.storages.storage.FileSystemStoragePlus(), upload_to='professores')),
                ('ano_ultima_titulacao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano da Última Titulação')),
                ('curso_superior', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.cursoformacaosuperior', verbose_name='Curso Superior')),
                ('cursos_lecionados', djtools.db.models.ManyToManyFieldPlus(to='edu.CursoCampus', verbose_name='Cursos Lecionados')),
                ('disciplina', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.disciplina', verbose_name='Disciplina de Ingresso')),
                ('instituicao_ensino_superior', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.instituicaoensinosuperior', verbose_name='Instituição de Ensino Superior')),
                ('nce', djtools.db.models.ManyToManyFieldPlus(blank=True, to='edu.NucleoCentralEstruturante', verbose_name='Núcleo Central Estruturante')),
                ('pessoa_fisica_remover', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.pessoafisica', verbose_name='Pessoa Física')),
                ('vinculo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.vinculo', verbose_name='Vínculo')),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
                'ordering': ('vinculo__pessoa__nome',),
                'permissions': (('pode_ver_cpf_professor', 'Pode visualizar o CPF do professor'), ('eh_professor', 'É professor')),
            },
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='QuestaoEducacenso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_campo', models.PositiveIntegerField(verbose_name='Número do Campo')),
                ('nome_campo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome do Campo')),
                ('resposta_privada', models.BooleanField(default=False, help_text='Marque esta opção caso este campo deva ser respondido somente pelo Administrador Acadêmico.', verbose_name='Resposta Privada')),
                ('regra_resposta', models.TextField(blank=True, null=True, verbose_name='Regra de Preenchimento')),
                ('tipo_resposta', djtools.db.models.CharFieldPlus(choices=[['1', 'Sim/Não'], ['2', 'Numérica']], max_length=1, verbose_name='Tipo de Resposta')),
                ('tipo_obrigatoriedade', djtools.db.models.CharFieldPlus(choices=[['1', 'Obrigatório'], ['2', 'Condicional'], ['3', 'Não Obrigatório']], max_length=1, verbose_name='Tipo de Obrigatoriedade')),
            ],
            options={
                'verbose_name': 'Questão Educacenso',
                'verbose_name_plural': 'Questões Educacenso',
                'ordering': ('numero_campo',),
            },
        ),
        migrations.CreateModel(
            name='Requerimento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Código')),
                ('tipo', models.IntegerField(choices=[[1, 'Mudança de Turno'], [2, 'Mudança de Curso'], [3, 'Mudança de Turma'], [5, 'Justificativa de Falta'], [6, 'Lançamento ou Revisão de Faltas/Notas/Situação'], [7, 'Renovação / Reabertura de Matrícula'], [8, 'Trancamento de Matrícula'], [20, 'Cancelamento de Disciplina'], [21, 'Matrícula em Disciplina'], [9, 'Cancelamento de Matrícula'], [10, 'Afastamento'], [11, 'Licença'], [12, 'Atendimento Domiciliar'], [13, 'Dispensa de Atividades'], [14, 'Inclusão/Remoção de Disciplinas'], [15, 'Adequação de Horários'], [16, 'Estudo Individualizado'], [17, 'Realização de Trabalhos/Provas'], [18, 'Aproveitamento de Estudos'], [19, 'Certificação de Conhecimentos'], [100, 'Outro']], verbose_name='Tipo')),
                ('data', models.DateField(verbose_name='Data')),
                ('localizacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Localização')),
                ('inicio', models.DateField(blank=True, null=True, verbose_name='Início')),
                ('termino', models.DateField(blank=True, null=True, verbose_name='Término')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição/Justificativa')),
                ('situacao', models.CharField(blank=True, choices=[['Em Andamento', 'Em Andamento'], ['Arquivado', 'Arquivado']], default='Em Andamento', max_length=255, null=True, verbose_name='Situação')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('deferido', models.BooleanField(null=True, verbose_name='Deferido')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
                ('atendente', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Atendente')),
                ('curso_campus', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.cursocampus', verbose_name='Curso')),
                ('diario', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.diario', verbose_name='Diário')),
            ],
            options={
                'verbose_name': 'Requerimento',
                'verbose_name_plural': 'Requerimentos',
            },
        ),
        migrations.CreateModel(
            name='SequencialMatricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefixo', djtools.db.models.CharFieldPlus(max_length=255)),
                ('contador', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SituacaoMatricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_academico', models.IntegerField(null=True)),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Situação de Matrícula',
                'verbose_name_plural': 'Situações de Matrículas',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='SituacaoMatriculaPeriodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_academico', models.IntegerField(null=True)),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Situação de Matrícula no Período',
                'verbose_name_plural': 'Situações de Matrículas no Período',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoUsuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, null=True, verbose_name='Data da Solicitação')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(null=True)),
                ('atendida', models.BooleanField(default=False, verbose_name='Atendida')),
                ('razao_indeferimento', models.TextField(null=True, verbose_name='Razão do Indeferimento')),
                ('avaliador', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solicitacao_avaliador_set', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
                ('solicitante', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solicitacao_solicitante_set', to=settings.AUTH_USER_MODEL, verbose_name='Solicitante')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus')),
            ],
            options={
                'verbose_name': 'Solicitação de Usuário',
                'verbose_name_plural': 'Solicitações de Usuários',
                'ordering': ('data_solicitacao',),
            },
        ),
        migrations.CreateModel(
            name='TipoAlunoArquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=120, unique=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
            ],
            options={
                'verbose_name': 'Tipo de Documento da Pasta Documental',
                'verbose_name_plural': 'Tipos de Documentos da Pasta Documental',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoComponente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Componente',
                'verbose_name_plural': 'Tipos de Componente',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='TipoMedidaDisciplinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Medida Disciplinar',
                'verbose_name_plural': 'Tipos de Medidas Disciplinares',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='TipoPremiacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Premiação',
                'verbose_name_plural': 'Tipos de Premiações',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='TipoProfessorDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Professor em Diário',
                'verbose_name_plural': 'Tipos de Professor em Diário',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='VinculoProfessorEAD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Vínculo dos Professores EAD',
                'verbose_name_plural': 'Vínculos dos Professores EAD',
            },
        ),
        migrations.CreateModel(
            name='PeriodoLetivoAtualPolo',
            fields=[
                ('periodoletivoatual_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='edu.periodoletivoatual')),
            ],
            options={
                'abstract': False,
            },
            bases=('edu.periodoletivoatual',),
        ),
        migrations.CreateModel(
            name='PeriodoLetivoAtualSecretario',
            fields=[
                ('periodoletivoatual_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='edu.periodoletivoatual')),
            ],
            options={
                'abstract': False,
            },
            bases=('edu.periodoletivoatual',),
        ),
        migrations.CreateModel(
            name='RequerimentoCancelamentoDisciplina',
            fields=[
                ('requerimento_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='edu.requerimento')),
            ],
            options={
                'abstract': False,
            },
            bases=('edu.requerimento',),
        ),
        migrations.CreateModel(
            name='RequerimentoMatriculaDisciplina',
            fields=[
                ('requerimento_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='edu.requerimento')),
            ],
            options={
                'abstract': False,
            },
            bases=('edu.requerimento',),
        ),
        migrations.CreateModel(
            name='SolicitacaoProrrogacaoEtapa',
            fields=[
                ('solicitacaousuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='edu.solicitacaousuario')),
                ('etapa', models.IntegerField()),
                ('motivo', models.TextField(null=True, verbose_name='Motivo')),
            ],
            options={
                'verbose_name': 'Solicitação de Prorrogação de Etapa',
                'verbose_name_plural': 'Solicitações de Prorrogação de Etapa',
            },
            bases=('edu.solicitacaousuario',),
        ),
        migrations.CreateModel(
            name='SolicitacaoRelancamentoEtapa',
            fields=[
                ('solicitacaousuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='edu.solicitacaousuario')),
                ('etapa', models.IntegerField()),
                ('motivo', models.TextField(null=True, verbose_name='Motivo')),
            ],
            options={
                'verbose_name': 'Solicitação de Relançamento de Etapa',
                'verbose_name_plural': 'Solicitações de Relançamento de Etapa',
            },
            bases=('edu.solicitacaousuario',),
        ),
        migrations.CreateModel(
            name='VisitaEstagioDocente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_visita', djtools.db.models.DateFieldPlus(verbose_name='Data da Visita')),
                ('relatorio', djtools.db.models.FileFieldPlus(blank=True, max_length=255, null=True, upload_to='edu/relatorio_visita', verbose_name='Relatório de Visita')),
                ('desenvolvendo_atividades_previstas', models.BooleanField(verbose_name='O aluno está desenvolvendo as atividades previstas?')),
                ('informacoes_complementares', models.TextField(blank=True, help_text='Informações consideradas relevantes, mas que não foram contempladas no itens anteriores.', verbose_name='Informações Complementares')),
                ('estagio_docente', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.estagiodocente', verbose_name='Estágio Docente')),
            ],
            options={
                'verbose_name': 'Visita do Orientador',
                'verbose_name_plural': 'Visitas do Orientador',
            },
        ),
        migrations.CreateModel(
            name='TutorPolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cursos', djtools.db.models.ManyToManyFieldPlus(related_name='tutor_set2', to='edu.CursoCampus', verbose_name='Cursos')),
                ('funcionario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.funcionario', verbose_name='Tutor')),
                ('polo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.polo', verbose_name='Polo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TurmaMinicurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de Início')),
                ('data_fim', djtools.db.models.DateFieldPlus(verbose_name='Data de Fim')),
                ('gerar_matricula', models.BooleanField(default=False, verbose_name='Gerar Matrícula')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
                ('participantes', models.ManyToManyField(blank=True, to='edu.Aluno')),
            ],
            options={
                'verbose_name': 'Turma do Minicurso',
                'verbose_name_plural': 'Turmas do Minicurso',
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Código')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('periodo_matriz', models.PositiveIntegerField(verbose_name='Período Turma')),
                ('sequencial', models.PositiveIntegerField(default=1)),
                ('quantidade_vagas', models.PositiveIntegerField(default=0, verbose_name='Quantidade de Vagas')),
                ('sigla', djtools.db.models.CharFieldPlus(blank=True, default='', max_length=255, null=True)),
                ('codigo_educacenso', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Código EDUCACENSO')),
                ('pertence_ao_plano_retomada', models.BooleanField(default=False, help_text='Adicionada ao plano de retomada de aulas em virtude da pandemia (COVID19)', verbose_name='Plano de Retomada')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='turma_por_ano_letivo_set', to='comum.ano', verbose_name='Ano Letivo')),
                ('calendario_academico', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.calendarioacademico')),
                ('curso_campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.cursocampus', verbose_name='Curso')),
                ('matriz', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.matriz')),
                ('polo', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.polo', verbose_name='Polo EAD')),
                ('turno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turno', verbose_name='Turno')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
                'ordering': ('descricao',),
                'permissions': (('gerar_turmas', 'Gerar Turmas'),),
            },
        ),
        migrations.CreateModel(
            name='Trabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.IntegerField(verbose_name='Etapa')),
                ('data_solicitacao', djtools.db.models.DateFieldPlus(auto_now=True, verbose_name='Data da Solicitação')),
                ('data_limite_entrega', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data Limite')),
                ('titulo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('arquivo', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='trabalhos', verbose_name='Arquivo')),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario', verbose_name='Diário')),
            ],
            options={
                'verbose_name': 'Trabalho',
                'verbose_name_plural': 'Trabalhos',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='TopicoDiscussao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.IntegerField(verbose_name='Etapa')),
                ('data', djtools.db.models.DateTimeFieldPlus(auto_now=True, verbose_name='Data')),
                ('titulo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario', verbose_name='Diário')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Tópico',
                'verbose_name_plural': 'Tópicos',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='TipoAtividadeComplementar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('modalidades', djtools.db.models.ManyToManyFieldPlus(blank=True, to='edu.Modalidade', verbose_name='Modalidades de Ensino')),
            ],
            options={
                'verbose_name': 'Tipo de Atividade Complementar',
                'verbose_name_plural': 'Tipos de Atividades Complementares',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='TipoAtividadeAprofundamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('modalidades', djtools.db.models.ManyToManyFieldPlus(blank=True, to='edu.Modalidade', verbose_name='Modalidades de Ensino')),
            ],
            options={
                'verbose_name': 'Tipo de Atividade Teórico-Práticas de Aprofundamento',
                'verbose_name_plural': 'Tipos de Atividades Teórico-Práticas de Aprofundamento',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoCertificadoENEM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=20, verbose_name='CPF')),
                ('email', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Email')),
                ('telefone', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('tipo_certificado', models.IntegerField(choices=[[1, 'Completo'], [2, 'Parcial']], verbose_name='Tipo de Certificado')),
                ('documento_identidade_frente', djtools.db.models.FileFieldPlus(null=True, upload_to='edu/solicitacao_certificado_enem/', verbose_name='Cópia do documento de identidade - Frente')),
                ('documento_identidade_verso', djtools.db.models.FileFieldPlus(null=True, upload_to='edu/solicitacao_certificado_enem/', verbose_name='Cópia do documento de identidade - Verso')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, verbose_name='Data da Solicitação')),
                ('avaliada', models.BooleanField(default=False, verbose_name='Avaliada')),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(null=True)),
                ('razao_indeferimento', models.TextField(null=True, verbose_name='Razão do Indeferimento')),
                ('razao_ressalva', models.TextField(null=True, verbose_name='Razão da Ressalva')),
                ('codigo_geracao_solicitacao', djtools.db.models.CharFieldPlus(max_length=16, null=True)),
                ('solicitacao_manual', models.BooleanField(default=False)),
                ('avaliador', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solicitacao_certificado_enem_avaliador_set', to=settings.AUTH_USER_MODEL, verbose_name='Avaliador')),
                ('configuracao_certificado_enem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaocertificadoenem', verbose_name='Edição do ENEM')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus')),
            ],
            options={
                'verbose_name': 'Solicitação de Certificado ENEM',
                'verbose_name_plural': 'Solicitações de Certificado ENEM',
            },
        ),
        migrations.CreateModel(
            name='SolicitacaoAssinaturaEletronica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chave', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Chave')),
                ('data_assinatura', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Assinatura')),
                ('assinatura_eletronica', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.assinaturaeletronica', verbose_name='Assinatura Eletrônica')),
                ('vinculo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.vinculo', verbose_name='Vínculo')),
            ],
            options={
                'verbose_name': 'Solicitação de Assinatura Eletrônica',
                'verbose_name_plural': 'Solicitações de Assinatura Eletrônica',
            },
        ),
        migrations.CreateModel(
            name='SincronizacaoAssinaturaDigital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now=True, verbose_name='Data/Hora')),
                ('detalhe', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Detalhe')),
                ('assinatura_digital', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.assinaturadigital', verbose_name='Registro de Emissão')),
            ],
            options={
                'verbose_name': 'Registro de Sincronização',
                'verbose_name_plural': 'Registros de Sincronização',
                'ordering': ('-data_hora',),
            },
        ),
        migrations.CreateModel(
            name='RespostaEducacenso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resposta', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Resposta')),
                ('campus', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus')),
                ('questao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.questaoeducacenso', verbose_name='Questão')),
            ],
            options={
                'ordering': ('campus__sigla', 'questao__numero_campo'),
            },
        ),
        migrations.CreateModel(
            name='RespostaDiscussao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateTimeFieldPlus(auto_now=True, verbose_name='Data')),
                ('comentario', models.TextField(verbose_name='Comentário')),
                ('topico', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.topicodiscussao', verbose_name='Tópico')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Resposta',
                'verbose_name_plural': 'Respostas',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='requerimento',
            name='turma',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.turma', verbose_name='Turma'),
        ),
        migrations.AddField(
            model_name='requerimento',
            name='turno',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.turno', verbose_name='Turno'),
        ),
        migrations.CreateModel(
            name='RepresentacaoConceitual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('valor_minimo', djtools.db.models.NotaField(verbose_name='Valor Mínimo')),
                ('valor_maximo', djtools.db.models.NotaField(verbose_name='Valor Máximo')),
                ('estrutura_curso', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.estruturacurso')),
            ],
            options={
                'verbose_name': 'Representação Conceitual',
                'verbose_name_plural': 'Representações Conceituais',
            },
        ),
        migrations.CreateModel(
            name='RegistroLeitura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_leitura', models.DateTimeField(auto_now=True)),
                ('destinatario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Destinatário')),
                ('mensagem', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.mensagem', verbose_name='Mensagem')),
            ],
            options={
                'verbose_name': 'Registro de Leitura',
                'verbose_name_plural': 'Registros de Leituras',
            },
        ),
        migrations.CreateModel(
            name='RegistroHistorico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_diario', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('codigo_turma', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('media_final_disciplina', djtools.db.models.NotaField(null=True)),
                ('conceito', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('frequencia', models.PositiveIntegerField(null=True)),
                ('situacao', models.PositiveIntegerField(choices=[[1, 'Cursando'], [2, 'Aprovado'], [3, 'Reprovado'], [4, 'Prova Final'], [5, 'Reprovado por falta'], [6, 'Trancado'], [7, 'Cancelado'], [8, 'Dispensado'], [9, 'Pendente'], [10, 'Aprovado/Reprovado no Módulo'], [13, 'Transferido'], [11, 'Aproveit. Disciplina'], [12, 'Cert. Conhecimento']])),
                ('codigo_professor', models.PositiveIntegerField(null=True)),
                ('nome_professor', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('titularidade_professor', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('componente', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componente')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
            ],
            options={
                'verbose_name': 'Registro de Histórico',
                'verbose_name_plural': 'Registros de Histórico',
            },
        ),
        migrations.CreateModel(
            name='RegistroExclusao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_exclusao', models.DateTimeField(auto_now=True)),
                ('destinatario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Destinatário')),
                ('mensagem', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.mensagem', verbose_name='Mensagem')),
            ],
            options={
                'verbose_name': 'Registro de Exclusão',
                'verbose_name_plural': 'Registros de Exclusões',
            },
        ),
        migrations.CreateModel(
            name='RegistroEmissaoDiploma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sistema', djtools.db.models.CharFieldPlus(choices=[['SUAP', 'SUAP'], ['Q-ACADÊMICO', 'Q-ACADÊMICO'], ['SICA', 'SICA']], default='SUAP', max_length=255, verbose_name='Sistema')),
                ('livro', models.PositiveIntegerField(null=True)),
                ('folha', models.PositiveIntegerField(null=True)),
                ('numero_registro', models.PositiveIntegerField(null=True, verbose_name='Número do Registro')),
                ('numero_formulario', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número do Formulário')),
                ('data_registro', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data do Registro')),
                ('data_expedicao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Expedição')),
                ('pasta', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True)),
                ('via', models.IntegerField()),
                ('cancelado', models.BooleanField(default=False)),
                ('motivo_cancelamento', models.TextField(null=True, verbose_name='Motivo do Cancelamento')),
                ('data_cancelamento', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, null=True, verbose_name='Data do Cancelamento')),
                ('codigo_qacademico', models.IntegerField(blank=True, null=True, verbose_name='Código Q-Acadêmico')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('autenticacao_sistec', djtools.db.models.CharFieldPlus(blank=True, help_text='Código de autenticação SISTEC. Obrigatório para alunos de cursos técnicos.', max_length=255, null=True, verbose_name='Autenticação SISTEC')),
                ('matriz', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Matriz')),
                ('autorizacao', models.TextField(blank=True, null=True, verbose_name='Autorização')),
                ('reconhecimento', models.TextField(blank=True, null=True, verbose_name='Reconhecimento')),
                ('ch_geral', models.IntegerField(blank=True, null=True, verbose_name='Carga-Horária Geral')),
                ('ch_especial', models.IntegerField(blank=True, null=True, verbose_name='Carga-Horária Especial')),
                ('ch_estagio', models.IntegerField(blank=True, null=True, verbose_name='Carga-Horária Estágio')),
                ('ch_total', models.IntegerField(blank=True, null=True, verbose_name='Carga-Horária Total')),
                ('empresa_estagio', models.TextField(blank=True, null=True, verbose_name='Empresa do Estágio')),
                ('data_publicacao_dou', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Publicação no DOU')),
                ('url_publicacao_dou', models.URLField(blank=True, null=True, verbose_name='URL da Publicação no DOU')),
                ('situacao', models.IntegerField(choices=[[0, 'Aguardando registro'], [96, 'Aguardando geração ou impressão'], [97, 'Aguardando início do processo de assinatura digital'], [1, 'Aguardando correção de dados da documentação'], [11, 'Aguardando correção de dados do diploma'], [2, 'Aguardando assinatura da documentação'], [12, 'Aguardando correção do histórico'], [13, 'Aguardando assinatura do histórico'], [3, 'Aguardando assinatura digital do diploma'], [4, 'Aguardando geração da representação visual do diploma'], [98, 'Aguardando assinatura física do diploma'], [99, 'Cancelado'], [100, 'Finalizado']], null=True, verbose_name='Situação')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('configuracao_livro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaolivro', verbose_name='Configuração de Livro')),
                ('dirigente_maximo', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red1_set', to='rh.pessoafisica', verbose_name='Dirigente Máximo')),
                ('emissor', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('responsavel_emissao', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red2_set', to='rh.pessoafisica', verbose_name='Responsável pela Emissão')),
                ('responsavel_registro', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='red3_set', to='rh.pessoafisica', verbose_name='Responsável pelo Registro')),
            ],
            options={
                'verbose_name': 'Emissão de Diploma/Certificado',
                'verbose_name_plural': 'Emissão de Diplomas/Certificados',
            },
        ),
        migrations.CreateModel(
            name='RegistroEmissaoCertificadoENEM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livro', models.PositiveIntegerField()),
                ('folha', models.PositiveIntegerField()),
                ('numero_registro', models.PositiveIntegerField(verbose_name='Número do Registro')),
                ('data_expedicao', djtools.db.models.DateFieldPlus(verbose_name='Data de Expedição')),
                ('via', models.IntegerField()),
                ('cancelado', models.BooleanField(default=False)),
                ('razao_cancelamento', models.TextField(null=True, verbose_name='Razão do Cancelamento')),
                ('data_cancelamento', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data do Cancelamento')),
                ('codigo_geracao_certificado', djtools.db.models.CharFieldPlus(max_length=16)),
                ('emissor', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('responsavel_cancelamento', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reg_emissao_certificado_enem_resp_cancelamento_set', to=settings.AUTH_USER_MODEL, verbose_name='Responsável pelo Cancelamento')),
                ('solicitacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.solicitacaocertificadoenem')),
            ],
            options={
                'verbose_name': 'Registro de Emissão de Certificado ENEM',
                'verbose_name_plural': 'Registro de Emissão de Certificados ENEM',
            },
        ),
        migrations.CreateModel(
            name='RegistroEducacenso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_registro', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número do Registro')),
                ('privado', models.BooleanField(default=True, help_text='O questionário ficará inacessível para repostas dos campi enquanto estiver privado.', verbose_name='Privado')),
                ('ano_censo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano do Censo')),
            ],
            options={
                'verbose_name': 'Registro Educacenso',
                'verbose_name_plural': 'Registros Educacenso',
            },
        ),
        migrations.CreateModel(
            name='RegistroDiferenca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_anterior', models.TextField()),
                ('valor_atual', models.TextField()),
                ('campo', djtools.db.models.CharFieldPlus(max_length=255)),
                ('log', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.log')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistroConvocacaoENADE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situacao', models.PositiveIntegerField(choices=[(1, 'Regular'), (2, 'Dispensado'), (3, 'Ausente')], null=True, verbose_name='Situação')),
                ('percentual_ch_cumprida', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, null=True, verbose_name='Situação')),
                ('tipo_convocacao', models.PositiveIntegerField(choices=[(1, 'Ingressante'), (2, 'Concluinte')], null=True, verbose_name='Tipo da Convocação')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('convocacao_enade', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.convocacaoenade')),
                ('justificativa_dispensa', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.justificativadispensaenade', verbose_name='Justificativa de Dispensa')),
            ],
            options={
                'ordering': ('aluno__curso_campus', 'aluno__pessoa_fisica__nome'),
            },
        ),
        migrations.CreateModel(
            name='RegistroAlunoINEP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_inscricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número da Inscrição')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('nome_mae', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome da Mãe')),
                ('rg', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='RG')),
                ('cpf', models.CharField(max_length=20, verbose_name='CPF')),
                ('data_nascimento', djtools.db.models.DateFieldPlus(verbose_name='Data de Nascimento')),
                ('nota_cn', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Nota - Ciências da Natureza e suas Tecnologias')),
                ('nota_ch', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Nota - Ciências Humanas e suas Tecnologias')),
                ('nota_lc', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Nota - Linguagens, Códigos e suas Tecnologias')),
                ('nota_mt', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Nota - Matemática e suas Tecnologias')),
                ('nota_redacao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Nota - Redação')),
                ('configuracao_certificado_enem', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaocertificadoenem')),
                ('uo', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus')),
            ],
            options={
                'verbose_name': 'Registro do aluno no INEP',
                'verbose_name_plural': 'Registros dos alunos no INEP',
            },
        ),
        migrations.CreateModel(
            name='ReferenciaBibliograficaComplementar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referencia', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Referência')),
                ('disponivel', models.BooleanField(null=True, verbose_name='Disponível na Biblioteca')),
                ('plano_ensino', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.planoensino', verbose_name='Plano de Ensino')),
            ],
            options={
                'verbose_name': 'Referência Bibliográfica Complementar',
                'verbose_name_plural': 'Referências Bibliográfica Complementar',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ReferenciaBibliograficaBasica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referencia', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Referência')),
                ('disponivel', models.BooleanField(null=True, verbose_name='Disponível na Biblioteca')),
                ('plano_ensino', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.planoensino', verbose_name='Plano de Ensino')),
            ],
            options={
                'verbose_name': 'Referência Bibliográfica Básica',
                'verbose_name_plural': 'Referências Bibliográfica Básica',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Reconhecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[['Resolução', 'Resolução'], ['Portaria', 'Portaria'], ['Lei Federal', 'Lei Federal'], ['Deliberação', 'Deliberação']], max_length=255, verbose_name='Tipo')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('numero', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número')),
                ('renovacao', models.BooleanField(default=False, verbose_name='Renovação')),
                ('validade', djtools.db.models.DateFieldPlus(null=True, verbose_name='Validade')),
                ('numero_publicao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número da Publicação')),
                ('data_publicacao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data da Publicação')),
                ('veiculo_publicacao', djtools.db.models.CharFieldPlus(blank=True, choices=[['DOU', 'DOU']], max_length=255, null=True, verbose_name='Veículo da Publicação')),
                ('secao_publicao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Seção da Publicação')),
                ('pagina_publicao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Página da Publicação')),
                ('matriz_curso', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matrizcurso', verbose_name='Matriz Curso')),
            ],
            options={
                'verbose_name': 'Reconhecimento',
                'verbose_name_plural': 'Reconhecimentos',
            },
        ),
        migrations.AddField(
            model_name='questaoeducacenso',
            name='registro',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.registroeducacenso', verbose_name='Registro Educacenso'),
        ),
        migrations.CreateModel(
            name='ProjetoFinal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Título do Trabalho')),
                ('resumo', models.TextField(verbose_name='Resumo do Trabalho')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[['Monografia', 'Monografia'], ['Dissertação', 'Dissertação'], ['Tese', 'Tese'], ['Artigo Científico', 'Artigo Científico'], ['Capítulo de Livro', 'Capítulo de Livro'], ['Portfólio', 'Portfólio'], ['Trabalho de Conclusão de Curso', 'Trabalho de Conclusão de Curso'], ['Relatório de Projeto', 'Relatório de Projeto']], max_length=255, verbose_name='Tipo de Trabalho')),
                ('informacao_complementar', models.TextField(blank=True, null=True, verbose_name='Informações Complementares')),
                ('documento', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/projeto_final/', verbose_name='Arquivo Digitalizado do Projeto')),
                ('documento_final', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/projeto_final/', verbose_name='Arquivo Final Digitalizado do Projeto')),
                ('data_defesa', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Apresentação')),
                ('data_deposito', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data de Depósito ')),
                ('defesa_online', models.BooleanField(blank=True, default=False, help_text='Marque essa opção caso os membros da banca tenham acompanhado ou acompanharão a defesa virtualmente.', verbose_name='Defesa Online')),
                ('is_examinador_externo', models.BooleanField(default=True, help_text='Marque essa opção caso o segundo examinador seja externo.', verbose_name='Externo')),
                ('is_terceiro_examinador_externo', models.BooleanField(default=True, help_text='Marque essa opção caso o terceiro examinador seja externo.', verbose_name='Externo')),
                ('is_suplente_externo', models.BooleanField(default=True, help_text='Marque essa opção caso o segundo suplente seja externo.', verbose_name='Externo')),
                ('is_terceiro_suplente_externo', models.BooleanField(default=True, help_text='Marque essa opção caso o terceiro suplente seja externo.', verbose_name='Externo')),
                ('resultado_data', djtools.db.models.DateTimeFieldPlus(blank=True, null=True, verbose_name='Data da Defesa')),
                ('nota', djtools.db.models.NotaField(blank=True, null=True)),
                ('situacao', models.PositiveIntegerField(blank=True, choices=[[1, 'Aprovado'], [2, 'Reprovado']], null=True, verbose_name='Situação')),
                ('ata', djtools.db.models.FileFieldPlus(blank=True, null=True, upload_to='edu/projeto_final_ata/', verbose_name='Ata da Defesa')),
                ('documento_url', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Link para Arquivo Digitalizado do Projeto')),
                ('documento_final_url', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Link Final para Arquivo Digitalizado do Projeto')),
                ('coorientadores', djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='coorientadores_set', to='rh.PessoaFisica', verbose_name='Coorientadores')),
                ('examinador_externo', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='examinador_externo_set', to='rh.pessoafisica', verbose_name='Segundo Examinador')),
                ('examinador_interno', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='examinador_interno_set', to='rh.pessoafisica', verbose_name='Examinador Interno')),
                ('local_defesa', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.sala', verbose_name='Local')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
                ('orientador', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orientador_set', to='edu.professor', verbose_name='Orientador')),
                ('presidente', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='presidente_set', to='edu.professor', verbose_name='Presidente')),
                ('suplente_externo', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suplente_externo_set', to='rh.pessoafisica', verbose_name='Segundo Suplente')),
                ('suplente_interno', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suplente_interno_set', to='rh.pessoafisica', verbose_name='Suplente Interno')),
                ('terceiro_examinador', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='terceiro_examinador_set', to='rh.pessoafisica', verbose_name='Terceiro Examinador')),
                ('terceiro_suplente', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='terceiro_suplente_set', to='rh.pessoafisica', verbose_name='Terceiro Suplente')),
            ],
            options={
                'verbose_name': 'Trabalho de Conclusão de Curso',
                'verbose_name_plural': 'Trabalhos de Conclusão de Curso',
            },
        ),
        migrations.CreateModel(
            name='ProfessorMinicurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carga_horaria', models.PositiveIntegerField(null=True, verbose_name='Carga horária')),
                ('carga_horaria_semanal', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, null=True, verbose_name='Carga horária Semanal')),
                ('professor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.professor', verbose_name='Professor')),
                ('turma_minicurso', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turmaminicurso', verbose_name='Turma do Minicurso')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfessorDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio_etapa_1', djtools.db.models.DateFieldPlus(blank=True, help_text='Início da posse do diário para a 1ª etapa', null=True, verbose_name='Data de Início')),
                ('data_fim_etapa_1', djtools.db.models.DateFieldPlus(blank=True, help_text='Encerramento da posse incluindo 5 dias de tolerância', null=True, verbose_name='Data de Encerramento')),
                ('data_inicio_etapa_2', djtools.db.models.DateFieldPlus(blank=True, help_text='Início da posse do diário para a 2ª etapa', null=True, verbose_name='Data de Início')),
                ('data_fim_etapa_2', djtools.db.models.DateFieldPlus(blank=True, help_text='Encerramento da posse incluindo 5 dias de tolerância', null=True, verbose_name='Data de Encerramento')),
                ('data_inicio_etapa_3', djtools.db.models.DateFieldPlus(blank=True, help_text='Início da posse do diário para a 3ª etapa', null=True, verbose_name='Data de Início')),
                ('data_fim_etapa_3', djtools.db.models.DateFieldPlus(blank=True, help_text='Encerramento da posse incluindo 5 dias de tolerância', null=True, verbose_name='Data de Encerramento')),
                ('data_inicio_etapa_4', djtools.db.models.DateFieldPlus(blank=True, help_text='Início da posse do diário para a 4ª etapa', null=True, verbose_name='Data de Início')),
                ('data_fim_etapa_4', djtools.db.models.DateFieldPlus(blank=True, help_text='Encerramento da posse incluindo 5 dias de tolerância', null=True, verbose_name='Data de Encerramento')),
                ('data_inicio_etapa_final', djtools.db.models.DateFieldPlus(blank=True, help_text='Início da posse do diário para a etapa final', null=True, verbose_name='Data de Início')),
                ('data_fim_etapa_final', djtools.db.models.DateFieldPlus(blank=True, help_text='Encerramento da posse incluindo 5 dias de tolerância', null=True, verbose_name='Data de Encerramento')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('financiamento_externo', models.BooleanField(default=False, help_text='Vínculo com financiamento extraorçamentário (Bolsa, PRONATEC, Mulheres Mil, ETEC, UAB, etc.)', verbose_name='Financiamento Externo')),
                ('percentual_ch', models.PositiveSmallIntegerField(help_text='Valor entre 0 e 100 correspondente ao percentual da carga horária ministrada pelo professor.', null=True, verbose_name='Percentual da Carga Horária')),
                ('periodo_letivo_ch', models.IntegerField(blank=True, choices=[[1, '1'], [2, '2']], help_text='Informar caso o percentual da carga horária ministrada se refira a apenas um período letivo.', null=True, verbose_name='Período Letivo da Carga-Horária')),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario', verbose_name='Diário')),
                ('professor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.professor', verbose_name='Professor')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipoprofessordiario', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Vínculo de Professor em Diário',
                'verbose_name_plural': 'Vínculos de Professor em Diário',
            },
        ),
        migrations.AddField(
            model_name='professor',
            name='vinculo_professor_ead',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.vinculoprofessoread', verbose_name='Vinculo do Professor com o EAD'),
        ),
        migrations.CreateModel(
            name='ProcedimentoMatricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.CharFieldPlus(max_length=255)),
                ('motivo', models.TextField(verbose_name='Motivo')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('nova_matricula', djtools.db.models.CharFieldPlus(blank=True, max_length=255)),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo', verbose_name='Matrícula Período')),
                ('situacao_matricula_anterior', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='situacaomatriculaanterior', to='edu.situacaomatricula', verbose_name='Situação de Matrícula Anterior')),
                ('user', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Procedimento de Matrícula',
                'verbose_name_plural': 'Procedimentos de Matrícula',
            },
        ),
        migrations.CreateModel(
            name='Premiacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipopremiacao')),
            ],
            options={
                'verbose_name': 'Premiação',
                'verbose_name_plural': 'Premiações',
            },
        ),
        migrations.CreateModel(
            name='PlanoEstudo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[['Planejamento', 'Planejamento'], ['Dispensa', 'Dispensa']], max_length=255, verbose_name='Tipo')),
                ('planejamento_concluido', models.BooleanField(null=True, verbose_name='Planejamento Concluído')),
                ('homologado', models.BooleanField(null=True, verbose_name='Planejamento Homologado')),
                ('data_homologacao', djtools.db.models.DateFieldPlus(null=True, verbose_name='Data de Homologação')),
                ('observacao_homologacao', models.TextField(blank=True, verbose_name='Observação da Homologação')),
                ('numero_ata_homologacao', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nº da Ata de Homologação')),
                ('descumprido', models.BooleanField(default=False, verbose_name='Descumprido')),
                ('pedido_matricula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.pedidomatricula', verbose_name='Pedido de Matrícula')),
            ],
            options={
                'verbose_name': 'Plano de Estudo',
                'verbose_name_plural': 'Planos de Estudo',
            },
        ),
        migrations.CreateModel(
            name='PedidoMatriculaDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deferido', models.BooleanField(default=False)),
                ('data_processamento', models.DateField(null=True, verbose_name='Data de Processamento')),
                ('motivo', models.PositiveIntegerField(choices=[[1, 'Periodizado'], [2, 'I.R.A.'], [3, 'Período/I.R.A.'], [4, 'Cancelado pela Diretoria'], [5, 'Matrícula Inativa']], null=True)),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario')),
                ('pedido_matricula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.pedidomatricula')),
            ],
            options={
                'verbose_name': 'Pedido de Matrícula',
                'verbose_name_plural': 'Pedidos de Matrícula',
            },
        ),
        migrations.AddField(
            model_name='pedidomatricula',
            name='turma',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.turma'),
        ),
        migrations.CreateModel(
            name='ParticipanteEvento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', djtools.db.models.CharFieldPlus(max_length=16, null=True)),
                ('tipo_participacao', djtools.db.models.CharFieldPlus(blank=True, default='Participante', max_length=255, null=True, verbose_name='Tipo de Participante')),
                ('evento', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.evento', verbose_name='Evento')),
                ('participante', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.pessoafisica', verbose_name='Participante')),
            ],
            options={
                'verbose_name': 'Vínculo de Participante em Evento',
                'verbose_name_plural': 'Vínculos de Participante em Evento',
            },
        ),
        migrations.CreateModel(
            name='ParticipacaoColacaoGrau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laureado', models.BooleanField(default=False, verbose_name='Laureado')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('colacao_grau', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.colacaograu', verbose_name='Colação de Grau')),
            ],
            options={
                'verbose_name': 'Participação na Colação de Grau',
                'verbose_name_plural': 'Participação nas Colações de Grau',
            },
        ),
        migrations.CreateModel(
            name='OcorrenciaDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('professor_diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.professordiario', verbose_name='Professor')),
            ],
            options={
                'verbose_name': 'Ocorrência',
                'verbose_name_plural': 'Ocorrências',
            },
        ),
        migrations.CreateModel(
            name='ObservacaoDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacao', models.TextField(verbose_name='Observação do Diário')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario', verbose_name='Diário')),
                ('usuario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'permissions': (('adm_delete_observacaodiario', 'Pode deletar observações de outros usuários'),),
            },
        ),
        migrations.CreateModel(
            name='Observacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacao', models.TextField(verbose_name='Observação da Matrícula')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
                ('usuario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'permissions': (('adm_delete_observacao', 'Pode deletar observações de outros usuários'),),
            },
        ),
        migrations.CreateModel(
            name='NotaAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', djtools.db.models.NotaField(null=True, verbose_name='Nota')),
                ('item_configuracao_avaliacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.itemconfiguracaoavaliacao', verbose_name='Item de Configuração de Avaliação')),
                ('matricula_diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculadiario', verbose_name='Matrícula Diário')),
            ],
            options={
                'verbose_name': 'Nota de Avaliação',
                'verbose_name_plural': 'Notas de Avaliações',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='MonitorMinicurso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carga_horaria', models.PositiveIntegerField(null=True, verbose_name='Carga Horária')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
                ('turma_minicurso', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turmaminicurso', verbose_name='Turma do Minicurso')),
            ],
            options={
                'verbose_name': 'Monitor de Minicurso',
                'verbose_name_plural': 'Monitores de Minicurso',
            },
        ),
        migrations.CreateModel(
            name='ModeloDocumento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('tipo', models.IntegerField(choices=[[1, 'DIPLOMA/CERTIFICADO'], [2, 'DECLARAÇÃO DE MATRÍCULA']], verbose_name='Tipo')),
                ('template', djtools.db.models.FileFieldPlus(blank=True, help_text="O arquivo de modelo deve ser uma arquivo .docx contendo as marcações\n            #CHGERAL#, #CHESPECIAL#, #CHESTAGIO#, #EMPRESAESTAGIO#, #LEI#, #NOMECAMPUS#, #ALUNO#, #CREDENCIAMENTO#, #RECREDENCIAMENTO#, #COLACAO#,\n            #NACIONALIDADE#, #NATURALIDADE#, #DATANASCIMENTO#, #CPF#, #PASSAPORTE#, #RG#, #UFRG#, #EMISSORRG#, #DATARG#, #CURSO#,\n            #HABILITACAOPEDAGOGICA#, #AREACONCENTRACAO#, #PROGRAMA#, #INICIO#, #FIM#, '#TITULO#,   #CHTOTAL#, #CIDADE#, #UF#,\n            #DATA#, #COORDENADOR#, #AREA#, #TITULOCOORDENADOR#, #OREITOR#, #REITOR#, #TITULOREITOR#, #EMEXERCICIO#, #DIRETORGERAL#,\n            #TITULODIRETORGERAL#, #DIRETORACADEMICO#, #TITULODIRETORACADEMICO#, #DISCIPLINAS#, #PROFESSORES#, #TITULACOES#, #NOTAS#,\n            #CH#, #REGISTRO#, #LIVRO#, #FOLHA#, #DATAEXPEDICAO#, #PROCESSO#, #CODIGOVERIFICADOR#, #NASCIDO#, #PORTADOR#, #DIPLOMADO#,\n            #AUTORIZACAO#, #RECONHECIMENTO#, #DIATCC#, #MESTCC#, #ANOTCC#, #TIPOTCC#, #TEMATCC#, #ORIENTADOR#, #TITULACAOORIENTADOR#,\n            #CHTCC#, #NOTATCC#, #VIA#, #SERVIDORREGISTROESCOLAR#, #PORTARIAREGISTROESCOLAR#, #NOMEPAI#, #NOMEMAE#, #ANOCONCLUSAOFIC#,\n            #AUTENTICACAOSISTEC#, #COORDENADORREGISTROESCOLAR#, #HABILITACAO#", null=True, upload_to='edu/modelos_documento/', verbose_name='Template')),
                ('ativo', models.BooleanField(default=False)),
                ('modalidade', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.modalidade', verbose_name='Modalidade de Ensino')),
            ],
            options={
                'verbose_name': 'Modelo de Documento',
                'verbose_name_plural': 'Modelos de Documento',
            },
        ),
        migrations.AddField(
            model_name='modalidade',
            name='nivel_ensino',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modalidades', to='edu.nivelensino', verbose_name='Nível de Ensino'),
        ),
        migrations.CreateModel(
            name='MembroBanca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('sexo', models.CharField(choices=[['M', 'Masculino'], ['F', 'Feminino']], max_length=1, null=True)),
                ('instituicao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Instituição')),
                ('formacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.modalidade', verbose_name='Formação')),
            ],
            options={
                'verbose_name': 'Membro da Banca',
                'verbose_name_plural': 'Membros da Banca',
            },
        ),
        migrations.CreateModel(
            name='MedidaDisciplinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de Início')),
                ('data_fim', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data de Fim')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipomedidadisciplinar')),
            ],
            options={
                'verbose_name': 'Medida Disciplinar',
                'verbose_name_plural': 'Medidas Disciplinares',
            },
        ),
        migrations.AddField(
            model_name='matriz',
            name='nivel_ensino',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.nivelensino', verbose_name='Nível de Ensino'),
        ),
        migrations.AddField(
            model_name='matriculaperiodo',
            name='situacao',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.situacaomatriculaperiodo', verbose_name='Situação'),
        ),
        migrations.AddField(
            model_name='matriculaperiodo',
            name='turma',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to='edu.turma'),
        ),
        migrations.CreateModel(
            name='MatriculaDiarioResumida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_final_disciplina', djtools.db.models.NotaField(null=True)),
                ('frequencia', models.PositiveIntegerField()),
                ('situacao', models.PositiveIntegerField(choices=[[1, 'Cursando'], [2, 'Aprovado'], [3, 'Reprovado'], [4, 'Prova Final'], [5, 'Reprovado por falta'], [6, 'Trancado'], [7, 'Cancelado'], [8, 'Dispensado'], [9, 'Pendente'], [10, 'Aprovado/Reprovado no Módulo'], [13, 'Transferido'], [11, 'Aproveit. Disciplina'], [12, 'Cert. Conhecimento']], verbose_name='Situação')),
                ('codigo_turma', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Código da Turma')),
                ('codigo_professor', models.PositiveIntegerField(null=True, verbose_name='Código do Professor')),
                ('nome_professor', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Nome do Professor')),
                ('titularidade_professor', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Titularidade do Professor')),
                ('codigo_diario_pauta', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Código do Diário/Pauta')),
                ('conceito', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Conceito')),
                ('equivalencia_componente', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.equivalenciacomponenteqacademico')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
            ],
            options={
                'verbose_name': 'Registro de Histórico',
                'verbose_name_plural': 'Registros de Histórico',
            },
        ),
        migrations.AddField(
            model_name='matriculadiario',
            name='matricula_periodo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo'),
        ),
        migrations.CreateModel(
            name='MaterialDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_vinculacao', models.DateField(default=datetime.date.today, null=True, verbose_name='Data de Vinculação')),
                ('material_aula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.materialaula', verbose_name='Material de Aula')),
                ('professor_diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.professordiario', verbose_name='Professor Diário')),
            ],
            options={
                'verbose_name': 'Vínculo de Material em Diário',
                'verbose_name_plural': 'Vínculos de Material em Diário',
            },
        ),
        migrations.AddField(
            model_name='materialaula',
            name='professor',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.professor', verbose_name='Professor'),
        ),
        migrations.CreateModel(
            name='ItemPlanoEstudo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_letivo', models.IntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
                ('componente_curricular', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componentecurricular', verbose_name='Componente Curricular')),
                ('plano_estudo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.planoestudo', verbose_name='Plano de Estudo')),
            ],
            options={
                'verbose_name': 'Item do Plano de Estudo',
                'verbose_name_plural': 'Itens de Plano de Estudo',
            },
        ),
        migrations.CreateModel(
            name='ItemConfiguracaoCreditosEspeciais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atividade_academica', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Atividade Acadêmica')),
                ('equivalencia_creditos', models.PositiveIntegerField(verbose_name='Quantidade de Créditos')),
                ('configuracao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaocreditosespeciais', verbose_name='Configuração de Créditos Especiais')),
            ],
            options={
                'verbose_name': 'Item de Configuração de Créditos Especiais',
                'verbose_name_plural': 'Itens de Configuração de Créditos Especiais',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ItemConfiguracaoAtividadeComplementar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao_min_curso', models.IntegerField(blank=True, null=True, verbose_name='Pontuação Mínima no Curso')),
                ('pontuacao_max_periodo', models.IntegerField(blank=True, null=True, verbose_name='Pontuação Máxima no Período')),
                ('pontuacao_max_curso', models.IntegerField(blank=True, null=True, verbose_name='Pontuação Máxima no Curso')),
                ('pontuacao_por_evento', models.IntegerField(blank=True, help_text='Obrigatório apenas quando o registro dessa atividade complementar não requerer a entrada da carga horário pelo secretário acadêmico. Ex: Capítulo de Livro.', null=True, verbose_name='Pontuação por Registro')),
                ('fator_conversao', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Fator de conversão (Peso)')),
                ('ch_min_curso', models.IntegerField(null=True, verbose_name='C.H. Mínima no Curso')),
                ('ch_max_periodo', models.IntegerField(null=True, verbose_name='C.H. Máxima no Período')),
                ('ch_max_curso', models.IntegerField(null=True, verbose_name='C.H. Máxima no Curso')),
                ('ch_por_evento', models.IntegerField(null=True, verbose_name='C.H. por Evento')),
                ('configuracao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaoatividadecomplementar', verbose_name='Configuração Atividades Acadêmicas')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipoatividadecomplementar')),
            ],
            options={
                'verbose_name': 'Item de Configuração de AACC',
                'verbose_name_plural': 'Itens de Configuração de AACC',
            },
        ),
        migrations.CreateModel(
            name='ItemConfiguracaoAtividadeAprofundamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carga_horaria', models.IntegerField(blank=True, null=True, verbose_name='Carga-Horária')),
                ('obs_carga_horaria', djtools.db.models.CharFieldPlus(blank=True, help_text='Informação adicional sobre a carga-horária da atividade.', max_length=255, null=True, verbose_name='Observação da Carga-Horária')),
                ('configuracao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaoatividadeaprofundamento', verbose_name='Configuração de ATPA')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipoatividadeaprofundamento')),
            ],
            options={
                'verbose_name': 'Item de Configuração de ATPA',
                'verbose_name_plural': 'Itens de Configuração de ATPA',
            },
        ),
        migrations.CreateModel(
            name='HorarioTutorPolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.PositiveIntegerField(choices=[[1, 'Segunda'], [2, 'Terça'], [3, 'Quarta'], [4, 'Quinta'], [5, 'Sexta'], [6, 'Sábado'], [7, 'Domingo']])),
                ('horario_funcionamento', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horariofuncionamentopolo')),
                ('tutor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tutorpolo')),
            ],
            options={
                'verbose_name': 'Horário do Tutor',
                'verbose_name_plural': 'Horários do Tutor',
            },
        ),
        migrations.CreateModel(
            name='HorarioPolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.PositiveIntegerField(choices=[[1, 'Segunda'], [2, 'Terça'], [3, 'Quarta'], [4, 'Quinta'], [5, 'Sexta'], [6, 'Sábado'], [7, 'Domingo']])),
                ('horario_funcionamento', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horariofuncionamentopolo')),
                ('polo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.polo')),
            ],
            options={
                'verbose_name': 'Horário do Polo',
                'verbose_name_plural': 'Horários do Polo',
            },
        ),
        migrations.AddField(
            model_name='horariofuncionamentopolo',
            name='polo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.polo'),
        ),
        migrations.AddField(
            model_name='horariofuncionamentopolo',
            name='turno',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turno'),
        ),
        migrations.CreateModel(
            name='HorarioCoordenadorPolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.PositiveIntegerField(choices=[[1, 'Segunda'], [2, 'Terça'], [3, 'Quarta'], [4, 'Quinta'], [5, 'Sexta'], [6, 'Sábado'], [7, 'Domingo']])),
                ('coordenador', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.coordenadorpolo')),
                ('horario_funcionamento', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horariofuncionamentopolo')),
            ],
            options={
                'verbose_name': 'Horário do Coordenador do Polo',
                'verbose_name_plural': 'Horários do Coordenador do Polo',
            },
        ),
        migrations.CreateModel(
            name='HorarioCampus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('eh_padrao', models.BooleanField(default=False, verbose_name='Horário Padrão')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus')),
            ],
            options={
                'verbose_name': 'Horário do Campus',
                'verbose_name_plural': 'Horários dos Campi',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='HorarioAulaDiarioEspecial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.PositiveIntegerField(choices=[[1, 'Segunda'], [2, 'Terça'], [3, 'Quarta'], [4, 'Quinta'], [5, 'Sexta'], [6, 'Sábado'], [7, 'Domingo']])),
                ('diario_especial', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diarioespecial')),
                ('horario_aula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horarioaula')),
            ],
            options={
                'verbose_name': 'Horário de Aula na Atividade Espec.',
                'verbose_name_plural': 'Horários das Aulas na Atividade Espec.',
            },
        ),
        migrations.CreateModel(
            name='HorarioAulaDiario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.PositiveIntegerField(choices=[[1, 'Segunda'], [2, 'Terça'], [3, 'Quarta'], [4, 'Quinta'], [5, 'Sexta'], [6, 'Sábado'], [7, 'Domingo']])),
                ('diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diario')),
                ('horario_aula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horarioaula')),
            ],
            options={
                'verbose_name': 'Horário de Aula no Diário',
                'verbose_name_plural': 'Horários das Aulas no Diário',
            },
        ),
        migrations.AddField(
            model_name='horarioaula',
            name='horario_campus',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horariocampus'),
        ),
        migrations.AddField(
            model_name='horarioaula',
            name='turno',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turno'),
        ),
        migrations.CreateModel(
            name='HorarioAtividadeExtra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_atividade', models.PositiveIntegerField(choices=[[1, 'Atividade de Estudo'], [2, 'Atividade de Lazer']], default=1, verbose_name='Tipo de Atividade')),
                ('descricao_atividade', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('dia_semana', models.PositiveIntegerField(choices=[[1, 'Segunda'], [2, 'Terça'], [3, 'Quarta'], [4, 'Quinta'], [5, 'Sexta'], [6, 'Sábado'], [7, 'Domingo']])),
                ('horario_aula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horarioaula')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
            ],
            options={
                'verbose_name': 'Horário da Atividade Extra',
                'verbose_name_plural': 'Horários das Atividades Extras',
            },
        ),
        migrations.CreateModel(
            name='HistoricoSituacaoMatriculaPeriodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField()),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
                ('situacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.situacaomatriculaperiodo', verbose_name='Situação da Matrícula')),
                ('usuario', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Histórico de Situação no Período',
                'verbose_name_plural': 'Históricos de Situação no Período',
                'ordering': ('data',),
            },
        ),
        migrations.CreateModel(
            name='HistoricoSituacaoMatricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('situacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.situacaomatricula', verbose_name='Situação da Matrícula')),
            ],
            options={
                'verbose_name': 'Histórico de Situação do Aluno',
                'verbose_name_plural': 'Históricos do Aluno',
                'ordering': ('data',),
            },
        ),
        migrations.CreateModel(
            name='HistoricoRelatorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255)),
                ('query_string', models.TextField()),
                ('tipo', models.PositiveIntegerField(choices=[[1, 'Aluno'], [2, 'Diário'], [3, 'Professor']])),
                ('user', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Relatório',
                'verbose_name_plural': 'Histórico de Relatórios',
            },
        ),
        migrations.CreateModel(
            name='GrupoArquivoObrigatorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('modalidades', djtools.db.models.ManyToManyFieldPlus(to='edu.Modalidade', verbose_name='Modalidades')),
                ('tipos', djtools.db.models.ManyToManyFieldPlus(to='edu.TipoAlunoArquivo', verbose_name='Tipos de Documentos')),
            ],
            options={
                'verbose_name': 'Grupo de Arquivos Obrigatórios',
                'verbose_name_plural': 'Grupo de Arquivos Obrigatórios',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='FormaIngresso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, unique=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
                ('classificacao_censup', models.IntegerField(blank=True, choices=[[1, 'Vestibular'], [2, 'Enem'], [3, 'Avaliação Seriada'], [4, 'Seleção Simplificada'], [5, 'Egresso BI/LI'], [6, 'PEC-G'], [7, 'Transferência Ex Officio'], [8, 'Decisão judicial'], [9, 'Vagas Remanescentes'], [10, 'Programas Especiais']], null=True, verbose_name='Classificação CENSUP')),
                ('classificacao_educacenso', models.IntegerField(blank=True, choices=[[1, 'Sem processo seletivo'], [2, 'Sorteio'], [3, 'Transferência'], [4, 'Exame de seleção sem reserva de vaga'], [5, 'Exame de seleção, vaga reservada para alunos da rede pública de ensino'], [6, 'Exame de seleção, vaga reservada para alunos da rede pública de ensino, com baixa renda e autodeclarado preto, pardo ou indígena'], [7, 'Exame de seleção, vaga reservada para outros programas de ação afirmativa '], [8, 'Outra forma de ingresso'], [9, 'Exame de seleção, vaga reservada para alunos da rede pública de ensino, com baixa renda']], null=True, verbose_name='Classificação EDUCACENSO')),
                ('programa_vaga_etinico', models.BooleanField(default=False, verbose_name='Étnico')),
                ('programa_vaga_pessoa_deficiencia', models.BooleanField(default=False, verbose_name='Pessoa com Deficiência')),
                ('programa_vaga_escola_publica', models.BooleanField(default=False, verbose_name='Estudante procedente de escola pública')),
                ('programa_vaga_social', models.BooleanField(default=False, verbose_name='Social/renda familiar')),
                ('programa_vaga_outros', models.BooleanField(default=False, verbose_name='Outros programas de vaga')),
                ('racas', models.ManyToManyField(blank=True, to='comum.Raca', verbose_name='Raças/Etnias')),
            ],
            options={
                'verbose_name': 'Forma de Ingresso',
                'verbose_name_plural': 'Formas de Ingresso',
                'ordering': ('-ativo', 'descricao'),
            },
        ),
        migrations.CreateModel(
            name='Falta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(default=0)),
                ('abono_faltas', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.abonofaltas', verbose_name='Abono Faltas')),
                ('aula', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aula', verbose_name='Aula')),
                ('matricula_diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculadiario', verbose_name='Aluno')),
            ],
            options={
                'verbose_name': 'Falta',
                'verbose_name_plural': 'Faltas',
            },
        ),
        migrations.AddField(
            model_name='evento',
            name='participantes',
            field=models.ManyToManyField(blank=True, related_name='participantes_set', through='edu.ParticipanteEvento', to='rh.PessoaFisica'),
        ),
        migrations.AddField(
            model_name='evento',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus'),
        ),
        migrations.AddField(
            model_name='estruturacurso',
            name='formas_ingresso_ignoradas_aproveitamento',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, help_text='Formas de ingressos que não serão contabilizadas no cálculo de carga-horária aproveitada.', to='edu.FormaIngresso', verbose_name='Ignorar Formas de Ingresso'),
        ),
        migrations.AddField(
            model_name='estagiodocente',
            name='matricula_diario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculadiario', verbose_name='Matrícula Diário'),
        ),
        migrations.AddField(
            model_name='estagiodocente',
            name='professor_coordenador',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estagiodocente_coordenador_set', to='edu.professor', verbose_name='Professor Coordenador'),
        ),
        migrations.AddField(
            model_name='estagiodocente',
            name='professor_orientador',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='estagiodocente_orientador_set', to='edu.professor', verbose_name='Professor Orientador'),
        ),
        migrations.AddField(
            model_name='estagiodocente',
            name='turno',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.turno', verbose_name='Turno'),
        ),
        migrations.CreateModel(
            name='EntregaTrabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField(blank=True, verbose_name='Comentário')),
                ('data_entrega', djtools.db.models.DateTimeFieldPlus(auto_now=True, verbose_name='Data da Entrega')),
                ('arquivo', djtools.db.models.FileFieldPlus(upload_to='trabalhos_alunos', verbose_name='Arquivo')),
                ('matricula_diario', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculadiario', verbose_name='Matrícula Diário')),
                ('trabalho', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.trabalho', verbose_name='Diário')),
            ],
            options={
                'verbose_name': 'Trabalho',
                'verbose_name_plural': 'Trabalhos',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Encontro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data de Realização')),
                ('conteudo', models.TextField(verbose_name='Conteúdo')),
                ('diario_especial', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diarioespecial')),
                ('participantes', djtools.db.models.ManyToManyFieldPlus(to='edu.Aluno')),
            ],
            options={
                'verbose_name': 'Encontro - Atividade Específica',
                'verbose_name_plural': 'Encontros - Atividade Pedagógica Específica',
                'ordering': ('data',),
            },
        ),
        migrations.AddField(
            model_name='diarioespecial',
            name='diretoria',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria'),
        ),
        migrations.AddField(
            model_name='diarioespecial',
            name='horario_campus',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horariocampus', verbose_name='Horário do Campus'),
        ),
        migrations.AddField(
            model_name='diarioespecial',
            name='participantes',
            field=djtools.db.models.ManyToManyFieldPlus(to='edu.Aluno'),
        ),
        migrations.AddField(
            model_name='diarioespecial',
            name='professores',
            field=djtools.db.models.ManyToManyFieldPlus(to='edu.Professor'),
        ),
        migrations.AddField(
            model_name='diarioespecial',
            name='sala',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.sala'),
        ),
        migrations.AddField(
            model_name='diario',
            name='estrutura_curso',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.estruturacurso', verbose_name='Estrutura de Curso'),
        ),
        migrations.AddField(
            model_name='diario',
            name='horario_campus',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.horariocampus', verbose_name='Horário do Campus'),
        ),
        migrations.AddField(
            model_name='diario',
            name='locais_aula_secundarios',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='locais_aula_secundarios', to='comum.Sala', verbose_name='Locais de Aula Secundários'),
        ),
        migrations.AddField(
            model_name='diario',
            name='local_aula',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.sala', verbose_name='Local de Aula'),
        ),
        migrations.AddField(
            model_name='diario',
            name='turma',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turma', verbose_name='Turma'),
        ),
        migrations.AddField(
            model_name='diario',
            name='turno',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.turno', verbose_name='Turno'),
        ),
        migrations.AddField(
            model_name='cursocampus',
            name='coordenadores_estagio_docente',
            field=djtools.db.models.ManyToManyFieldPlus(related_name='cursos_coordenacao_estagio_docente_set', to='edu.Professor', verbose_name='Coordenadores de Estágio Docente'),
        ),
        migrations.AddField(
            model_name='cursocampus',
            name='diretoria',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria', verbose_name='Diretoria'),
        ),
        migrations.AddField(
            model_name='cursocampus',
            name='eixo',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.eixotecnologico', verbose_name='Eixo Tecnológico'),
        ),
        migrations.AddField(
            model_name='cursocampus',
            name='matrizes',
            field=djtools.db.models.ManyToManyFieldPlus(through='edu.MatrizCurso', to='edu.Matriz'),
        ),
        migrations.AddField(
            model_name='cursocampus',
            name='modalidade',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.modalidade', verbose_name='Modalidade de Ensino'),
        ),
        migrations.AddField(
            model_name='cursocampus',
            name='natureza_participacao',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.naturezaparticipacao', verbose_name='Natureza de participação'),
        ),
        migrations.CreateModel(
            name='CreditoEspecial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_configuracao_creditos_especiais', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.itemconfiguracaocreditosespeciais', verbose_name='Item de Configuração de Créditos Especiais')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo', verbose_name='Matrícula Período')),
            ],
            options={
                'verbose_name': 'Crédito Especial',
                'verbose_name_plural': 'Créditos Especiais',
            },
        ),
        migrations.CreateModel(
            name='CoordenadorRegistroAcademico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_portaria', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número da Portaria')),
                ('eh_coordenador_registro', models.BooleanField(default=False, verbose_name='Coordenador de Registro Escolar?')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('diretoria', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria', verbose_name='Diretoria')),
                ('servidor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.servidor', verbose_name='Servidor')),
            ],
            options={
                'verbose_name': 'Responsável pela Emissão do Diploma',
                'verbose_name_plural': 'Responsáveis pela Emissão do Diploma',
            },
        ),
        migrations.AddField(
            model_name='coordenadorpolo',
            name='polo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.polo', verbose_name='Polo'),
        ),
        migrations.CreateModel(
            name='CoordenadorModalidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diretoria', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria', verbose_name='Diretoria')),
                ('modalidades', djtools.db.models.ManyToManyFieldPlus(related_name='coordenadormodalidade_edu_set', to='edu.Modalidade', verbose_name='Modalidades de Ensino')),
                ('servidor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.servidor', verbose_name='Servidor')),
            ],
            options={
                'verbose_name': 'Coordenador de Modalidade',
                'verbose_name_plural': 'Coordenadores de Modalidade',
            },
        ),
        migrations.AddField(
            model_name='convocacaoenade',
            name='cursos',
            field=djtools.db.models.ManyToManyFieldPlus(to='edu.CursoCampus'),
        ),
        migrations.CreateModel(
            name='ConfiguracaoSeguro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('valor_contrato', djtools.db.models.DecimalFieldPlus(decimal_places=2, max_digits=12, verbose_name='Valor do Contrato')),
                ('data_inicio_contrato', djtools.db.models.DateFieldPlus(verbose_name='Data de Início do Contrato')),
                ('data_fim_contrato', djtools.db.models.DateFieldPlus(verbose_name='Data de Término do Contrato')),
                ('valor_repasse_pessoa', djtools.db.models.DecimalFieldPlus(decimal_places=5, max_digits=12, verbose_name='Valor do Repasse por Pessoa')),
                ('email_disparo_planilha', models.CharField(help_text='Os e-mails devem ser separados por vírgula', max_length=300, verbose_name='E-mails para Envio da Planilha')),
                ('fiscais', djtools.db.models.ManyToManyFieldPlus(to='rh.Servidor', verbose_name='Fiscais')),
                ('seguradora', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.pessoajuridica')),
            ],
            options={
                'verbose_name': 'Configuração de Seguro',
                'verbose_name_plural': 'Configurações de Seguro',
            },
        ),
        migrations.AddField(
            model_name='configuracaopedidomatricula',
            name='cursos',
            field=djtools.db.models.ManyToManyFieldPlus(to='edu.CursoCampus'),
        ),
        migrations.AddField(
            model_name='configuracaopedidomatricula',
            name='diretorias',
            field=models.ManyToManyField(to='edu.Diretoria'),
        ),
        migrations.AddField(
            model_name='configuracaolivro',
            name='modalidades',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, to='edu.Modalidade', verbose_name='Modalidades de Ensino'),
        ),
        migrations.AddField(
            model_name='configuracaolivro',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus'),
        ),
        migrations.CreateModel(
            name='ConfiguracaoGestao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd_computadores', models.IntegerField()),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional')),
            ],
            options={
                'verbose_name': 'Configuração Computadores/Campus',
                'verbose_name_plural': 'Configurações Computadores/Campus',
            },
        ),
        migrations.AddField(
            model_name='configuracaoavaliacao',
            name='diario',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.diario', verbose_name='Professor'),
        ),
        migrations.AddField(
            model_name='componentecurricular',
            name='matriz',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriz'),
        ),
        migrations.AddField(
            model_name='componentecurricular',
            name='nucleo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.nucleo', verbose_name='Núcleo'),
        ),
        migrations.AddField(
            model_name='componentecurricular',
            name='pre_requisitos',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, related_name='prerequisitos_set', to='edu.ComponenteCurricular'),
        ),
        migrations.AddField(
            model_name='componente',
            name='diretoria',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria'),
        ),
        migrations.AddField(
            model_name='componente',
            name='nivel_ensino',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.nivelensino', verbose_name='Nível de ensino'),
        ),
        migrations.AddField(
            model_name='componente',
            name='tipo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipocomponente', verbose_name='Tipo do Componente'),
        ),
        migrations.AddField(
            model_name='colacaograu',
            name='diretoria',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria'),
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.estado'),
        ),
        migrations.AddField(
            model_name='cidade',
            name='pais',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.pais', verbose_name='País'),
        ),
        migrations.CreateModel(
            name='CertificadoDiploma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validade', djtools.db.models.DateFieldPlus(verbose_name='Validade')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
            ],
            options={
                'verbose_name': 'Certificado de Conclusão',
                'verbose_name_plural': 'Certificados de Conclusão',
            },
        ),
        migrations.CreateModel(
            name='CertificacaoConhecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('nota', djtools.db.models.NotaField(blank=True, null=True, verbose_name='Nota')),
                ('ausente', models.BooleanField(default=False, verbose_name='Ausente')),
                ('componente_curricular', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componentecurricular', verbose_name='Componente Curricular')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo', verbose_name='Matrícula Período')),
                ('professores', djtools.db.models.ManyToManyFieldPlus(blank=True, help_text='Professor(es) da comissão responsável pela certificação.', to='edu.Professor', verbose_name='Professores')),
                ('servidores', djtools.db.models.ManyToManyFieldPlus(blank=True, help_text='Servidor(es) da comissão responsável pela certificação.', to='rh.Servidor', verbose_name='Servidores')),
            ],
            options={
                'verbose_name': 'Certificação de Conhecimento',
                'verbose_name_plural': 'Certificações de Conhecimento',
            },
        ),
        migrations.CreateModel(
            name='Cartorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('serventia', djtools.db.models.CharFieldPlus(blank=True, max_length=255, verbose_name='Serventia')),
                ('cidade', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.cidade')),
            ],
            options={
                'verbose_name': 'Cartório',
                'verbose_name_plural': 'Cartórios',
            },
        ),
        migrations.AddField(
            model_name='calendarioacademico',
            name='diretoria',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.diretoria', verbose_name='Diretoria'),
        ),
        migrations.AddField(
            model_name='calendarioacademico',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus'),
        ),
        migrations.CreateModel(
            name='Autorizacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[['Resolução', 'Resolução'], ['Portaria', 'Portaria'], ['Lei Federal', 'Lei Federal'], ['Deliberação', 'Deliberação']], max_length=255, verbose_name='Tipo')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('numero', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número')),
                ('adequacao', models.BooleanField(default=False, verbose_name='Adequação')),
                ('funcionamento_tipo', djtools.db.models.CharFieldPlus(blank=True, choices=[['Resolução', 'Resolução'], ['Portaria', 'Portaria'], ['Lei Federal', 'Lei Federal'], ['Deliberação', 'Deliberação']], max_length=255, null=True, verbose_name='Tipo')),
                ('funcionamento_data', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data')),
                ('funcionamento_numero', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('numero_publicacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Seção da Publicação')),
                ('data_publicacao', djtools.db.models.DateFieldPlus(blank=True, null=True, verbose_name='Data da Publicação')),
                ('veiculo_publicacao', djtools.db.models.CharFieldPlus(blank=True, choices=[['DOU', 'DOU']], max_length=255, null=True, verbose_name='Veículo da Publicação')),
                ('secao_publicacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Seção da Publicação')),
                ('pagina_publicacao', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Página da Publicação')),
                ('matriz_curso', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matrizcurso', verbose_name='Matriz Curso')),
            ],
            options={
                'verbose_name': 'Autorização',
                'verbose_name_plural': 'Autorizações',
            },
        ),
        migrations.CreateModel(
            name='AulaCampo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('finalidade', models.TextField(verbose_name='Finalidade')),
                ('roteiro', models.TextField(verbose_name='Roteiro')),
                ('data_partida', djtools.db.models.DateFieldPlus(verbose_name='Data de Partida')),
                ('data_chegada', djtools.db.models.DateFieldPlus(verbose_name='Data de Chegada')),
                ('situacao', models.IntegerField(choices=[[1, 'Agendada'], [2, 'Realizada'], [3, 'Cancelada']], default=1, verbose_name='Situação')),
                ('alunos', djtools.db.models.ManyToManyFieldPlus(through='edu.AlunoAulaCampo', to='edu.Aluno')),
                ('configuracao_seguro', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.configuracaoseguro')),
                ('responsaveis', djtools.db.models.ManyToManyFieldPlus(to='rh.Servidor', verbose_name='Responsáveis')),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.unidadeorganizacional', verbose_name='Campus')),
            ],
            options={
                'verbose_name': 'Aula de Campo',
                'verbose_name_plural': 'Aulas de Campo',
            },
        ),
        migrations.AddField(
            model_name='aula',
            name='outros_professor_diario',
            field=djtools.db.models.ManyToManyFieldPlus(blank=True, help_text='A CH desta aula será compartilhada com os professores selecionados', related_name='outros_professor_diario_set', to='edu.ProfessorDiario', verbose_name='Outros Professores'),
        ),
        migrations.AddField(
            model_name='aula',
            name='professor_diario',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.professordiario', verbose_name='Professor'),
        ),
        migrations.CreateModel(
            name='AtoRegulatorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_ato', djtools.db.models.CharFieldPlus(choices=[['Credenciamento', 'Credenciamento'], ['Recredenciamento', 'Recredenciamento']], max_length=255, verbose_name='Tipo')),
                ('tipo', djtools.db.models.CharFieldPlus(choices=[['Resolução', 'Resolução'], ['Portaria', 'Portaria'], ['Lei', 'Lei']], max_length=255, verbose_name='Tipo')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('numero', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número')),
                ('numero_publicao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Número da Publicação')),
                ('data_publicacao', djtools.db.models.DateFieldPlus(verbose_name='Data da Publicação')),
                ('pagina_publicao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Página da Publicação')),
                ('secao_publicao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Seção da Publicação')),
                ('natureza_participacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu.naturezaparticipacao', verbose_name='Natureza de Participação')),
            ],
            options={
                'verbose_name': 'Ato Regulatório',
                'verbose_name_plural': 'Atos Regulatórios',
            },
        ),
        migrations.CreateModel(
            name='AtividadePolo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('data_inicio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Início')),
                ('data_fim', djtools.db.models.DateTimeFieldPlus(verbose_name='Data de Término')),
                ('confirmada', models.BooleanField(default=False, verbose_name='Confirmada')),
                ('polo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.polo', verbose_name='Polo')),
                ('sala', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.sala')),
                ('user', djtools.db.models.CurrentUserField(blank=True, default=djtools.middleware.threadlocals.get_user, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agendador')),
            ],
            options={
                'verbose_name': 'Atividade do Polo',
                'verbose_name_plural': 'Atividades do Polo',
            },
        ),
        migrations.CreateModel(
            name='AtividadeCurricularExtensao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=255, verbose_name='Descrição')),
                ('carga_horaria', models.IntegerField(verbose_name='Carga-Horária')),
                ('id_referencia', models.PositiveIntegerField(null=True, verbose_name='Referência')),
                ('concluida', models.BooleanField(default=False, verbose_name='Concluída')),
                ('aprovada', models.BooleanField(null=True, verbose_name='Aprovada')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
                ('tipo_referencia', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Tipo da Referência')),
            ],
            options={
                'verbose_name': 'Atividade Curricular de Extensão',
                'verbose_name_plural': 'Atividades Curriculares de Extensão',
            },
        ),
        migrations.CreateModel(
            name='AtividadeComplementar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('descricao', djtools.db.models.CharFieldPlus(help_text='Nome da atividade com até 100 caracteres.', max_length=255, verbose_name='Atividade')),
                ('data_atividade', djtools.db.models.DateFieldPlus(verbose_name='Data da Atividade')),
                ('carga_horaria', models.IntegerField(verbose_name='Carga Horária')),
                ('informacoes_complementares', models.TextField(blank=True, null=True, verbose_name='Informações Complementares')),
                ('documento', djtools.db.models.FileFieldPlus(blank=True, help_text='Neste campo você pode anexar um certificado ou comprovante, por exemplo. Tipos de arquivos aceitados: pdf, png ou jpg. Tamanho Máximo: 5Mb', null=True, upload_to='edu/atividade_complementar/', verbose_name='Anexo')),
                ('deferida', models.BooleanField(null=True, verbose_name='Deferida')),
                ('razao_indeferimento', models.TextField(blank=True, null=True, verbose_name='Razão do Indeferimento')),
                ('aluno', djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipoatividadecomplementar', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Atividade Complementar',
                'verbose_name_plural': 'Atividades Complementares',
            },
        ),
        migrations.CreateModel(
            name='AtividadeAprofundamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_letivo', models.PositiveIntegerField(choices=[[1, '1'], [2, '2']], verbose_name='Período Letivo')),
                ('descricao', djtools.db.models.CharFieldPlus(help_text='Nome da atividade com até 100 caracteres.', max_length=255, verbose_name='Atividade')),
                ('data_atividade', djtools.db.models.DateFieldPlus(verbose_name='Data da Atividade')),
                ('carga_horaria', models.IntegerField(verbose_name='Carga Horária')),
                ('informacoes_complementares', models.TextField(blank=True, null=True, verbose_name='Informações Complementares')),
                ('documento', djtools.db.models.FileFieldPlus(help_text='Neste campo você pode anexar um certificado ou comprovante, por exemplo. Tipos de arquivos aceitados: pdf, png ou jpg. Tamanho Máximo: 5Mb', null=True, upload_to='edu/atividade_complementar/', verbose_name='Anexo')),
                ('deferida', models.BooleanField(null=True, verbose_name='Deferida')),
                ('razao_indeferimento', models.TextField(blank=True, null=True, verbose_name='Razão do Indeferimento')),
                ('aluno', djtools.db.models.ForeignKeyPlus(blank=True, on_delete=django.db.models.deletion.CASCADE, to='edu.aluno', verbose_name='Aluno')),
                ('ano_letivo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.ano', verbose_name='Ano Letivo')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipoatividadeaprofundamento', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Atividade Teórico-Prática de Aprofundamento',
                'verbose_name_plural': 'Atividades Teórico-Práticas de Aprofundamento',
            },
        ),
        migrations.CreateModel(
            name='AtaEletronica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consideracoes', models.TextField(verbose_name='Considerações')),
                ('projeto_final', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.projetofinal', verbose_name='Projeto Final')),
            ],
            options={
                'verbose_name': 'Ata Eletrônica',
                'verbose_name_plural': 'Atas Eletrônicas',
            },
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='coordenador_registro_academico',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.coordenadorregistroacademico', verbose_name='Coordenador de Registro Acadêmico'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='diretor_academico',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_diretoracademico', to='rh.funcionario', verbose_name='Diretor Acadêmico'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='diretor_ensino',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_diretorensino', to='rh.funcionario', verbose_name='Diretor de Ensino'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='diretor_geral',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.funcionario', verbose_name='Diretor Geral'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='modelo_documento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.modelodocumento', verbose_name='Modelo de Documento'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='registro_emissao_diploma',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.registroemissaodiploma', verbose_name='Registro de Emissão do Diploma'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='registro_emissao_documento_diploma',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_diploma', to='comum.registroemissaodocumento', verbose_name='Registro do Documento do Diploma'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='registro_emissao_documento_historico',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_historico', to='comum.registroemissaodocumento', verbose_name='Registro do Documento do Histórico'),
        ),
        migrations.AddField(
            model_name='assinaturaeletronica',
            name='reitor',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_reitor', to='rh.servidor', verbose_name='Reitor'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='coordenador_registro_academico',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.coordenadorregistroacademico', verbose_name='Coordenador de Registro Acadêmico'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='diretor_academico',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais_diretoracademico', to='rh.funcionario', verbose_name='Diretor Acadêmico'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='diretor_ensino',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais_diretorensino', to='rh.funcionario', verbose_name='Diretor de Ensino'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='diretor_geral',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.funcionario', verbose_name='Diretor Geral'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='modelo_documento',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu.modelodocumento', verbose_name='Modelo de Documento'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='registro_emissao_diploma',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.registroemissaodiploma', verbose_name='Registro de Emissão do Diploma'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='registro_emissao_documento_diploma',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais_diploma', to='comum.registroemissaodocumento', verbose_name='Registro do Documento do Diploma'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='registro_emissao_documento_historico',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais_historico', to='comum.registroemissaodocumento', verbose_name='Registro do Documento do Histórico'),
        ),
        migrations.AddField(
            model_name='assinaturadigital',
            name='reitor',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas_digitais_reitor', to='rh.servidor', verbose_name='Reitor'),
        ),
        migrations.CreateModel(
            name='AssinaturaAtaEletronica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Assinatura')),
                ('chave', djtools.db.models.CharFieldPlus(max_length=255, null=True, verbose_name='Chave')),
                ('ata', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.ataeletronica', verbose_name='Ata Eletrônica')),
                ('pessoa_fisica', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rh.pessoafisica', verbose_name='Pessoa')),
            ],
            options={
                'verbose_name': 'Assinatura de Ata Eletrônica',
                'verbose_name_plural': 'Assinaturas de Atas Eletrônicas',
            },
        ),
        migrations.CreateModel(
            name='AproveitamentoEstudo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', djtools.db.models.DateFieldPlus(verbose_name='Data')),
                ('escola_origem', djtools.db.models.CharFieldPlus(blank=True, max_length=255, null=True, verbose_name='Escola de Origem')),
                ('frequencia', models.PositiveIntegerField(blank=True, null=True, verbose_name='Frequência')),
                ('nota', djtools.db.models.NotaField(null=True, verbose_name='Nota')),
                ('componente_curricular', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componentecurricular')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
                ('professores', djtools.db.models.ManyToManyFieldPlus(blank=True, help_text='Professor(es) da comissão responsável pelo aproveitamento.', to='edu.Professor', verbose_name='Professores')),
                ('servidores', djtools.db.models.ManyToManyFieldPlus(blank=True, help_text='Servidor(es) da comissão responsável pelo aproveitamento.', to='rh.Servidor', verbose_name='Servidores')),
            ],
            options={
                'verbose_name': 'Aproveitamento de Estudo',
                'verbose_name_plural': 'Aproveitamentos de Estudo',
            },
        ),
        migrations.CreateModel(
            name='AproveitamentoComponente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('componente_curricular', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.componentecurricular')),
                ('matricula_periodo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.matriculaperiodo')),
                ('matriculas_diario', djtools.db.models.ManyToManyFieldPlus(related_name='equivalencias_set', to='edu.MatriculaDiario')),
                ('matriculas_diario_resumidas', djtools.db.models.ManyToManyFieldPlus(related_name='equivalencias_set', to='edu.MatriculaDiarioResumida')),
                ('registros_historico', djtools.db.models.ManyToManyFieldPlus(related_name='equivalencias_set', to='edu.RegistroHistorico')),
            ],
            options={
                'verbose_name': 'Aproveitamento de Componente',
                'verbose_name_plural': 'Aproveitamentos de Componente',
            },
        ),
        migrations.AddField(
            model_name='alunoaulacampo',
            name='aula_campo',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aulacampo', verbose_name='Aula de Campo'),
        ),
        migrations.CreateModel(
            name='AlunoArquivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_original', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Nome Original')),
                ('nome_exibicao', djtools.db.models.CharFieldPlus(blank=True, max_length=50, null=True, verbose_name='Nome para Exibição')),
                ('descricao', djtools.db.models.CharFieldPlus(max_length=100, verbose_name='Descrição')),
                ('data_hora_upload', djtools.db.models.DateTimeFieldPlus(verbose_name='Data e Hora do Upload')),
                ('data_hora_criacao_registro', djtools.db.models.DateTimeFieldPlus(auto_now_add=True, verbose_name='Data e Hora da Criação do Registro')),
                ('validado', models.BooleanField(default=True, null=True, verbose_name='Validado')),
                ('data_validacao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Validação')),
                ('observacao', models.TextField(blank=True, max_length=255, null=True, verbose_name='Observação')),
                ('em_diploma', models.BooleanField(default=False, verbose_name='Contido no diploma vigente')),
                ('tipo_origem_cadastro', models.CharField(choices=[('MANUAL', 'Manual'), ('MATRICULA_ONLINE', 'Matrícula Online')], editable=False, max_length=25, verbose_name='Tipo de Origem do Cadastro')),
                ('aluno', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.aluno')),
                ('arquivo_unico', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.PROTECT, to='rh.arquivounico')),
                ('responsavel_validacao', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Responsável pela Validação')),
                ('tipo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='edu.tipoalunoarquivo')),
            ],
            options={
                'verbose_name': 'Arquivo do Aluno',
                'verbose_name_plural': 'Arquivos do Aluno',
                'ordering': ('-data_hora_upload',),
                'permissions': (('adm_delete_alunoarquivo', 'Pode excluir documento validado da pasta do aluno'),),
            },
        ),
    ]
