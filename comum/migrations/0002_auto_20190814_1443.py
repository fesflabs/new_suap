# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-14 14:43


import comum.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djtools.db.models
import djtools.middleware.threadlocals


class Migration(migrations.Migration):

    dependencies = [('rh', '0001_initial'), ('comum', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='Dependente',
            fields=[
                (
                    'pessoafisica_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.PessoaFisica'),
                ),
                ('matricula', models.CharField(max_length=8, unique=True)),
                ('codigo_condicao', models.CharField(blank=True, max_length=3, null=True)),
                ('grau_parentesco', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.GrauParentesco')),
            ],
            bases=('rh.pessoafisica',),
        ),
        migrations.CreateModel(
            name='InscricaoFiscal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_filhos_menores_21_anos', models.PositiveIntegerField(verbose_name='Número de filhos menores de 21 anos')),
                ('data_inicio_servico_na_instituicao', djtools.db.models.DateFieldPlus(verbose_name='Data do início do serviço na Instituição')),
                ('servidor', djtools.db.models.ForeignKeyPlus(default=comum.utils.tl.get_user, on_delete=django.db.models.deletion.CASCADE, to='rh.Servidor')),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='OcupacaoPrestador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de início')),
                ('data_fim', djtools.db.models.DateFieldPlus(verbose_name='Data fim')),
                ('empresa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.PessoaJuridica')),
                ('ocupacao', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Ocupacao')),
            ],
            options={'verbose_name': 'Ocupação de Prestador de Serviço', 'verbose_name_plural': 'Ocupações dos Prestadores de Serviços'},
        ),
        migrations.CreateModel(
            name='Pensionista',
            fields=[
                (
                    'pessoafisica_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.PessoaFisica'),
                ),
                ('matricula', models.CharField(max_length=8, unique=True, verbose_name='Matrícula do Pensionista')),
                ('numero_processo', models.CharField(blank=True, max_length=15, null=True)),
                ('data_inicio_pagto_beneficio', models.DateField(blank=True, null=True)),
                ('data_fim_pagto_beneficio', models.DateField(blank=True, null=True)),
                ('grau_parentesco', djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.GrauParentesco')),
            ],
            bases=('rh.pessoafisica',),
        ),
        migrations.CreateModel(
            name='PessoaEndereco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('numero', models.CharField(max_length=50, null=True, verbose_name='Nº')),
                ('complemento', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('bairro', djtools.db.models.CharFieldPlus(max_length=255, null=True)),
                ('cep', models.CharField(max_length=9, null=True, verbose_name='CEP')),
                ('via_form_suap', models.BooleanField(default=False, verbose_name='Via SUAP?')),
                ('municipio', djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.Municipio', verbose_name='Município')),
                ('pessoa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Pessoa')),
            ],
            options={'verbose_name': 'Endereço', 'verbose_name_plural': 'Endereços'},
        ),
        migrations.CreateModel(
            name='PessoaTelefone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=45, verbose_name='Número')),
                ('ramal', models.CharField(blank=True, max_length=5)),
                ('observacao', models.CharField(blank=True, max_length=50, verbose_name='Observação')),
                ('pessoa', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Pessoa')),
            ],
            options={'verbose_name': 'Telefone', 'verbose_name_plural': 'Telefones'},
        ),
        migrations.CreateModel(
            name='Predio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ativo', models.BooleanField(default=True)),
                ('uo', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus')),
            ],
            options={'verbose_name': 'Prédio', 'verbose_name_plural': 'Prédios', 'ordering': ['uo__setor__sigla', 'nome']},
        ),
        migrations.CreateModel(
            name='PrestadorServico',
            fields=[
                (
                    'funcionario_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.Funcionario'),
                ),
                ('ativo', models.BooleanField(default=True, help_text='Somente prestadores de serviço ativos podem usar os terminais de ponto e chaves', verbose_name='Ativo')),
                ('matricula', djtools.db.models.CharFieldPlus(db_index=True, max_length=30, verbose_name='Matrícula')),
                ('areas_de_conhecimento', djtools.db.models.ManyToManyFieldPlus(blank=True, to='rh.AreaConhecimento')),
            ],
            options={
                'verbose_name': 'Prestador de serviço',
                'verbose_name_plural': 'Prestadores de serviço',
                'permissions': (('eh_prestador', 'Prestador de Serviço'),)
            },
            bases=('rh.funcionario',),
        ),
        migrations.CreateModel(
            name='RepresentanteLegal',
            fields=[
                (
                    'pessoafisica_ptr',
                    models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rh.PessoaFisica'),
                ),
                ('matricula', models.CharField(max_length=7, unique=True)),
            ],
            options={'verbose_name': 'Representante Legal', 'verbose_name_plural': 'Representantes Legais'},
            bases=('rh.pessoafisica',),
        ),
        migrations.CreateModel(
            name='ReservaSala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data/Hora de Início')),
                ('data_fim', djtools.db.models.DateTimeFieldPlus(verbose_name='Data/Hora Final')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Cancelada')),
                ('justificativa_cancelamento', models.TextField(blank=True, verbose_name='Justificativa do Cancelamento')),
                ('data_cancelamento', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Avaliação')),
                ('ocorreu', models.NullBooleanField(verbose_name='Atividade Ocorreu')),
                ('motivo_nao_ocorreu', models.TextField(blank=True, verbose_name='Motivo da Atividade Não Ter Ocorrido')),
            ],
            options={'verbose_name': 'Reserva de Sala', 'verbose_name_plural': 'Reservas de Salas'},
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('agendavel', models.BooleanField(default=False, verbose_name='Agendável')),
                ('capacidade', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade da sala (em número de pessoas)')),
                ('restringir_agendamentos_no_campus', models.BooleanField(default=False, verbose_name='Agendamento apenas por servidores do campus')),
                (
                    'informacoes_complementares',
                    models.TextField(
                        blank=True,
                        help_text='As informações complementares serão exibidas para o usuário durante a solicitação de agendamento',
                        null=True,
                        verbose_name='Informações complementares',
                    ),
                ),
                (
                    'avaliadores_de_agendamentos',
                    djtools.db.models.ManyToManyFieldPlus(
                        blank=True,
                        help_text='Informe os usuários responsáveis por responder às solicitações de agendamento. Digite parte da matrícula ou primeiro nome.',
                        related_name='salas_avaliadas',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Avaliadores de Agendamento',
                    ),
                ),
                ('predio', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Predio', verbose_name='Prédio')),
                (
                    'setores',
                    djtools.db.models.ManyToManyFieldPlus(
                        blank=True, help_text='Informe os setores que estão na sala. Esse campo é opcional e meramente informativo.', to='rh.Setor'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Salas',
                'ordering': ('nome',),
                'permissions': (('pode_avaliar_solicitacao_reserva_de_sala', 'Pode avaliar solicitação reserva de sala'),),
            },
        ),
        migrations.CreateModel(
            name='SetorTelefone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', djtools.db.models.BrTelefoneField(max_length=14, verbose_name='Número')),
                ('ramal', models.CharField(blank=True, max_length=5)),
                ('observacao', models.CharField(blank=True, max_length=50, verbose_name='Observação')),
                ('setor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor')),
            ],
            options={'verbose_name': 'Telefone do Setor', 'verbose_name_plural': 'Telefones do Setor'},
        ),
        migrations.CreateModel(
            name='SolicitacaoReservaSala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_solicitacao', djtools.db.models.DateTimeFieldPlus(verbose_name='Data da Solicitação')),
                ('data_inicio', djtools.db.models.DateFieldPlus(verbose_name='Data de Início')),
                ('hora_inicio', djtools.db.models.TimeFieldPlus(verbose_name='Hora de Início')),
                ('data_hora_inicio', djtools.db.models.DateTimeFieldPlus(verbose_name='Data Hora Início')),
                ('data_fim', djtools.db.models.DateFieldPlus(verbose_name='Data de Fim')),
                ('hora_fim', djtools.db.models.TimeFieldPlus(verbose_name='Hora de Fim')),
                ('data_hora_fim', djtools.db.models.DateTimeFieldPlus(verbose_name='Data Hora Início')),
                ('justificativa', models.TextField()),
                (
                    'recorrencia',
                    djtools.db.models.CharFieldPlus(
                        choices=[('evento_unico', 'Evento único'), ('semanalmente', 'Semanalmente'), ('quinzenalmente', 'Quinzenalmente'), ('mensalmente', 'Mensalmente')],
                        max_length=255,
                        verbose_name='Recorrência',
                    ),
                ),
                (
                    'anexo',
                    djtools.db.models.FileFieldPlus(
                        blank=True,
                        null=True,
                        upload_to='upload/comum/solicitacao_reserva_sala/',
                        filetypes=['doc', 'pdf'],
                        verbose_name='Anexo',
                    ),
                ),
                ('recorrencia_segunda', models.BooleanField(default=False, verbose_name='Segunda')),
                ('recorrencia_terca', models.BooleanField(default=False, verbose_name='Terça')),
                ('recorrencia_quarta', models.BooleanField(default=False, verbose_name='Quarta')),
                ('recorrencia_quinta', models.BooleanField(default=False, verbose_name='Quinta')),
                ('recorrencia_sexta', models.BooleanField(default=False, verbose_name='Sexta')),
                ('recorrencia_sabado', models.BooleanField(default=False, verbose_name='Sábado')),
                ('recorrencia_domingo', models.BooleanField(default=False, verbose_name='Domingo')),
                (
                    'status',
                    djtools.db.models.CharFieldPlus(
                        choices=[
                            ('deferida', 'Deferida'),
                            ('indeferida', 'Indeferida'),
                            ('parcialmente_deferida', 'Parcialmente Deferida'),
                            ('aguardando_avaliacao', 'Aguardando Avaliação'),
                        ],
                        default='aguardando_avaliacao',
                        max_length=255,
                        verbose_name='Situação',
                    ),
                ),
                ('data_avaliacao', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Avaliação')),
                ('observacao_avaliador', models.TextField(blank=True, verbose_name='Observação')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Cancelada')),
                ('justificativa_cancelamento', models.TextField(blank=True, verbose_name='Justificativa do Cancelamento')),
                ('data_cancelamento', djtools.db.models.DateTimeFieldPlus(null=True, verbose_name='Data da Avaliação')),
                (
                    'avaliador',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='solicitacao_reserva_avaliador',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={'verbose_name': 'Solicitação de Reserva de Sala', 'verbose_name_plural': 'Solicitações de Reserva de Sala'},
        ),
        migrations.CreateModel(
            name='UsuarioGrupoSetor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setor', djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='rh.Setor')),
                ('usuario_grupo', djtools.db.models.ForeignKeyPlus(db_column='usuariogrupo_id', on_delete=django.db.models.deletion.CASCADE, to='comum.UsuarioGrupo')),
            ],
            options={'verbose_name': 'Vínculo de Usuário em Setor', 'verbose_name_plural': 'Vínculos de Usuário em Setor', 'db_table': 'comum_usuariogrupo_setores'},
        ),
        migrations.AddField(
            model_name='configuracaoimpressaodocumento',
            name='relacao_impressao',
            field=models.ManyToManyField(related_name='uo_relacao_impressao_set', to='rh.UnidadeOrganizacional', verbose_name='Relação de Impressão'),
        ),
        migrations.AddField(
            model_name='configuracaoimpressaodocumento',
            name='uo',
            field=djtools.db.models.ForeignKeyPlus(default=1, on_delete=django.db.models.deletion.CASCADE, to='rh.UnidadeOrganizacional', verbose_name='Campus'),
            preserve_default=False,
        ),
        migrations.AddField(model_name='documentocontroletipo', name='abrangencia', field=djtools.db.models.ManyToManyFieldPlus(to='rh.Situacao', verbose_name='Abrangência')),
        migrations.AddField(
            model_name='vinculo',
            name='pessoa',
            field=djtools.db.models.ForeignKeyPlus(default=1, on_delete=django.db.models.deletion.CASCADE, to='rh.Pessoa', verbose_name='Pessoa'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vinculo', name='setor', field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rh.Setor', verbose_name='Setor')
        ),
        migrations.CreateModel(
            name='IndisponibilizacaoSala',
            fields=[
                (
                    'reservasala_ptr',
                    models.OneToOneField(
                        auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comum.ReservaSala'
                    ),
                ),
                ('data', djtools.db.models.DateTimeFieldPlus()),
                ('justificativa', models.TextField()),
                (
                    'usuario',
                    djtools.db.models.CurrentUserField(
                        blank=True,
                        default=djtools.middleware.threadlocals.get_user,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='indisponibilizacao_sala_usuario',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={'verbose_name': 'Indisponibilização de Reserva de Sala', 'verbose_name_plural': 'Indisponibilizações de Reserva de Salas'},
            bases=('comum.reservasala',),
        ),
        migrations.AddField(model_name='solicitacaoreservasala', name='interessados_vinculos', field=djtools.db.models.ManyToManyFieldPlus(blank=True, to='comum.Vinculo')),
        migrations.AddField(
            model_name='solicitacaoreservasala',
            name='sala',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Sala', verbose_name='Sala solicitada'),
        ),
        migrations.AddField(
            model_name='solicitacaoreservasala',
            name='solicitante',
            field=djtools.db.models.ForeignKeyPlus(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='solicitacao_reserva_solicitante',
                to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='reservasala',
            name='cancelada_por',
            field=djtools.db.models.CurrentUserField(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reservasala',
            name='sala',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.Sala', verbose_name='Sala Solicitada'),
        ),
        migrations.AddField(
            model_name='reservasala',
            name='solicitacao',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.SolicitacaoReservaSala', verbose_name='Solicitação de Sala'),
        ),
        migrations.AddField(
            model_name='prestadorservico',
            name='pessoa_fisica',
            field=djtools.db.models.ForeignKeyPlus(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='prestadores', to='rh.PessoaFisica'),
        ),
        migrations.AddField(
            model_name='pensionista',
            name='representante_legal',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.RepresentanteLegal'),
        ),
        migrations.AddField(
            model_name='ocupacaoprestador', name='prestador', field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, to='comum.PrestadorServico')
        ),
        migrations.AddField(
            model_name='ocupacaoprestador',
            name='setor_suap',
            field=djtools.db.models.ForeignKeyPlus(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cargo_funcao_setor_suap', to='rh.Setor'),
        ),
        migrations.AddField(
            model_name='dependente',
            name='representante_legal',
            field=djtools.db.models.ForeignKeyPlus(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.RepresentanteLegal'),
        ),
        migrations.AddField(
            model_name='dependente',
            name='servidor',
            field=djtools.db.models.ForeignKeyPlus(on_delete=django.db.models.deletion.CASCADE, related_name='servidordependente', to='rh.Servidor'),
        ),
        migrations.AddField(
            model_name='beneficiodependente',
            name='dependente',
            field=djtools.db.models.ForeignKeyPlus(default=1, on_delete=django.db.models.deletion.CASCADE, to='comum.Dependente'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(name='sala', unique_together=set([('nome', 'predio')])),
        migrations.AlterUniqueTogether(name='predio', unique_together=set([('nome', 'uo')])),
    ]
